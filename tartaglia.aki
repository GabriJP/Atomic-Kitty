int tritar(int m, int n):
    if n is 0 or n is m:
        return 1
    else:
        return tritar(m-1, n-1) + tritar(m-1, n)

int tritar2((int, int)n):
    int n0 = n[0]
    int n1 = n[1]
    if n1 is 0 or n1 is n0:
        return 1
    else:
        return tritar(n0-1, n1-1) + tritar(n0-1, n1)

int tritarTupla((int, int)n):
    if n[1] is 0 or n[1] is n[0]:
        return 1
    else:
        return tritar(n[0]-1, n[1]-1) + tritar(n[0]-1, n[1])

for i in 0..11:
    print(tritar(10, i))
    print('\n')
    print(tritar2((10, i)))
    print('\n')
    print(tritarTupla((10, i)))
    print('\n')
    print('\n')
