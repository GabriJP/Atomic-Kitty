Gram√°tica

    0 $accept: lista $end

    1 $@1: %empty

    2 lista: error FIN_DE_LINEA $@1 lista
    3      | %empty
    4      | func FIN_DE_LINEA lista

    5 exp_l: exp
    6      | exp ',' exp_l

    7 tupla: '(' exp_l ')'

    8 tupla_decl: '(' tipo_l ')'

    9 func_call: IDENTIFICADOR tupla
   10          | IDENTIFICADOR '(' ')'

   11 exp: exp '-' exp
   12    | exp '+' exp
   13    | exp '/' exp
   14    | exp '*' exp
   15    | exp AND exp
   16    | exp OR exp
   17    | is
   18    | func_call
   19    | VALOR_INT
   20    | VALOR_FLOAT
   21    | VALOR_DOUBLE
   22    | VALOR_LONG
   23    | VALOR_BOOL
   24    | VALOR_CHAR
   25    | VALOR_STRING
   26    | IDENTIFICADOR

   27 tipo: tupla_decl
   28     | INT
   29     | FLOAT
   30     | LONG
   31     | DOUBLE
   32     | BOOL
   33     | STRING
   34     | CHAR

   35 tipo_l: tipo
   36       | tipo ',' tipo_l

   37 args: tipo IDENTIFICADOR
   38     | tipo IDENTIFICADOR ',' tipo_l

   39 init: tipo IDENTIFICADOR '=' exp

   40 asign: IDENTIFICADOR '=' exp

   41 decl: tipo IDENTIFICADOR

   42 in: IDENTIFICADOR IN rango
   43   | IDENTIFICADOR NOTIN rango

   44 is: exp IS exp
   45   | exp NOTIS exp

   46 inst: exp
   47     | init
   48     | asign
   49     | decl
   50     | when
   51     | for
   52     | while
   53     | if
   54     | bloque
   55     | RETURN exp

   56 inst_l: inst
   57       | inst FIN_DE_LINEA inst_l

   58 bloque: ABREBLOQUE CIERRABLOQUE
   59       | ABREBLOQUE inst_l CIERRABLOQUE

   60 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   61     | tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque
   62     | VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   63     | VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

   64 cases: exp WHEN_CASE exp
   65      | exp WHEN_CASE exp FIN_DE_LINEA cases

   66 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   67     | WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

   68 for: FOR in ':' FIN_DE_LINEA bloque

   69 if: IF exp ':' FIN_DE_LINEA bloque
   70   | IF exp ':' FIN_DE_LINEA bloque else
   71   | IF exp ':' FIN_DE_LINEA bloque elif_l
   72   | IF exp ':' FIN_DE_LINEA bloque elif_l else

   73 elif_l: ELIF exp ':' FIN_DE_LINEA bloque
   74       | ELIF exp ':' FIN_DE_LINEA bloque elif_l

   75 else: ELSE exp ':' FIN_DE_LINEA bloque

   76 while: WHILE exp ':' FIN_DE_LINEA bloque

   77 rango: exp RANGE exp
   78      | exp RANGE exp ',' exp


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 7 8 10 60 61 62 63
')' (41) 7 8 10 60 61 62 63
'*' (42) 14
'+' (43) 12
',' (44) 6 36 38 78
'-' (45) 11
'/' (47) 13
':' (58) 60 61 62 63 66 67 68 69 70 71 72 73 74 75 76
'=' (61) 39 40
error (256) 2
VALOR_FLOAT (258) 20
VALOR_DOUBLE (259) 21
VALOR_INT (260) 19
VALOR_BOOL (261) 23
VALOR_LONG (262) 22
VALOR_CHAR (263) 24
VALOR_STRING (264) 25
IDENTIFICADOR (265) 9 10 26 37 38 39 40 41 42 43 60 61 62 63
FIN_DE_LINEA (266) 2 4 57 60 61 62 63 65 66 67 68 69 70 71 72 73 74
    75 76
INT (267) 28
LONG (268) 30
FLOAT (269) 29
DOUBLE (270) 31
BOOL (271) 32
STRING (272) 33
VOID (273) 62 63
CHAR (274) 34
WHEN (275) 66 67
WHEN_CASE (276) 64 65
IF (277) 69 70 71 72
ELIF (278) 73 74
ELSE (279) 75
WHILE (280) 76
FOR (281) 68
NOTIS (282) 45
IS (283) 44
OR (284) 16
AND (285) 15
RANGE (286) 77 78
RETURN (287) 55
ABREBLOQUE (288) 58 59 66 67
CIERRABLOQUE (289) 58 59 66 67
IN (290) 42
NOTIN (291) 43


No terminales con las reglas donde aparecen

$accept (46)
    en la izquierda: 0
lista (47)
    en la izquierda: 2 3 4, en la derecha: 0 2 4
$@1 (48)
    en la izquierda: 1, en la derecha: 2
exp_l (49)
    en la izquierda: 5 6, en la derecha: 6 7
tupla (50)
    en la izquierda: 7, en la derecha: 9
tupla_decl (51)
    en la izquierda: 8, en la derecha: 27
func_call (52)
    en la izquierda: 9 10, en la derecha: 18
exp (53)
    en la izquierda: 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26,
    en la derecha: 5 6 11 12 13 14 15 16 39 40 44 45 46 55 64 65 66
    69 70 71 72 73 74 75 76 77 78
tipo (54)
    en la izquierda: 27 28 29 30 31 32 33 34, en la derecha: 35 36
    37 38 39 41 60 61
tipo_l (55)
    en la izquierda: 35 36, en la derecha: 8 36 38
args (56)
    en la izquierda: 37 38, en la derecha: 61 63
init (57)
    en la izquierda: 39, en la derecha: 47
asign (58)
    en la izquierda: 40, en la derecha: 48
decl (59)
    en la izquierda: 41, en la derecha: 49
in (60)
    en la izquierda: 42 43, en la derecha: 68
is (61)
    en la izquierda: 44 45, en la derecha: 17
inst (62)
    en la izquierda: 46 47 48 49 50 51 52 53 54 55, en la derecha:
    56 57
inst_l (63)
    en la izquierda: 56 57, en la derecha: 57 59
bloque (64)
    en la izquierda: 58 59, en la derecha: 54 60 61 62 63 68 69 70
    71 72 73 74 75 76
func (65)
    en la izquierda: 60 61 62 63, en la derecha: 4
cases (66)
    en la izquierda: 64 65, en la derecha: 65 66 67
when (67)
    en la izquierda: 66 67, en la derecha: 50
for (68)
    en la izquierda: 68, en la derecha: 51
if (69)
    en la izquierda: 69 70 71 72, en la derecha: 53
elif_l (70)
    en la izquierda: 73 74, en la derecha: 71 72 74
else (71)
    en la izquierda: 75, en la derecha: 70 72
while (72)
    en la izquierda: 76, en la derecha: 52
rango (73)
    en la izquierda: 77 78, en la derecha: 42 43 67


Estado 0

    0 $accept: . lista $end

    error   desplazar e ir al estado 1
    INT     desplazar e ir al estado 2
    LONG    desplazar e ir al estado 3
    FLOAT   desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    BOOL    desplazar e ir al estado 6
    STRING  desplazar e ir al estado 7
    VOID    desplazar e ir al estado 8
    CHAR    desplazar e ir al estado 9
    '('     desplazar e ir al estado 10

    $end  reduce usando la regla 3 (lista)

    lista       ir al estado 11
    tupla_decl  ir al estado 12
    tipo        ir al estado 13
    func        ir al estado 14


Estado 1

    2 lista: error . FIN_DE_LINEA $@1 lista

    FIN_DE_LINEA  desplazar e ir al estado 15


Estado 2

   28 tipo: INT .

    $default  reduce usando la regla 28 (tipo)


Estado 3

   30 tipo: LONG .

    $default  reduce usando la regla 30 (tipo)


Estado 4

   29 tipo: FLOAT .

    $default  reduce usando la regla 29 (tipo)


Estado 5

   31 tipo: DOUBLE .

    $default  reduce usando la regla 31 (tipo)


Estado 6

   32 tipo: BOOL .

    $default  reduce usando la regla 32 (tipo)


Estado 7

   33 tipo: STRING .

    $default  reduce usando la regla 33 (tipo)


Estado 8

   62 func: VOID . IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   63     | VOID . IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 16


Estado 9

   34 tipo: CHAR .

    $default  reduce usando la regla 34 (tipo)


Estado 10

    8 tupla_decl: '(' . tipo_l ')'

    INT     desplazar e ir al estado 2
    LONG    desplazar e ir al estado 3
    FLOAT   desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    BOOL    desplazar e ir al estado 6
    STRING  desplazar e ir al estado 7
    CHAR    desplazar e ir al estado 9
    '('     desplazar e ir al estado 10

    tupla_decl  ir al estado 12
    tipo        ir al estado 17
    tipo_l      ir al estado 18


Estado 11

    0 $accept: lista . $end

    $end  desplazar e ir al estado 19


Estado 12

   27 tipo: tupla_decl .

    $default  reduce usando la regla 27 (tipo)


Estado 13

   60 func: tipo . IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   61     | tipo . IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 20


Estado 14

    4 lista: func . FIN_DE_LINEA lista

    FIN_DE_LINEA  desplazar e ir al estado 21


Estado 15

    2 lista: error FIN_DE_LINEA . $@1 lista

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 22


Estado 16

   62 func: VOID IDENTIFICADOR . '(' ')' ':' FIN_DE_LINEA bloque
   63     | VOID IDENTIFICADOR . '(' args ')' ':' FIN_DE_LINEA bloque

    '('  desplazar e ir al estado 23


Estado 17

   35 tipo_l: tipo .
   36       | tipo . ',' tipo_l

    ','  desplazar e ir al estado 24

    $default  reduce usando la regla 35 (tipo_l)


Estado 18

    8 tupla_decl: '(' tipo_l . ')'

    ')'  desplazar e ir al estado 25


Estado 19

    0 $accept: lista $end .

    $default  aceptar


Estado 20

   60 func: tipo IDENTIFICADOR . '(' ')' ':' FIN_DE_LINEA bloque
   61     | tipo IDENTIFICADOR . '(' args ')' ':' FIN_DE_LINEA bloque

    '('  desplazar e ir al estado 26


Estado 21

    4 lista: func FIN_DE_LINEA . lista

    error   desplazar e ir al estado 1
    INT     desplazar e ir al estado 2
    LONG    desplazar e ir al estado 3
    FLOAT   desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    BOOL    desplazar e ir al estado 6
    STRING  desplazar e ir al estado 7
    VOID    desplazar e ir al estado 8
    CHAR    desplazar e ir al estado 9
    '('     desplazar e ir al estado 10

    $end  reduce usando la regla 3 (lista)

    lista       ir al estado 27
    tupla_decl  ir al estado 12
    tipo        ir al estado 13
    func        ir al estado 14


Estado 22

    2 lista: error FIN_DE_LINEA $@1 . lista

    error   desplazar e ir al estado 1
    INT     desplazar e ir al estado 2
    LONG    desplazar e ir al estado 3
    FLOAT   desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    BOOL    desplazar e ir al estado 6
    STRING  desplazar e ir al estado 7
    VOID    desplazar e ir al estado 8
    CHAR    desplazar e ir al estado 9
    '('     desplazar e ir al estado 10

    $end  reduce usando la regla 3 (lista)

    lista       ir al estado 28
    tupla_decl  ir al estado 12
    tipo        ir al estado 13
    func        ir al estado 14


Estado 23

   62 func: VOID IDENTIFICADOR '(' . ')' ':' FIN_DE_LINEA bloque
   63     | VOID IDENTIFICADOR '(' . args ')' ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 2
    LONG    desplazar e ir al estado 3
    FLOAT   desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    BOOL    desplazar e ir al estado 6
    STRING  desplazar e ir al estado 7
    CHAR    desplazar e ir al estado 9
    '('     desplazar e ir al estado 10
    ')'     desplazar e ir al estado 29

    tupla_decl  ir al estado 12
    tipo        ir al estado 30
    args        ir al estado 31


Estado 24

   36 tipo_l: tipo ',' . tipo_l

    INT     desplazar e ir al estado 2
    LONG    desplazar e ir al estado 3
    FLOAT   desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    BOOL    desplazar e ir al estado 6
    STRING  desplazar e ir al estado 7
    CHAR    desplazar e ir al estado 9
    '('     desplazar e ir al estado 10

    tupla_decl  ir al estado 12
    tipo        ir al estado 17
    tipo_l      ir al estado 32


Estado 25

    8 tupla_decl: '(' tipo_l ')' .

    $default  reduce usando la regla 8 (tupla_decl)


Estado 26

   60 func: tipo IDENTIFICADOR '(' . ')' ':' FIN_DE_LINEA bloque
   61     | tipo IDENTIFICADOR '(' . args ')' ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 2
    LONG    desplazar e ir al estado 3
    FLOAT   desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    BOOL    desplazar e ir al estado 6
    STRING  desplazar e ir al estado 7
    CHAR    desplazar e ir al estado 9
    '('     desplazar e ir al estado 10
    ')'     desplazar e ir al estado 33

    tupla_decl  ir al estado 12
    tipo        ir al estado 30
    args        ir al estado 34


Estado 27

    4 lista: func FIN_DE_LINEA lista .

    $default  reduce usando la regla 4 (lista)


Estado 28

    2 lista: error FIN_DE_LINEA $@1 lista .

    $default  reduce usando la regla 2 (lista)


Estado 29

   62 func: VOID IDENTIFICADOR '(' ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 35


Estado 30

   37 args: tipo . IDENTIFICADOR
   38     | tipo . IDENTIFICADOR ',' tipo_l

    IDENTIFICADOR  desplazar e ir al estado 36


Estado 31

   63 func: VOID IDENTIFICADOR '(' args . ')' ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 37


Estado 32

   36 tipo_l: tipo ',' tipo_l .

    $default  reduce usando la regla 36 (tipo_l)


Estado 33

   60 func: tipo IDENTIFICADOR '(' ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 38


Estado 34

   61 func: tipo IDENTIFICADOR '(' args . ')' ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 39


Estado 35

   62 func: VOID IDENTIFICADOR '(' ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 40


Estado 36

   37 args: tipo IDENTIFICADOR .
   38     | tipo IDENTIFICADOR . ',' tipo_l

    ','  desplazar e ir al estado 41

    $default  reduce usando la regla 37 (args)


Estado 37

   63 func: VOID IDENTIFICADOR '(' args ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 42


Estado 38

   60 func: tipo IDENTIFICADOR '(' ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 43


Estado 39

   61 func: tipo IDENTIFICADOR '(' args ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 44


Estado 40

   62 func: VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 46


Estado 41

   38 args: tipo IDENTIFICADOR ',' . tipo_l

    INT     desplazar e ir al estado 2
    LONG    desplazar e ir al estado 3
    FLOAT   desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    BOOL    desplazar e ir al estado 6
    STRING  desplazar e ir al estado 7
    CHAR    desplazar e ir al estado 9
    '('     desplazar e ir al estado 10

    tupla_decl  ir al estado 12
    tipo        ir al estado 17
    tipo_l      ir al estado 47


Estado 42

   63 func: VOID IDENTIFICADOR '(' args ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 48


Estado 43

   60 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 49


Estado 44

   61 func: tipo IDENTIFICADOR '(' args ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 50


Estado 45

   58 bloque: ABREBLOQUE . CIERRABLOQUE
   59       | ABREBLOQUE . inst_l CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 58
    INT            desplazar e ir al estado 2
    LONG           desplazar e ir al estado 3
    FLOAT          desplazar e ir al estado 4
    DOUBLE         desplazar e ir al estado 5
    BOOL           desplazar e ir al estado 6
    STRING         desplazar e ir al estado 7
    CHAR           desplazar e ir al estado 9
    WHEN           desplazar e ir al estado 59
    IF             desplazar e ir al estado 60
    WHILE          desplazar e ir al estado 61
    FOR            desplazar e ir al estado 62
    RETURN         desplazar e ir al estado 63
    ABREBLOQUE     desplazar e ir al estado 45
    CIERRABLOQUE   desplazar e ir al estado 64
    '('            desplazar e ir al estado 10

    tupla_decl  ir al estado 12
    func_call   ir al estado 65
    exp         ir al estado 66
    tipo        ir al estado 67
    init        ir al estado 68
    asign       ir al estado 69
    decl        ir al estado 70
    is          ir al estado 71
    inst        ir al estado 72
    inst_l      ir al estado 73
    bloque      ir al estado 74
    when        ir al estado 75
    for         ir al estado 76
    if          ir al estado 77
    while       ir al estado 78


Estado 46

   62 func: VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 62 (func)


Estado 47

   38 args: tipo IDENTIFICADOR ',' tipo_l .

    $default  reduce usando la regla 38 (args)


Estado 48

   63 func: VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 79


Estado 49

   60 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 60 (func)


Estado 50

   61 func: tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 80


Estado 51

   20 exp: VALOR_FLOAT .

    $default  reduce usando la regla 20 (exp)


Estado 52

   21 exp: VALOR_DOUBLE .

    $default  reduce usando la regla 21 (exp)


Estado 53

   19 exp: VALOR_INT .

    $default  reduce usando la regla 19 (exp)


Estado 54

   23 exp: VALOR_BOOL .

    $default  reduce usando la regla 23 (exp)


Estado 55

   22 exp: VALOR_LONG .

    $default  reduce usando la regla 22 (exp)


Estado 56

   24 exp: VALOR_CHAR .

    $default  reduce usando la regla 24 (exp)


Estado 57

   25 exp: VALOR_STRING .

    $default  reduce usando la regla 25 (exp)


Estado 58

    9 func_call: IDENTIFICADOR . tupla
   10          | IDENTIFICADOR . '(' ')'
   26 exp: IDENTIFICADOR .
   40 asign: IDENTIFICADOR . '=' exp

    '='  desplazar e ir al estado 81
    '('  desplazar e ir al estado 82

    $default  reduce usando la regla 26 (exp)

    tupla  ir al estado 83


Estado 59

   66 when: WHEN . exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   67     | WHEN . rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 85
    is         ir al estado 71
    rango      ir al estado 86


Estado 60

   69 if: IF . exp ':' FIN_DE_LINEA bloque
   70   | IF . exp ':' FIN_DE_LINEA bloque else
   71   | IF . exp ':' FIN_DE_LINEA bloque elif_l
   72   | IF . exp ':' FIN_DE_LINEA bloque elif_l else

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 87
    is         ir al estado 71


Estado 61

   76 while: WHILE . exp ':' FIN_DE_LINEA bloque

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 88
    is         ir al estado 71


Estado 62

   68 for: FOR . in ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 89

    in  ir al estado 90


Estado 63

   55 inst: RETURN . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 91
    is         ir al estado 71


Estado 64

   58 bloque: ABREBLOQUE CIERRABLOQUE .

    $default  reduce usando la regla 58 (bloque)


Estado 65

   18 exp: func_call .

    $default  reduce usando la regla 18 (exp)


Estado 66

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   46 inst: exp .

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 46 (inst)


Estado 67

   39 init: tipo . IDENTIFICADOR '=' exp
   41 decl: tipo . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 100


Estado 68

   47 inst: init .

    $default  reduce usando la regla 47 (inst)


Estado 69

   48 inst: asign .

    $default  reduce usando la regla 48 (inst)


Estado 70

   49 inst: decl .

    $default  reduce usando la regla 49 (inst)


Estado 71

   17 exp: is .

    $default  reduce usando la regla 17 (exp)


Estado 72

   56 inst_l: inst .
   57       | inst . FIN_DE_LINEA inst_l

    FIN_DE_LINEA  desplazar e ir al estado 101

    $default  reduce usando la regla 56 (inst_l)


Estado 73

   59 bloque: ABREBLOQUE inst_l . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 102


Estado 74

   54 inst: bloque .

    $default  reduce usando la regla 54 (inst)


Estado 75

   50 inst: when .

    $default  reduce usando la regla 50 (inst)


Estado 76

   51 inst: for .

    $default  reduce usando la regla 51 (inst)


Estado 77

   53 inst: if .

    $default  reduce usando la regla 53 (inst)


Estado 78

   52 inst: while .

    $default  reduce usando la regla 52 (inst)


Estado 79

   63 func: VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 63 (func)


Estado 80

   61 func: tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 61 (func)


Estado 81

   40 asign: IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 103
    is         ir al estado 71


Estado 82

    7 tupla: '(' . exp_l ')'
   10 func_call: IDENTIFICADOR '(' . ')'

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84
    ')'            desplazar e ir al estado 104

    exp_l      ir al estado 105
    func_call  ir al estado 65
    exp        ir al estado 106
    is         ir al estado 71


Estado 83

    9 func_call: IDENTIFICADOR tupla .

    $default  reduce usando la regla 9 (func_call)


Estado 84

    9 func_call: IDENTIFICADOR . tupla
   10          | IDENTIFICADOR . '(' ')'
   26 exp: IDENTIFICADOR .

    '('  desplazar e ir al estado 82

    $default  reduce usando la regla 26 (exp)

    tupla  ir al estado 83


Estado 85

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   66 when: WHEN exp . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   77 rango: exp . RANGE exp
   78      | exp . RANGE exp ',' exp

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    RANGE  desplazar e ir al estado 107
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99
    ':'    desplazar e ir al estado 108


Estado 86

   67 when: WHEN rango . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    ':'  desplazar e ir al estado 109


Estado 87

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   69 if: IF exp . ':' FIN_DE_LINEA bloque
   70   | IF exp . ':' FIN_DE_LINEA bloque else
   71   | IF exp . ':' FIN_DE_LINEA bloque elif_l
   72   | IF exp . ':' FIN_DE_LINEA bloque elif_l else

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99
    ':'    desplazar e ir al estado 110


Estado 88

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   76 while: WHILE exp . ':' FIN_DE_LINEA bloque

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99
    ':'    desplazar e ir al estado 111


Estado 89

   42 in: IDENTIFICADOR . IN rango
   43   | IDENTIFICADOR . NOTIN rango

    IN     desplazar e ir al estado 112
    NOTIN  desplazar e ir al estado 113


Estado 90

   68 for: FOR in . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 114


Estado 91

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   55 inst: RETURN exp .

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 55 (inst)


Estado 92

   45 is: exp NOTIS . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 115
    is         ir al estado 71


Estado 93

   44 is: exp IS . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 116
    is         ir al estado 71


Estado 94

   16 exp: exp OR . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 117
    is         ir al estado 71


Estado 95

   15 exp: exp AND . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 118
    is         ir al estado 71


Estado 96

   11 exp: exp '-' . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 119
    is         ir al estado 71


Estado 97

   12 exp: exp '+' . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 120
    is         ir al estado 71


Estado 98

   14 exp: exp '*' . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 121
    is         ir al estado 71


Estado 99

   13 exp: exp '/' . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 122
    is         ir al estado 71


Estado 100

   39 init: tipo IDENTIFICADOR . '=' exp
   41 decl: tipo IDENTIFICADOR .

    '='  desplazar e ir al estado 123

    $default  reduce usando la regla 41 (decl)


Estado 101

   57 inst_l: inst FIN_DE_LINEA . inst_l

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 58
    INT            desplazar e ir al estado 2
    LONG           desplazar e ir al estado 3
    FLOAT          desplazar e ir al estado 4
    DOUBLE         desplazar e ir al estado 5
    BOOL           desplazar e ir al estado 6
    STRING         desplazar e ir al estado 7
    CHAR           desplazar e ir al estado 9
    WHEN           desplazar e ir al estado 59
    IF             desplazar e ir al estado 60
    WHILE          desplazar e ir al estado 61
    FOR            desplazar e ir al estado 62
    RETURN         desplazar e ir al estado 63
    ABREBLOQUE     desplazar e ir al estado 45
    '('            desplazar e ir al estado 10

    tupla_decl  ir al estado 12
    func_call   ir al estado 65
    exp         ir al estado 66
    tipo        ir al estado 67
    init        ir al estado 68
    asign       ir al estado 69
    decl        ir al estado 70
    is          ir al estado 71
    inst        ir al estado 72
    inst_l      ir al estado 124
    bloque      ir al estado 74
    when        ir al estado 75
    for         ir al estado 76
    if          ir al estado 77
    while       ir al estado 78


Estado 102

   59 bloque: ABREBLOQUE inst_l CIERRABLOQUE .

    $default  reduce usando la regla 59 (bloque)


Estado 103

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   40 asign: IDENTIFICADOR '=' exp .
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 40 (asign)


Estado 104

   10 func_call: IDENTIFICADOR '(' ')' .

    $default  reduce usando la regla 10 (func_call)


Estado 105

    7 tupla: '(' exp_l . ')'

    ')'  desplazar e ir al estado 125


Estado 106

    5 exp_l: exp .
    6      | exp . ',' exp_l
   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    ','    desplazar e ir al estado 126
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 5 (exp_l)


Estado 107

   77 rango: exp RANGE . exp
   78      | exp RANGE . exp ',' exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 127
    is         ir al estado 71


Estado 108

   66 when: WHEN exp ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 128


Estado 109

   67 when: WHEN rango ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 129


Estado 110

   69 if: IF exp ':' . FIN_DE_LINEA bloque
   70   | IF exp ':' . FIN_DE_LINEA bloque else
   71   | IF exp ':' . FIN_DE_LINEA bloque elif_l
   72   | IF exp ':' . FIN_DE_LINEA bloque elif_l else

    FIN_DE_LINEA  desplazar e ir al estado 130


Estado 111

   76 while: WHILE exp ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 131


Estado 112

   42 in: IDENTIFICADOR IN . rango

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 132
    is         ir al estado 71
    rango      ir al estado 133


Estado 113

   43 in: IDENTIFICADOR NOTIN . rango

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 132
    is         ir al estado 71
    rango      ir al estado 134


Estado 114

   68 for: FOR in ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 135


Estado 115

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   45   | exp NOTIS exp .

    '-'  desplazar e ir al estado 96
    '+'  desplazar e ir al estado 97
    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 45 (is)


Estado 116

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   44   | exp IS exp .
   45   | exp . NOTIS exp

    '-'  desplazar e ir al estado 96
    '+'  desplazar e ir al estado 97
    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 44 (is)


Estado 117

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   16    | exp OR exp .
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 16 (exp)


Estado 118

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   15    | exp AND exp .
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 15 (exp)


Estado 119

   11 exp: exp . '-' exp
   11    | exp '-' exp .
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 11 (exp)


Estado 120

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   12    | exp '+' exp .
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 12 (exp)


Estado 121

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   14    | exp '*' exp .
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    $default  reduce usando la regla 14 (exp)


Estado 122

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   13    | exp '/' exp .
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    $default  reduce usando la regla 13 (exp)


Estado 123

   39 init: tipo IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 136
    is         ir al estado 71


Estado 124

   57 inst_l: inst FIN_DE_LINEA inst_l .

    $default  reduce usando la regla 57 (inst_l)


Estado 125

    7 tupla: '(' exp_l ')' .

    $default  reduce usando la regla 7 (tupla)


Estado 126

    6 exp_l: exp ',' . exp_l

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    exp_l      ir al estado 137
    func_call  ir al estado 65
    exp        ir al estado 106
    is         ir al estado 71


Estado 127

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   77 rango: exp RANGE exp .
   78      | exp RANGE exp . ',' exp

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    ','    desplazar e ir al estado 138
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 77 (rango)


Estado 128

   66 when: WHEN exp ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 139


Estado 129

   67 when: WHEN rango ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 140


Estado 130

   69 if: IF exp ':' FIN_DE_LINEA . bloque
   70   | IF exp ':' FIN_DE_LINEA . bloque else
   71   | IF exp ':' FIN_DE_LINEA . bloque elif_l
   72   | IF exp ':' FIN_DE_LINEA . bloque elif_l else

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 141


Estado 131

   76 while: WHILE exp ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 142


Estado 132

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   77 rango: exp . RANGE exp
   78      | exp . RANGE exp ',' exp

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    RANGE  desplazar e ir al estado 107
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99


Estado 133

   42 in: IDENTIFICADOR IN rango .

    $default  reduce usando la regla 42 (in)


Estado 134

   43 in: IDENTIFICADOR NOTIN rango .

    $default  reduce usando la regla 43 (in)


Estado 135

   68 for: FOR in ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 143


Estado 136

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   39 init: tipo IDENTIFICADOR '=' exp .
   44 is: exp . IS exp
   45   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 39 (init)


Estado 137

    6 exp_l: exp ',' exp_l .

    $default  reduce usando la regla 6 (exp_l)


Estado 138

   78 rango: exp RANGE exp ',' . exp

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 144
    is         ir al estado 71


Estado 139

   66 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 145
    is         ir al estado 71
    cases      ir al estado 146


Estado 140

   67 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 145
    is         ir al estado 71
    cases      ir al estado 147


Estado 141

   69 if: IF exp ':' FIN_DE_LINEA bloque .
   70   | IF exp ':' FIN_DE_LINEA bloque . else
   71   | IF exp ':' FIN_DE_LINEA bloque . elif_l
   72   | IF exp ':' FIN_DE_LINEA bloque . elif_l else

    ELIF  desplazar e ir al estado 148
    ELSE  desplazar e ir al estado 149

    $default  reduce usando la regla 69 (if)

    elif_l  ir al estado 150
    else    ir al estado 151


Estado 142

   76 while: WHILE exp ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 76 (while)


Estado 143

   68 for: FOR in ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 68 (for)


Estado 144

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   78 rango: exp RANGE exp ',' exp .

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99

    $default  reduce usando la regla 78 (rango)


Estado 145

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   64 cases: exp . WHEN_CASE exp
   65      | exp . WHEN_CASE exp FIN_DE_LINEA cases

    WHEN_CASE  desplazar e ir al estado 152
    NOTIS      desplazar e ir al estado 92
    IS         desplazar e ir al estado 93
    OR         desplazar e ir al estado 94
    AND        desplazar e ir al estado 95
    '-'        desplazar e ir al estado 96
    '+'        desplazar e ir al estado 97
    '*'        desplazar e ir al estado 98
    '/'        desplazar e ir al estado 99


Estado 146

   66 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 153


Estado 147

   67 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 154


Estado 148

   73 elif_l: ELIF . exp ':' FIN_DE_LINEA bloque
   74       | ELIF . exp ':' FIN_DE_LINEA bloque elif_l

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 155
    is         ir al estado 71


Estado 149

   75 else: ELSE . exp ':' FIN_DE_LINEA bloque

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 156
    is         ir al estado 71


Estado 150

   71 if: IF exp ':' FIN_DE_LINEA bloque elif_l .
   72   | IF exp ':' FIN_DE_LINEA bloque elif_l . else

    ELSE  desplazar e ir al estado 149

    $default  reduce usando la regla 71 (if)

    else  ir al estado 157


Estado 151

   70 if: IF exp ':' FIN_DE_LINEA bloque else .

    $default  reduce usando la regla 70 (if)


Estado 152

   64 cases: exp WHEN_CASE . exp
   65      | exp WHEN_CASE . exp FIN_DE_LINEA cases

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 158
    is         ir al estado 71


Estado 153

   66 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 66 (when)


Estado 154

   67 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 67 (when)


Estado 155

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   73 elif_l: ELIF exp . ':' FIN_DE_LINEA bloque
   74       | ELIF exp . ':' FIN_DE_LINEA bloque elif_l

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99
    ':'    desplazar e ir al estado 159


Estado 156

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   75 else: ELSE exp . ':' FIN_DE_LINEA bloque

    NOTIS  desplazar e ir al estado 92
    IS     desplazar e ir al estado 93
    OR     desplazar e ir al estado 94
    AND    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 96
    '+'    desplazar e ir al estado 97
    '*'    desplazar e ir al estado 98
    '/'    desplazar e ir al estado 99
    ':'    desplazar e ir al estado 160


Estado 157

   72 if: IF exp ':' FIN_DE_LINEA bloque elif_l else .

    $default  reduce usando la regla 72 (if)


Estado 158

   11 exp: exp . '-' exp
   12    | exp . '+' exp
   13    | exp . '/' exp
   14    | exp . '*' exp
   15    | exp . AND exp
   16    | exp . OR exp
   44 is: exp . IS exp
   45   | exp . NOTIS exp
   64 cases: exp WHEN_CASE exp .
   65      | exp WHEN_CASE exp . FIN_DE_LINEA cases

    FIN_DE_LINEA  desplazar e ir al estado 161
    NOTIS         desplazar e ir al estado 92
    IS            desplazar e ir al estado 93
    OR            desplazar e ir al estado 94
    AND           desplazar e ir al estado 95
    '-'           desplazar e ir al estado 96
    '+'           desplazar e ir al estado 97
    '*'           desplazar e ir al estado 98
    '/'           desplazar e ir al estado 99

    $default  reduce usando la regla 64 (cases)


Estado 159

   73 elif_l: ELIF exp ':' . FIN_DE_LINEA bloque
   74       | ELIF exp ':' . FIN_DE_LINEA bloque elif_l

    FIN_DE_LINEA  desplazar e ir al estado 162


Estado 160

   75 else: ELSE exp ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 163


Estado 161

   65 cases: exp WHEN_CASE exp FIN_DE_LINEA . cases

    VALOR_FLOAT    desplazar e ir al estado 51
    VALOR_DOUBLE   desplazar e ir al estado 52
    VALOR_INT      desplazar e ir al estado 53
    VALOR_BOOL     desplazar e ir al estado 54
    VALOR_LONG     desplazar e ir al estado 55
    VALOR_CHAR     desplazar e ir al estado 56
    VALOR_STRING   desplazar e ir al estado 57
    IDENTIFICADOR  desplazar e ir al estado 84

    func_call  ir al estado 65
    exp        ir al estado 145
    is         ir al estado 71
    cases      ir al estado 164


Estado 162

   73 elif_l: ELIF exp ':' FIN_DE_LINEA . bloque
   74       | ELIF exp ':' FIN_DE_LINEA . bloque elif_l

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 165


Estado 163

   75 else: ELSE exp ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 45

    bloque  ir al estado 166


Estado 164

   65 cases: exp WHEN_CASE exp FIN_DE_LINEA cases .

    $default  reduce usando la regla 65 (cases)


Estado 165

   73 elif_l: ELIF exp ':' FIN_DE_LINEA bloque .
   74       | ELIF exp ':' FIN_DE_LINEA bloque . elif_l

    ELIF  desplazar e ir al estado 148

    $default  reduce usando la regla 73 (elif_l)

    elif_l  ir al estado 167


Estado 166

   75 else: ELSE exp ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 75 (else)


Estado 167

   74 elif_l: ELIF exp ':' FIN_DE_LINEA bloque elif_l .

    $default  reduce usando la regla 74 (elif_l)
