Terminales no usados en la gramática

   NOTIN
   TUPLE


Estado 36 conflictos: 22 desplazamiento/reducción
Estado 37 conflictos: 1 reducción/reducción


Gramática

    0 $accept: lista $end

    1 $@1: %empty

    2 lista: error FIN_DE_LINEA $@1 lista
    3      | FIN_DE_LINEA lista
    4      | func lista
    5      | inst_l lista
    6      | inst_l
    7      | %empty

    8 exp_l: exp
    9      | exp ',' exp_l

   10 tupla: '(' exp_l ')'

   11 tupla_decl: '(' tipo_l ')'

   12 func_call: IDENTIFICADOR func_call_init tupla
   13          | IDENTIFICADOR func_call_init '(' ')'

   14 func_call_init: %empty

   15 exp: exp '-' exp
   16    | exp '+' exp
   17    | exp '/' exp
   18    | exp '*' exp
   19    | exp AND exp
   20    | exp OR exp
   21    | comp
   22    | func_call
   23    | VALOR_INT
   24    | VALOR_FLOAT
   25    | VALOR_DOUBLE
   26    | VALOR_LONG
   27    | VALOR_BOOL
   28    | VALOR_CHAR
   29    | VALOR_STRING
   30    | IDENTIFICADOR
   31    | tupla
   32    | IDENTIFICADOR ACCESO

   33 tipo: tupla_decl
   34     | INT
   35     | FLOAT
   36     | LONG
   37     | DOUBLE
   38     | BOOL
   39     | STRING
   40     | CHAR

   41 tipo_l: tipo
   42       | tipo ',' tipo_l

   43 args: tipo IDENTIFICADOR
   44     | tipo IDENTIFICADOR ',' args

   45 init: tipo IDENTIFICADOR '=' exp FIN_DE_LINEA

   46 assign: IDENTIFICADOR '=' exp FIN_DE_LINEA

   47 decl: tipo IDENTIFICADOR FIN_DE_LINEA

   48 comp: exp MENORQUE exp
   49     | exp MAYORQUE exp
   50     | exp MENORIGUAL exp
   51     | exp MAYORIGUAL exp
   52     | exp IS exp
   53     | exp NOTIS exp

   54 inst: exp FIN_DE_LINEA
   55     | init
   56     | assign
   57     | decl
   58     | when
   59     | for
   60     | while
   61     | if
   62     | bloque
   63     | RETURN exp FIN_DE_LINEA

   64 inst_l: inst
   65       | inst inst_l

   66 $@2: %empty

   67 bloque: ABREBLOQUE $@2 dentroBloque CIERRABLOQUE

   68 dentroBloque: inst_l

   69 @3: %empty

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA bloque funcFinal

   71 @4: %empty

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA bloque funcFinal

   73 @5: %empty

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA bloque funcFinal

   75 @6: %empty

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA bloque funcFinal

   77 funcFinal: %empty

   78 cases: exp case_cond WHEN_CASE exp
   79      | exp case_cond WHEN_CASE exp FIN_DE_LINEA cases

   80 case_cond: %empty

   81 @7: %empty

   82 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE @7 cases CIERRABLOQUE

   83 $@8: %empty

   84 for: FOR IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA $@8 bloque

   85 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque

   86 @9: %empty

   87 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @9 elif_l

   88 elif_l: ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque
   89       | ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque elif_copia_salida elif_copia_siguiente elif_l

   90 $@10: %empty

   91 elif_l: ELSE ':' FIN_DE_LINEA $@10 bloque

   92 ne: %empty

   93 elif_control: %empty

   94 elif_eval: %empty

   95 if_evalua_expresion: %empty

   96 elif_copia_salida: %empty

   97 elif_copia_siguiente: %empty

   98 $@11: %empty

   99 $@12: %empty

  100 while: WHILE ne ne $@11 exp ':' $@12 FIN_DE_LINEA bloque

  101 rango: exp RANGE exp
  102      | exp RANGE exp ',' exp


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 10 11 13 70 72 74 76
')' (41) 10 11 13 70 72 74 76
'*' (42) 18
'+' (43) 16
',' (44) 9 42 44 102
'-' (45) 15
'/' (47) 17
':' (58) 70 72 74 76 82 84 85 87 88 89 91 100
'=' (61) 45 46
error (256) 2
VALOR_FLOAT (258) 24
VALOR_DOUBLE (259) 25
VALOR_INT (260) 23
VALOR_BOOL (261) 27
ACCESO (262) 32
VALOR_LONG (263) 26
VALOR_CHAR (264) 28
VALOR_STRING (265) 29
IDENTIFICADOR (266) 12 13 30 32 43 44 45 46 47 70 72 74 76 84
FIN_DE_LINEA (267) 2 3 45 46 47 54 63 70 72 74 76 79 82 84 85 87 88
    89 91 100
INT (268) 34
LONG (269) 36
FLOAT (270) 35
DOUBLE (271) 37
BOOL (272) 38
STRING (273) 39
VOID (274) 74 76
CHAR (275) 40
WHEN (276) 82
WHEN_CASE (277) 78 79
IF (278) 85 87
ELIF (279) 88 89
ELSE (280) 91
WHILE (281) 100
FOR (282) 84
NOTIS (283) 53
IS (284) 52
OR (285) 20
AND (286) 19
RANGE (287) 101 102
RETURN (288) 63
ABREBLOQUE (289) 67 82
CIERRABLOQUE (290) 67 82
IN (291) 84
NOTIN (292)
MAYORIGUAL (293) 51
MENORIGUAL (294) 50
MAYORQUE (295) 49
MENORQUE (296) 48
TUPLE (297)


No terminales con las reglas donde aparecen

$accept (52)
    en la izquierda: 0
lista (53)
    en la izquierda: 2 3 4 5 6 7, en la derecha: 0 2 3 4 5
$@1 (54)
    en la izquierda: 1, en la derecha: 2
exp_l (55)
    en la izquierda: 8 9, en la derecha: 9 10
tupla (56)
    en la izquierda: 10, en la derecha: 12 31
tupla_decl (57)
    en la izquierda: 11, en la derecha: 33
func_call (58)
    en la izquierda: 12 13, en la derecha: 22
func_call_init (59)
    en la izquierda: 14, en la derecha: 12 13
exp (60)
    en la izquierda: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32, en la derecha: 8 9 15 16 17 18 19 20 45 46 48 49 50 51 52
    53 54 63 78 79 82 85 87 88 89 100 101 102
tipo (61)
    en la izquierda: 33 34 35 36 37 38 39 40, en la derecha: 41 42
    43 44 45 47 70 72
tipo_l (62)
    en la izquierda: 41 42, en la derecha: 11 42
args (63)
    en la izquierda: 43 44, en la derecha: 44 72 76
init (64)
    en la izquierda: 45, en la derecha: 55
assign (65)
    en la izquierda: 46, en la derecha: 56
decl (66)
    en la izquierda: 47, en la derecha: 57
comp (67)
    en la izquierda: 48 49 50 51 52 53, en la derecha: 21
inst (68)
    en la izquierda: 54 55 56 57 58 59 60 61 62 63, en la derecha:
    64 65
inst_l (69)
    en la izquierda: 64 65, en la derecha: 5 6 65 68
bloque (70)
    en la izquierda: 67, en la derecha: 62 70 72 74 76 84 85 87 88
    89 91 100
$@2 (71)
    en la izquierda: 66, en la derecha: 67
dentroBloque (72)
    en la izquierda: 68, en la derecha: 67
func (73)
    en la izquierda: 70 72 74 76, en la derecha: 4
@3 (74)
    en la izquierda: 69, en la derecha: 70
@4 (75)
    en la izquierda: 71, en la derecha: 72
@5 (76)
    en la izquierda: 73, en la derecha: 74
@6 (77)
    en la izquierda: 75, en la derecha: 76
funcFinal (78)
    en la izquierda: 77, en la derecha: 70 72 74 76
cases (79)
    en la izquierda: 78 79, en la derecha: 79 82
case_cond (80)
    en la izquierda: 80, en la derecha: 78 79
when (81)
    en la izquierda: 82, en la derecha: 58
@7 (82)
    en la izquierda: 81, en la derecha: 82
for (83)
    en la izquierda: 84, en la derecha: 59
$@8 (84)
    en la izquierda: 83, en la derecha: 84
if (85)
    en la izquierda: 85 87, en la derecha: 61
@9 (86)
    en la izquierda: 86, en la derecha: 87
elif_l (87)
    en la izquierda: 88 89 91, en la derecha: 87 89
$@10 (88)
    en la izquierda: 90, en la derecha: 91
ne (89)
    en la izquierda: 92, en la derecha: 84 85 87 88 89 100
elif_control (90)
    en la izquierda: 93, en la derecha: 88 89
elif_eval (91)
    en la izquierda: 94, en la derecha: 88 89
if_evalua_expresion (92)
    en la izquierda: 95, en la derecha: 85 87
elif_copia_salida (93)
    en la izquierda: 96, en la derecha: 89
elif_copia_siguiente (94)
    en la izquierda: 97, en la derecha: 89
while (95)
    en la izquierda: 100, en la derecha: 60
$@11 (96)
    en la izquierda: 98, en la derecha: 100
$@12 (97)
    en la izquierda: 99, en la derecha: 100
rango (98)
    en la izquierda: 101 102, en la derecha: 84


Estado 0

    0 $accept: . lista $end

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 26
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    assign      ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 1

    2 lista: error . FIN_DE_LINEA $@1 lista

    FIN_DE_LINEA  desplazar e ir al estado 44


Estado 2

   24 exp: VALOR_FLOAT .

    $default  reduce usando la regla 24 (exp)


Estado 3

   25 exp: VALOR_DOUBLE .

    $default  reduce usando la regla 25 (exp)


Estado 4

   23 exp: VALOR_INT .

    $default  reduce usando la regla 23 (exp)


Estado 5

   27 exp: VALOR_BOOL .

    $default  reduce usando la regla 27 (exp)


Estado 6

   26 exp: VALOR_LONG .

    $default  reduce usando la regla 26 (exp)


Estado 7

   28 exp: VALOR_CHAR .

    $default  reduce usando la regla 28 (exp)


Estado 8

   29 exp: VALOR_STRING .

    $default  reduce usando la regla 29 (exp)


Estado 9

   12 func_call: IDENTIFICADOR . func_call_init tupla
   13          | IDENTIFICADOR . func_call_init '(' ')'
   30 exp: IDENTIFICADOR .
   32    | IDENTIFICADOR . ACCESO
   46 assign: IDENTIFICADOR . '=' exp FIN_DE_LINEA

    ACCESO  desplazar e ir al estado 45
    '='     desplazar e ir al estado 46

    '('       reduce usando la regla 14 (func_call_init)
    $default  reduce usando la regla 30 (exp)

    func_call_init  ir al estado 47


Estado 10

    3 lista: FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 48
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    assign      ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 11

   34 tipo: INT .

    $default  reduce usando la regla 34 (tipo)


Estado 12

   36 tipo: LONG .

    $default  reduce usando la regla 36 (tipo)


Estado 13

   35 tipo: FLOAT .

    $default  reduce usando la regla 35 (tipo)


Estado 14

   37 tipo: DOUBLE .

    $default  reduce usando la regla 37 (tipo)


Estado 15

   38 tipo: BOOL .

    $default  reduce usando la regla 38 (tipo)


Estado 16

   39 tipo: STRING .

    $default  reduce usando la regla 39 (tipo)


Estado 17

   74 func: VOID . IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA bloque funcFinal
   76     | VOID . IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA bloque funcFinal

    IDENTIFICADOR  desplazar e ir al estado 49


Estado 18

   40 tipo: CHAR .

    $default  reduce usando la regla 40 (tipo)


Estado 19

   82 when: WHEN . exp ':' FIN_DE_LINEA ABREBLOQUE @7 cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 52
    comp       ir al estado 35


Estado 20

   85 if: IF . exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque
   87   | IF . exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @9 elif_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 53
    comp       ir al estado 35


Estado 21

  100 while: WHILE . ne ne $@11 exp ':' $@12 FIN_DE_LINEA bloque

    $default  reduce usando la regla 92 (ne)

    ne  ir al estado 54


Estado 22

   84 for: FOR . IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA $@8 bloque

    IDENTIFICADOR  desplazar e ir al estado 55


Estado 23

   63 inst: RETURN . exp FIN_DE_LINEA

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 56
    comp       ir al estado 35


Estado 24

   67 bloque: ABREBLOQUE . $@2 dentroBloque CIERRABLOQUE

    $default  reduce usando la regla 66 ($@2)

    $@2  ir al estado 57


Estado 25

   10 tupla: '(' . exp_l ')'
   11 tupla_decl: '(' . tipo_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    '('            desplazar e ir al estado 25

    exp_l       ir al estado 58
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 59
    tipo        ir al estado 60
    tipo_l      ir al estado 61
    comp        ir al estado 35


Estado 26

    0 $accept: lista . $end

    $end  desplazar e ir al estado 62


Estado 27

   31 exp: tupla .

    $default  reduce usando la regla 31 (exp)


Estado 28

   33 tipo: tupla_decl .

    $default  reduce usando la regla 33 (tipo)


Estado 29

   22 exp: func_call .

    $default  reduce usando la regla 22 (exp)


Estado 30

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   54 inst: exp . FIN_DE_LINEA

    FIN_DE_LINEA  desplazar e ir al estado 63
    NOTIS         desplazar e ir al estado 64
    IS            desplazar e ir al estado 65
    OR            desplazar e ir al estado 66
    AND           desplazar e ir al estado 67
    MAYORIGUAL    desplazar e ir al estado 68
    MENORIGUAL    desplazar e ir al estado 69
    MAYORQUE      desplazar e ir al estado 70
    MENORQUE      desplazar e ir al estado 71
    '-'           desplazar e ir al estado 72
    '+'           desplazar e ir al estado 73
    '*'           desplazar e ir al estado 74
    '/'           desplazar e ir al estado 75


Estado 31

   45 init: tipo . IDENTIFICADOR '=' exp FIN_DE_LINEA
   47 decl: tipo . IDENTIFICADOR FIN_DE_LINEA
   70 func: tipo . IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA bloque funcFinal
   72     | tipo . IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA bloque funcFinal

    IDENTIFICADOR  desplazar e ir al estado 76


Estado 32

   55 inst: init .

    $default  reduce usando la regla 55 (inst)


Estado 33

   56 inst: assign .

    $default  reduce usando la regla 56 (inst)


Estado 34

   57 inst: decl .

    $default  reduce usando la regla 57 (inst)


Estado 35

   21 exp: comp .

    $default  reduce usando la regla 21 (exp)


Estado 36

   64 inst_l: inst .
   65       | inst . inst_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    VALOR_FLOAT    [reduce usando la regla 64 (inst_l)]
    VALOR_DOUBLE   [reduce usando la regla 64 (inst_l)]
    VALOR_INT      [reduce usando la regla 64 (inst_l)]
    VALOR_BOOL     [reduce usando la regla 64 (inst_l)]
    VALOR_LONG     [reduce usando la regla 64 (inst_l)]
    VALOR_CHAR     [reduce usando la regla 64 (inst_l)]
    VALOR_STRING   [reduce usando la regla 64 (inst_l)]
    IDENTIFICADOR  [reduce usando la regla 64 (inst_l)]
    INT            [reduce usando la regla 64 (inst_l)]
    LONG           [reduce usando la regla 64 (inst_l)]
    FLOAT          [reduce usando la regla 64 (inst_l)]
    DOUBLE         [reduce usando la regla 64 (inst_l)]
    BOOL           [reduce usando la regla 64 (inst_l)]
    STRING         [reduce usando la regla 64 (inst_l)]
    CHAR           [reduce usando la regla 64 (inst_l)]
    WHEN           [reduce usando la regla 64 (inst_l)]
    IF             [reduce usando la regla 64 (inst_l)]
    WHILE          [reduce usando la regla 64 (inst_l)]
    FOR            [reduce usando la regla 64 (inst_l)]
    RETURN         [reduce usando la regla 64 (inst_l)]
    ABREBLOQUE     [reduce usando la regla 64 (inst_l)]
    '('            [reduce usando la regla 64 (inst_l)]
    $default       reduce usando la regla 64 (inst_l)

    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 77
    init        ir al estado 32
    assign      ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 78
    bloque      ir al estado 38
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 37

    5 lista: inst_l . lista
    6      | inst_l .

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 6 (lista)
    $end  [reduce usando la regla 7 (lista)]

    lista       ir al estado 79
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    assign      ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 38

   62 inst: bloque .

    $default  reduce usando la regla 62 (inst)


Estado 39

    4 lista: func . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 80
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    assign      ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 40

   58 inst: when .

    $default  reduce usando la regla 58 (inst)


Estado 41

   59 inst: for .

    $default  reduce usando la regla 59 (inst)


Estado 42

   61 inst: if .

    $default  reduce usando la regla 61 (inst)


Estado 43

   60 inst: while .

    $default  reduce usando la regla 60 (inst)


Estado 44

    2 lista: error FIN_DE_LINEA . $@1 lista

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 81


Estado 45

   32 exp: IDENTIFICADOR ACCESO .

    $default  reduce usando la regla 32 (exp)


Estado 46

   46 assign: IDENTIFICADOR '=' . exp FIN_DE_LINEA

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 82
    comp       ir al estado 35


Estado 47

   12 func_call: IDENTIFICADOR func_call_init . tupla
   13          | IDENTIFICADOR func_call_init . '(' ')'

    '('  desplazar e ir al estado 83

    tupla  ir al estado 84


Estado 48

    3 lista: FIN_DE_LINEA lista .

    $default  reduce usando la regla 3 (lista)


Estado 49

   74 func: VOID IDENTIFICADOR . '(' ')' @5 ':' FIN_DE_LINEA bloque funcFinal
   76     | VOID IDENTIFICADOR . '(' args ')' @6 ':' FIN_DE_LINEA bloque funcFinal

    '('  desplazar e ir al estado 85


Estado 50

   12 func_call: IDENTIFICADOR . func_call_init tupla
   13          | IDENTIFICADOR . func_call_init '(' ')'
   30 exp: IDENTIFICADOR .
   32    | IDENTIFICADOR . ACCESO

    ACCESO  desplazar e ir al estado 45

    '('       reduce usando la regla 14 (func_call_init)
    $default  reduce usando la regla 30 (exp)

    func_call_init  ir al estado 47


Estado 51

   10 tupla: '(' . exp_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    exp_l      ir al estado 58
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 59
    comp       ir al estado 35


Estado 52

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   82 when: WHEN exp . ':' FIN_DE_LINEA ABREBLOQUE @7 cases CIERRABLOQUE

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75
    ':'         desplazar e ir al estado 86


Estado 53

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   85 if: IF exp . ':' FIN_DE_LINEA ne if_evalua_expresion bloque
   87   | IF exp . ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @9 elif_l

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75
    ':'         desplazar e ir al estado 87


Estado 54

  100 while: WHILE ne . ne $@11 exp ':' $@12 FIN_DE_LINEA bloque

    $default  reduce usando la regla 92 (ne)

    ne  ir al estado 88


Estado 55

   84 for: FOR IDENTIFICADOR . IN rango ne ne ':' FIN_DE_LINEA $@8 bloque

    IN  desplazar e ir al estado 89


Estado 56

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   63 inst: RETURN exp . FIN_DE_LINEA

    FIN_DE_LINEA  desplazar e ir al estado 90
    NOTIS         desplazar e ir al estado 64
    IS            desplazar e ir al estado 65
    OR            desplazar e ir al estado 66
    AND           desplazar e ir al estado 67
    MAYORIGUAL    desplazar e ir al estado 68
    MENORIGUAL    desplazar e ir al estado 69
    MAYORQUE      desplazar e ir al estado 70
    MENORQUE      desplazar e ir al estado 71
    '-'           desplazar e ir al estado 72
    '+'           desplazar e ir al estado 73
    '*'           desplazar e ir al estado 74
    '/'           desplazar e ir al estado 75


Estado 57

   67 bloque: ABREBLOQUE $@2 . dentroBloque CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    tupla         ir al estado 27
    tupla_decl    ir al estado 28
    func_call     ir al estado 29
    exp           ir al estado 30
    tipo          ir al estado 77
    init          ir al estado 32
    assign        ir al estado 33
    decl          ir al estado 34
    comp          ir al estado 35
    inst          ir al estado 36
    inst_l        ir al estado 91
    bloque        ir al estado 38
    dentroBloque  ir al estado 92
    when          ir al estado 40
    for           ir al estado 41
    if            ir al estado 42
    while         ir al estado 43


Estado 58

   10 tupla: '(' exp_l . ')'

    ')'  desplazar e ir al estado 93


Estado 59

    8 exp_l: exp .
    9      | exp . ',' exp_l
   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    ','         desplazar e ir al estado 94
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75

    $default  reduce usando la regla 8 (exp_l)


Estado 60

   41 tipo_l: tipo .
   42       | tipo . ',' tipo_l

    ','  desplazar e ir al estado 95

    $default  reduce usando la regla 41 (tipo_l)


Estado 61

   11 tupla_decl: '(' tipo_l . ')'

    ')'  desplazar e ir al estado 96


Estado 62

    0 $accept: lista $end .

    $default  aceptar


Estado 63

   54 inst: exp FIN_DE_LINEA .

    $default  reduce usando la regla 54 (inst)


Estado 64

   53 comp: exp NOTIS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 97
    comp       ir al estado 35


Estado 65

   52 comp: exp IS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 98
    comp       ir al estado 35


Estado 66

   20 exp: exp OR . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 99
    comp       ir al estado 35


Estado 67

   19 exp: exp AND . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 100
    comp       ir al estado 35


Estado 68

   51 comp: exp MAYORIGUAL . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 101
    comp       ir al estado 35


Estado 69

   50 comp: exp MENORIGUAL . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 102
    comp       ir al estado 35


Estado 70

   49 comp: exp MAYORQUE . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 103
    comp       ir al estado 35


Estado 71

   48 comp: exp MENORQUE . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 104
    comp       ir al estado 35


Estado 72

   15 exp: exp '-' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 105
    comp       ir al estado 35


Estado 73

   16 exp: exp '+' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 106
    comp       ir al estado 35


Estado 74

   18 exp: exp '*' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 107
    comp       ir al estado 35


Estado 75

   17 exp: exp '/' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 108
    comp       ir al estado 35


Estado 76

   45 init: tipo IDENTIFICADOR . '=' exp FIN_DE_LINEA
   47 decl: tipo IDENTIFICADOR . FIN_DE_LINEA
   70 func: tipo IDENTIFICADOR . '(' ')' @3 ':' FIN_DE_LINEA bloque funcFinal
   72     | tipo IDENTIFICADOR . '(' args ')' @4 ':' FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 109
    '='           desplazar e ir al estado 110
    '('           desplazar e ir al estado 111


Estado 77

   45 init: tipo . IDENTIFICADOR '=' exp FIN_DE_LINEA
   47 decl: tipo . IDENTIFICADOR FIN_DE_LINEA

    IDENTIFICADOR  desplazar e ir al estado 112


Estado 78

   65 inst_l: inst inst_l .

    $default  reduce usando la regla 65 (inst_l)


Estado 79

    5 lista: inst_l lista .

    $default  reduce usando la regla 5 (lista)


Estado 80

    4 lista: func lista .

    $default  reduce usando la regla 4 (lista)


Estado 81

    2 lista: error FIN_DE_LINEA $@1 . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 113
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    assign      ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 82

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   46 assign: IDENTIFICADOR '=' exp . FIN_DE_LINEA
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    FIN_DE_LINEA  desplazar e ir al estado 114
    NOTIS         desplazar e ir al estado 64
    IS            desplazar e ir al estado 65
    OR            desplazar e ir al estado 66
    AND           desplazar e ir al estado 67
    MAYORIGUAL    desplazar e ir al estado 68
    MENORIGUAL    desplazar e ir al estado 69
    MAYORQUE      desplazar e ir al estado 70
    MENORQUE      desplazar e ir al estado 71
    '-'           desplazar e ir al estado 72
    '+'           desplazar e ir al estado 73
    '*'           desplazar e ir al estado 74
    '/'           desplazar e ir al estado 75


Estado 83

   10 tupla: '(' . exp_l ')'
   13 func_call: IDENTIFICADOR func_call_init '(' . ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51
    ')'            desplazar e ir al estado 115

    exp_l      ir al estado 58
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 59
    comp       ir al estado 35


Estado 84

   12 func_call: IDENTIFICADOR func_call_init tupla .

    $default  reduce usando la regla 12 (func_call)


Estado 85

   74 func: VOID IDENTIFICADOR '(' . ')' @5 ':' FIN_DE_LINEA bloque funcFinal
   76     | VOID IDENTIFICADOR '(' . args ')' @6 ':' FIN_DE_LINEA bloque funcFinal

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 116
    ')'     desplazar e ir al estado 117

    tupla_decl  ir al estado 28
    tipo        ir al estado 118
    args        ir al estado 119


Estado 86

   82 when: WHEN exp ':' . FIN_DE_LINEA ABREBLOQUE @7 cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 120


Estado 87

   85 if: IF exp ':' . FIN_DE_LINEA ne if_evalua_expresion bloque
   87   | IF exp ':' . FIN_DE_LINEA ne if_evalua_expresion bloque ne @9 elif_l

    FIN_DE_LINEA  desplazar e ir al estado 121


Estado 88

  100 while: WHILE ne ne . $@11 exp ':' $@12 FIN_DE_LINEA bloque

    $default  reduce usando la regla 98 ($@11)

    $@11  ir al estado 122


Estado 89

   84 for: FOR IDENTIFICADOR IN . rango ne ne ':' FIN_DE_LINEA $@8 bloque

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 123
    comp       ir al estado 35
    rango      ir al estado 124


Estado 90

   63 inst: RETURN exp FIN_DE_LINEA .

    $default  reduce usando la regla 63 (inst)


Estado 91

   68 dentroBloque: inst_l .

    $default  reduce usando la regla 68 (dentroBloque)


Estado 92

   67 bloque: ABREBLOQUE $@2 dentroBloque . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 125


Estado 93

   10 tupla: '(' exp_l ')' .

    $default  reduce usando la regla 10 (tupla)


Estado 94

    9 exp_l: exp ',' . exp_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    exp_l      ir al estado 126
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 59
    comp       ir al estado 35


Estado 95

   42 tipo_l: tipo ',' . tipo_l

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 116

    tupla_decl  ir al estado 28
    tipo        ir al estado 60
    tipo_l      ir al estado 127


Estado 96

   11 tupla_decl: '(' tipo_l ')' .

    $default  reduce usando la regla 11 (tupla_decl)


Estado 97

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   53     | exp NOTIS exp .

    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75

    $default  reduce usando la regla 53 (comp)


Estado 98

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   52     | exp IS exp .
   53     | exp . NOTIS exp

    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75

    $default  reduce usando la regla 52 (comp)


Estado 99

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   20    | exp OR exp .
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75

    $default  reduce usando la regla 20 (exp)


Estado 100

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   19    | exp AND exp .
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75

    $default  reduce usando la regla 19 (exp)


Estado 101

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   51     | exp MAYORIGUAL exp .
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '-'  desplazar e ir al estado 72
    '+'  desplazar e ir al estado 73
    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 51 (comp)


Estado 102

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   50     | exp MENORIGUAL exp .
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '-'  desplazar e ir al estado 72
    '+'  desplazar e ir al estado 73
    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 50 (comp)


Estado 103

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   49     | exp MAYORQUE exp .
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '-'  desplazar e ir al estado 72
    '+'  desplazar e ir al estado 73
    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 49 (comp)


Estado 104

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   48     | exp MENORQUE exp .
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '-'  desplazar e ir al estado 72
    '+'  desplazar e ir al estado 73
    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 48 (comp)


Estado 105

   15 exp: exp . '-' exp
   15    | exp '-' exp .
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 15 (exp)


Estado 106

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   16    | exp '+' exp .
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 16 (exp)


Estado 107

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   18    | exp '*' exp .
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    $default  reduce usando la regla 18 (exp)


Estado 108

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   17    | exp '/' exp .
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    $default  reduce usando la regla 17 (exp)


Estado 109

   47 decl: tipo IDENTIFICADOR FIN_DE_LINEA .

    $default  reduce usando la regla 47 (decl)


Estado 110

   45 init: tipo IDENTIFICADOR '=' . exp FIN_DE_LINEA

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 128
    comp       ir al estado 35


Estado 111

   70 func: tipo IDENTIFICADOR '(' . ')' @3 ':' FIN_DE_LINEA bloque funcFinal
   72     | tipo IDENTIFICADOR '(' . args ')' @4 ':' FIN_DE_LINEA bloque funcFinal

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 116
    ')'     desplazar e ir al estado 129

    tupla_decl  ir al estado 28
    tipo        ir al estado 118
    args        ir al estado 130


Estado 112

   45 init: tipo IDENTIFICADOR . '=' exp FIN_DE_LINEA
   47 decl: tipo IDENTIFICADOR . FIN_DE_LINEA

    FIN_DE_LINEA  desplazar e ir al estado 109
    '='           desplazar e ir al estado 110


Estado 113

    2 lista: error FIN_DE_LINEA $@1 lista .

    $default  reduce usando la regla 2 (lista)


Estado 114

   46 assign: IDENTIFICADOR '=' exp FIN_DE_LINEA .

    $default  reduce usando la regla 46 (assign)


Estado 115

   13 func_call: IDENTIFICADOR func_call_init '(' ')' .

    $default  reduce usando la regla 13 (func_call)


Estado 116

   11 tupla_decl: '(' . tipo_l ')'

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 116

    tupla_decl  ir al estado 28
    tipo        ir al estado 60
    tipo_l      ir al estado 61


Estado 117

   74 func: VOID IDENTIFICADOR '(' ')' . @5 ':' FIN_DE_LINEA bloque funcFinal

    $default  reduce usando la regla 73 (@5)

    @5  ir al estado 131


Estado 118

   43 args: tipo . IDENTIFICADOR
   44     | tipo . IDENTIFICADOR ',' args

    IDENTIFICADOR  desplazar e ir al estado 132


Estado 119

   76 func: VOID IDENTIFICADOR '(' args . ')' @6 ':' FIN_DE_LINEA bloque funcFinal

    ')'  desplazar e ir al estado 133


Estado 120

   82 when: WHEN exp ':' FIN_DE_LINEA . ABREBLOQUE @7 cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 134


Estado 121

   85 if: IF exp ':' FIN_DE_LINEA . ne if_evalua_expresion bloque
   87   | IF exp ':' FIN_DE_LINEA . ne if_evalua_expresion bloque ne @9 elif_l

    $default  reduce usando la regla 92 (ne)

    ne  ir al estado 135


Estado 122

  100 while: WHILE ne ne $@11 . exp ':' $@12 FIN_DE_LINEA bloque

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 136
    comp       ir al estado 35


Estado 123

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
  101 rango: exp . RANGE exp
  102      | exp . RANGE exp ',' exp

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    RANGE       desplazar e ir al estado 137
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75


Estado 124

   84 for: FOR IDENTIFICADOR IN rango . ne ne ':' FIN_DE_LINEA $@8 bloque

    $default  reduce usando la regla 92 (ne)

    ne  ir al estado 138


Estado 125

   67 bloque: ABREBLOQUE $@2 dentroBloque CIERRABLOQUE .

    $default  reduce usando la regla 67 (bloque)


Estado 126

    9 exp_l: exp ',' exp_l .

    $default  reduce usando la regla 9 (exp_l)


Estado 127

   42 tipo_l: tipo ',' tipo_l .

    $default  reduce usando la regla 42 (tipo_l)


Estado 128

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   45 init: tipo IDENTIFICADOR '=' exp . FIN_DE_LINEA
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    FIN_DE_LINEA  desplazar e ir al estado 139
    NOTIS         desplazar e ir al estado 64
    IS            desplazar e ir al estado 65
    OR            desplazar e ir al estado 66
    AND           desplazar e ir al estado 67
    MAYORIGUAL    desplazar e ir al estado 68
    MENORIGUAL    desplazar e ir al estado 69
    MAYORQUE      desplazar e ir al estado 70
    MENORQUE      desplazar e ir al estado 71
    '-'           desplazar e ir al estado 72
    '+'           desplazar e ir al estado 73
    '*'           desplazar e ir al estado 74
    '/'           desplazar e ir al estado 75


Estado 129

   70 func: tipo IDENTIFICADOR '(' ')' . @3 ':' FIN_DE_LINEA bloque funcFinal

    $default  reduce usando la regla 69 (@3)

    @3  ir al estado 140


Estado 130

   72 func: tipo IDENTIFICADOR '(' args . ')' @4 ':' FIN_DE_LINEA bloque funcFinal

    ')'  desplazar e ir al estado 141


Estado 131

   74 func: VOID IDENTIFICADOR '(' ')' @5 . ':' FIN_DE_LINEA bloque funcFinal

    ':'  desplazar e ir al estado 142


Estado 132

   43 args: tipo IDENTIFICADOR .
   44     | tipo IDENTIFICADOR . ',' args

    ','  desplazar e ir al estado 143

    $default  reduce usando la regla 43 (args)


Estado 133

   76 func: VOID IDENTIFICADOR '(' args ')' . @6 ':' FIN_DE_LINEA bloque funcFinal

    $default  reduce usando la regla 75 (@6)

    @6  ir al estado 144


Estado 134

   82 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE . @7 cases CIERRABLOQUE

    $default  reduce usando la regla 81 (@7)

    @7  ir al estado 145


Estado 135

   85 if: IF exp ':' FIN_DE_LINEA ne . if_evalua_expresion bloque
   87   | IF exp ':' FIN_DE_LINEA ne . if_evalua_expresion bloque ne @9 elif_l

    $default  reduce usando la regla 95 (if_evalua_expresion)

    if_evalua_expresion  ir al estado 146


Estado 136

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
  100 while: WHILE ne ne $@11 exp . ':' $@12 FIN_DE_LINEA bloque

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75
    ':'         desplazar e ir al estado 147


Estado 137

  101 rango: exp RANGE . exp
  102      | exp RANGE . exp ',' exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 148
    comp       ir al estado 35


Estado 138

   84 for: FOR IDENTIFICADOR IN rango ne . ne ':' FIN_DE_LINEA $@8 bloque

    $default  reduce usando la regla 92 (ne)

    ne  ir al estado 149


Estado 139

   45 init: tipo IDENTIFICADOR '=' exp FIN_DE_LINEA .

    $default  reduce usando la regla 45 (init)


Estado 140

   70 func: tipo IDENTIFICADOR '(' ')' @3 . ':' FIN_DE_LINEA bloque funcFinal

    ':'  desplazar e ir al estado 150


Estado 141

   72 func: tipo IDENTIFICADOR '(' args ')' . @4 ':' FIN_DE_LINEA bloque funcFinal

    $default  reduce usando la regla 71 (@4)

    @4  ir al estado 151


Estado 142

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' . FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 152


Estado 143

   44 args: tipo IDENTIFICADOR ',' . args

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 116

    tupla_decl  ir al estado 28
    tipo        ir al estado 118
    args        ir al estado 153


Estado 144

   76 func: VOID IDENTIFICADOR '(' args ')' @6 . ':' FIN_DE_LINEA bloque funcFinal

    ':'  desplazar e ir al estado 154


Estado 145

   82 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE @7 . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 155
    comp       ir al estado 35
    cases      ir al estado 156


Estado 146

   85 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion . bloque
   87   | IF exp ':' FIN_DE_LINEA ne if_evalua_expresion . bloque ne @9 elif_l

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 157


Estado 147

  100 while: WHILE ne ne $@11 exp ':' . $@12 FIN_DE_LINEA bloque

    $default  reduce usando la regla 99 ($@12)

    $@12  ir al estado 158


Estado 148

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
  101 rango: exp RANGE exp .
  102      | exp RANGE exp . ',' exp

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    ','         desplazar e ir al estado 159
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75

    $default  reduce usando la regla 101 (rango)


Estado 149

   84 for: FOR IDENTIFICADOR IN rango ne ne . ':' FIN_DE_LINEA $@8 bloque

    ':'  desplazar e ir al estado 160


Estado 150

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' . FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 161


Estado 151

   72 func: tipo IDENTIFICADOR '(' args ')' @4 . ':' FIN_DE_LINEA bloque funcFinal

    ':'  desplazar e ir al estado 162


Estado 152

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA . bloque funcFinal

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 163


Estado 153

   44 args: tipo IDENTIFICADOR ',' args .

    $default  reduce usando la regla 44 (args)


Estado 154

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' . FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 164


Estado 155

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   78 cases: exp . case_cond WHEN_CASE exp
   79      | exp . case_cond WHEN_CASE exp FIN_DE_LINEA cases

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75

    $default  reduce usando la regla 80 (case_cond)

    case_cond  ir al estado 165


Estado 156

   82 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE @7 cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 166


Estado 157

   85 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque .
   87   | IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque . ne @9 elif_l

    ELIF      reduce usando la regla 92 (ne)
    ELSE      reduce usando la regla 92 (ne)
    $default  reduce usando la regla 85 (if)

    ne  ir al estado 167


Estado 158

  100 while: WHILE ne ne $@11 exp ':' $@12 . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 168


Estado 159

  102 rango: exp RANGE exp ',' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 169
    comp       ir al estado 35


Estado 160

   84 for: FOR IDENTIFICADOR IN rango ne ne ':' . FIN_DE_LINEA $@8 bloque

    FIN_DE_LINEA  desplazar e ir al estado 170


Estado 161

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA . bloque funcFinal

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 171


Estado 162

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' . FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 172


Estado 163

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA bloque . funcFinal

    $default  reduce usando la regla 77 (funcFinal)

    funcFinal  ir al estado 173


Estado 164

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA . bloque funcFinal

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 174


Estado 165

   78 cases: exp case_cond . WHEN_CASE exp
   79      | exp case_cond . WHEN_CASE exp FIN_DE_LINEA cases

    WHEN_CASE  desplazar e ir al estado 175


Estado 166

   82 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE @7 cases CIERRABLOQUE .

    $default  reduce usando la regla 82 (when)


Estado 167

   87 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne . @9 elif_l

    $default  reduce usando la regla 86 (@9)

    @9  ir al estado 176


Estado 168

  100 while: WHILE ne ne $@11 exp ':' $@12 FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 177


Estado 169

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
  102 rango: exp RANGE exp ',' exp .

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75

    $default  reduce usando la regla 102 (rango)


Estado 170

   84 for: FOR IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA . $@8 bloque

    $default  reduce usando la regla 83 ($@8)

    $@8  ir al estado 178


Estado 171

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA bloque . funcFinal

    $default  reduce usando la regla 77 (funcFinal)

    funcFinal  ir al estado 179


Estado 172

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA . bloque funcFinal

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 180


Estado 173

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA bloque funcFinal .

    $default  reduce usando la regla 74 (func)


Estado 174

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA bloque . funcFinal

    $default  reduce usando la regla 77 (funcFinal)

    funcFinal  ir al estado 181


Estado 175

   78 cases: exp case_cond WHEN_CASE . exp
   79      | exp case_cond WHEN_CASE . exp FIN_DE_LINEA cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 182
    comp       ir al estado 35


Estado 176

   87 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @9 . elif_l

    ELIF  desplazar e ir al estado 183
    ELSE  desplazar e ir al estado 184

    elif_l  ir al estado 185


Estado 177

  100 while: WHILE ne ne $@11 exp ':' $@12 FIN_DE_LINEA bloque .

    $default  reduce usando la regla 100 (while)


Estado 178

   84 for: FOR IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA $@8 . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 186


Estado 179

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA bloque funcFinal .

    $default  reduce usando la regla 70 (func)


Estado 180

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA bloque . funcFinal

    $default  reduce usando la regla 77 (funcFinal)

    funcFinal  ir al estado 187


Estado 181

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA bloque funcFinal .

    $default  reduce usando la regla 76 (func)


Estado 182

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   78 cases: exp case_cond WHEN_CASE exp .
   79      | exp case_cond WHEN_CASE exp . FIN_DE_LINEA cases

    FIN_DE_LINEA  desplazar e ir al estado 188
    NOTIS         desplazar e ir al estado 64
    IS            desplazar e ir al estado 65
    OR            desplazar e ir al estado 66
    AND           desplazar e ir al estado 67
    MAYORIGUAL    desplazar e ir al estado 68
    MENORIGUAL    desplazar e ir al estado 69
    MAYORQUE      desplazar e ir al estado 70
    MENORQUE      desplazar e ir al estado 71
    '-'           desplazar e ir al estado 72
    '+'           desplazar e ir al estado 73
    '*'           desplazar e ir al estado 74
    '/'           desplazar e ir al estado 75

    $default  reduce usando la regla 78 (cases)


Estado 183

   88 elif_l: ELIF . elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque
   89       | ELIF . elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque elif_copia_salida elif_copia_siguiente elif_l

    $default  reduce usando la regla 93 (elif_control)

    elif_control  ir al estado 189


Estado 184

   91 elif_l: ELSE . ':' FIN_DE_LINEA $@10 bloque

    ':'  desplazar e ir al estado 190


Estado 185

   87 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @9 elif_l .

    $default  reduce usando la regla 87 (if)


Estado 186

   84 for: FOR IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA $@8 bloque .

    $default  reduce usando la regla 84 (for)


Estado 187

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA bloque funcFinal .

    $default  reduce usando la regla 72 (func)


Estado 188

   79 cases: exp case_cond WHEN_CASE exp FIN_DE_LINEA . cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 155
    comp       ir al estado 35
    cases      ir al estado 191


Estado 189

   88 elif_l: ELIF elif_control . exp ':' FIN_DE_LINEA ne elif_eval bloque
   89       | ELIF elif_control . exp ':' FIN_DE_LINEA ne elif_eval bloque elif_copia_salida elif_copia_siguiente elif_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 192
    comp       ir al estado 35


Estado 190

   91 elif_l: ELSE ':' . FIN_DE_LINEA $@10 bloque

    FIN_DE_LINEA  desplazar e ir al estado 193


Estado 191

   79 cases: exp case_cond WHEN_CASE exp FIN_DE_LINEA cases .

    $default  reduce usando la regla 79 (cases)


Estado 192

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   88 elif_l: ELIF elif_control exp . ':' FIN_DE_LINEA ne elif_eval bloque
   89       | ELIF elif_control exp . ':' FIN_DE_LINEA ne elif_eval bloque elif_copia_salida elif_copia_siguiente elif_l

    NOTIS       desplazar e ir al estado 64
    IS          desplazar e ir al estado 65
    OR          desplazar e ir al estado 66
    AND         desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 68
    MENORIGUAL  desplazar e ir al estado 69
    MAYORQUE    desplazar e ir al estado 70
    MENORQUE    desplazar e ir al estado 71
    '-'         desplazar e ir al estado 72
    '+'         desplazar e ir al estado 73
    '*'         desplazar e ir al estado 74
    '/'         desplazar e ir al estado 75
    ':'         desplazar e ir al estado 194


Estado 193

   91 elif_l: ELSE ':' FIN_DE_LINEA . $@10 bloque

    $default  reduce usando la regla 90 ($@10)

    $@10  ir al estado 195


Estado 194

   88 elif_l: ELIF elif_control exp ':' . FIN_DE_LINEA ne elif_eval bloque
   89       | ELIF elif_control exp ':' . FIN_DE_LINEA ne elif_eval bloque elif_copia_salida elif_copia_siguiente elif_l

    FIN_DE_LINEA  desplazar e ir al estado 196


Estado 195

   91 elif_l: ELSE ':' FIN_DE_LINEA $@10 . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 197


Estado 196

   88 elif_l: ELIF elif_control exp ':' FIN_DE_LINEA . ne elif_eval bloque
   89       | ELIF elif_control exp ':' FIN_DE_LINEA . ne elif_eval bloque elif_copia_salida elif_copia_siguiente elif_l

    $default  reduce usando la regla 92 (ne)

    ne  ir al estado 198


Estado 197

   91 elif_l: ELSE ':' FIN_DE_LINEA $@10 bloque .

    $default  reduce usando la regla 91 (elif_l)


Estado 198

   88 elif_l: ELIF elif_control exp ':' FIN_DE_LINEA ne . elif_eval bloque
   89       | ELIF elif_control exp ':' FIN_DE_LINEA ne . elif_eval bloque elif_copia_salida elif_copia_siguiente elif_l

    $default  reduce usando la regla 94 (elif_eval)

    elif_eval  ir al estado 199


Estado 199

   88 elif_l: ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval . bloque
   89       | ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval . bloque elif_copia_salida elif_copia_siguiente elif_l

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 200


Estado 200

   88 elif_l: ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque .
   89       | ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque . elif_copia_salida elif_copia_siguiente elif_l

    ELIF      reduce usando la regla 96 (elif_copia_salida)
    ELSE      reduce usando la regla 96 (elif_copia_salida)
    $default  reduce usando la regla 88 (elif_l)

    elif_copia_salida  ir al estado 201


Estado 201

   89 elif_l: ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque elif_copia_salida . elif_copia_siguiente elif_l

    $default  reduce usando la regla 97 (elif_copia_siguiente)

    elif_copia_siguiente  ir al estado 202


Estado 202

   89 elif_l: ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque elif_copia_salida elif_copia_siguiente . elif_l

    ELIF  desplazar e ir al estado 183
    ELSE  desplazar e ir al estado 184

    elif_l  ir al estado 203


Estado 203

   89 elif_l: ELIF elif_control exp ':' FIN_DE_LINEA ne elif_eval bloque elif_copia_salida elif_copia_siguiente elif_l .

    $default  reduce usando la regla 89 (elif_l)
