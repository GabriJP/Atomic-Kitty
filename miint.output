Gramática

    0 $accept: lista $end

    1 $@1: /* vacío */

    2 lista: error FIN_DE_LINEA $@1 lista
    3      | FIN_DE_LINEA lista
    4      | /* vacío */
    5      | func FIN_DE_LINEA lista
    6      | inst_l FIN_DE_LINEA lista

    7 exp_l: exp
    8      | exp ',' exp_l

    9 tupla: '(' exp_l ')'

   10 tupla_decl: '(' tipo_l ')'

   11 func_call: IDENTIFICADOR tupla
   12          | IDENTIFICADOR '(' ')'

   13 exp: exp '-' exp
   14    | exp '+' exp
   15    | exp '/' exp
   16    | exp '*' exp
   17    | exp AND exp
   18    | exp OR exp
   19    | is
   20    | func_call
   21    | VALOR_INT
   22    | VALOR_FLOAT
   23    | VALOR_DOUBLE
   24    | VALOR_LONG
   25    | VALOR_BOOL
   26    | VALOR_CHAR
   27    | VALOR_STRING
   28    | IDENTIFICADOR
   29    | tupla
   30    | IDENTIFICADOR ACCESO

   31 tipo: tupla_decl
   32     | INT
   33     | FLOAT
   34     | LONG
   35     | DOUBLE
   36     | BOOL
   37     | STRING
   38     | CHAR

   39 tipo_l: tipo
   40       | tipo ',' tipo_l

   41 args: tipo IDENTIFICADOR
   42     | tipo IDENTIFICADOR ',' tipo_l

   43 init: tipo IDENTIFICADOR '=' exp

   44 asign: IDENTIFICADOR '=' exp

   45 decl: tipo IDENTIFICADOR

   46 in: IDENTIFICADOR IN rango
   47   | IDENTIFICADOR NOTIN rango

   48 is: exp IS exp
   49   | exp NOTIS exp

   50 inst: exp
   51     | init
   52     | asign
   53     | decl
   54     | when
   55     | for
   56     | while
   57     | if
   58     | bloque
   59     | RETURN exp

   60 inst_l: inst FIN_DE_LINEA
   61       | inst FIN_DE_LINEA inst_l

   62 bloque: ABREBLOQUE CIERRABLOQUE
   63       | ABREBLOQUE inst_l CIERRABLOQUE

   64 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   65     | tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque
   66     | VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   67     | VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

   68 cases: exp WHEN_CASE exp
   69      | exp WHEN_CASE exp FIN_DE_LINEA cases

   70 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   71     | WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

   72 for: FOR in ':' FIN_DE_LINEA bloque

   73 if: IF exp ':' FIN_DE_LINEA bloque
   74   | IF exp ':' FIN_DE_LINEA bloque else
   75   | IF exp ':' FIN_DE_LINEA bloque elif_l
   76   | IF exp ':' FIN_DE_LINEA bloque elif_l else

   77 elif_l: ELIF exp ':' FIN_DE_LINEA bloque
   78       | ELIF exp ':' FIN_DE_LINEA bloque elif_l

   79 else: ELSE ':' FIN_DE_LINEA bloque

   80 while: WHILE exp ':' FIN_DE_LINEA bloque

   81 rango: exp RANGE exp
   82      | exp RANGE exp ',' exp


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 9 10 12 64 65 66 67
')' (41) 9 10 12 64 65 66 67
'*' (42) 16
'+' (43) 14
',' (44) 8 40 42 82
'-' (45) 13
'/' (47) 15
':' (58) 64 65 66 67 70 71 72 73 74 75 76 77 78 79 80
'=' (61) 43 44
error (256) 2
VALOR_FLOAT (258) 22
VALOR_DOUBLE (259) 23
VALOR_INT (260) 21
VALOR_BOOL (261) 25
VALOR_LONG (262) 24
VALOR_CHAR (263) 26
VALOR_STRING (264) 27
IDENTIFICADOR (265) 11 12 28 30 41 42 43 44 45 46 47 64 65 66 67
FIN_DE_LINEA (266) 2 3 5 6 60 61 64 65 66 67 69 70 71 72 73 74 75 76
    77 78 79 80
INT (267) 32
LONG (268) 34
FLOAT (269) 33
DOUBLE (270) 35
BOOL (271) 36
STRING (272) 37
VOID (273) 66 67
CHAR (274) 38
WHEN (275) 70 71
WHEN_CASE (276) 68 69
IF (277) 73 74 75 76
ELIF (278) 77 78
ELSE (279) 79
WHILE (280) 80
FOR (281) 72
NOTIS (282) 49
IS (283) 48
OR (284) 18
AND (285) 17
RANGE (286) 81 82
RETURN (287) 59
ABREBLOQUE (288) 62 63 70 71
CIERRABLOQUE (289) 62 63 70 71
IN (290) 46
NOTIN (291) 47
ACCESO (292) 30


No terminales con las reglas donde aparecen

$accept (47)
    en la izquierda: 0
lista (48)
    en la izquierda: 2 3 4 5 6, en la derecha: 0 2 3 5 6
$@1 (49)
    en la izquierda: 1, en la derecha: 2
exp_l (50)
    en la izquierda: 7 8, en la derecha: 8 9
tupla (51)
    en la izquierda: 9, en la derecha: 11 29
tupla_decl (52)
    en la izquierda: 10, en la derecha: 31
func_call (53)
    en la izquierda: 11 12, en la derecha: 20
exp (54)
    en la izquierda: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
    29 30, en la derecha: 7 8 13 14 15 16 17 18 43 44 48 49 50 59 68
    69 70 73 74 75 76 77 78 80 81 82
tipo (55)
    en la izquierda: 31 32 33 34 35 36 37 38, en la derecha: 39 40
    41 42 43 45 64 65
tipo_l (56)
    en la izquierda: 39 40, en la derecha: 10 40 42
args (57)
    en la izquierda: 41 42, en la derecha: 65 67
init (58)
    en la izquierda: 43, en la derecha: 51
asign (59)
    en la izquierda: 44, en la derecha: 52
decl (60)
    en la izquierda: 45, en la derecha: 53
in (61)
    en la izquierda: 46 47, en la derecha: 72
is (62)
    en la izquierda: 48 49, en la derecha: 19
inst (63)
    en la izquierda: 50 51 52 53 54 55 56 57 58 59, en la derecha:
    60 61
inst_l (64)
    en la izquierda: 60 61, en la derecha: 6 61 63
bloque (65)
    en la izquierda: 62 63, en la derecha: 58 64 65 66 67 72 73 74
    75 76 77 78 79 80
func (66)
    en la izquierda: 64 65 66 67, en la derecha: 5
cases (67)
    en la izquierda: 68 69, en la derecha: 69 70 71
when (68)
    en la izquierda: 70 71, en la derecha: 54
for (69)
    en la izquierda: 72, en la derecha: 55
if (70)
    en la izquierda: 73 74 75 76, en la derecha: 57
elif_l (71)
    en la izquierda: 77 78, en la derecha: 75 76 78
else (72)
    en la izquierda: 79, en la derecha: 74 76
while (73)
    en la izquierda: 80, en la derecha: 56
rango (74)
    en la izquierda: 81 82, en la derecha: 46 47 71


estado 0

    0 $accept: . lista $end

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 26
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 1

    2 lista: error . FIN_DE_LINEA $@1 lista

    FIN_DE_LINEA  desplazar e ir al estado 44


estado 2

   22 exp: VALOR_FLOAT .

    $default  reduce usando la regla 22 (exp)


estado 3

   23 exp: VALOR_DOUBLE .

    $default  reduce usando la regla 23 (exp)


estado 4

   21 exp: VALOR_INT .

    $default  reduce usando la regla 21 (exp)


estado 5

   25 exp: VALOR_BOOL .

    $default  reduce usando la regla 25 (exp)


estado 6

   24 exp: VALOR_LONG .

    $default  reduce usando la regla 24 (exp)


estado 7

   26 exp: VALOR_CHAR .

    $default  reduce usando la regla 26 (exp)


estado 8

   27 exp: VALOR_STRING .

    $default  reduce usando la regla 27 (exp)


estado 9

   11 func_call: IDENTIFICADOR . tupla
   12          | IDENTIFICADOR . '(' ')'
   28 exp: IDENTIFICADOR .
   30    | IDENTIFICADOR . ACCESO
   44 asign: IDENTIFICADOR . '=' exp

    ACCESO  desplazar e ir al estado 45
    '='     desplazar e ir al estado 46
    '('     desplazar e ir al estado 47

    $default  reduce usando la regla 28 (exp)

    tupla  ir al estado 48


estado 10

    3 lista: FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 49
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 11

   32 tipo: INT .

    $default  reduce usando la regla 32 (tipo)


estado 12

   34 tipo: LONG .

    $default  reduce usando la regla 34 (tipo)


estado 13

   33 tipo: FLOAT .

    $default  reduce usando la regla 33 (tipo)


estado 14

   35 tipo: DOUBLE .

    $default  reduce usando la regla 35 (tipo)


estado 15

   36 tipo: BOOL .

    $default  reduce usando la regla 36 (tipo)


estado 16

   37 tipo: STRING .

    $default  reduce usando la regla 37 (tipo)


estado 17

   66 func: VOID . IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   67     | VOID . IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 50


estado 18

   38 tipo: CHAR .

    $default  reduce usando la regla 38 (tipo)


estado 19

   70 when: WHEN . exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   71     | WHEN . rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 53
    is         ir al estado 35
    rango      ir al estado 54


estado 20

   73 if: IF . exp ':' FIN_DE_LINEA bloque
   74   | IF . exp ':' FIN_DE_LINEA bloque else
   75   | IF . exp ':' FIN_DE_LINEA bloque elif_l
   76   | IF . exp ':' FIN_DE_LINEA bloque elif_l else

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 55
    is         ir al estado 35


estado 21

   80 while: WHILE . exp ':' FIN_DE_LINEA bloque

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 56
    is         ir al estado 35


estado 22

   72 for: FOR . in ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 57

    in  ir al estado 58


estado 23

   59 inst: RETURN . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 59
    is         ir al estado 35


estado 24

   62 bloque: ABREBLOQUE . CIERRABLOQUE
   63       | ABREBLOQUE . inst_l CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    CIERRABLOQUE   desplazar e ir al estado 60
    '('            desplazar e ir al estado 25

    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 61
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 62
    bloque      ir al estado 38
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 25

    9 tupla: '(' . exp_l ')'
   10 tupla_decl: '(' . tipo_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    '('            desplazar e ir al estado 25

    exp_l       ir al estado 63
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 64
    tipo        ir al estado 65
    tipo_l      ir al estado 66
    is          ir al estado 35


estado 26

    0 $accept: lista . $end

    $end  desplazar e ir al estado 67


estado 27

   29 exp: tupla .

    $default  reduce usando la regla 29 (exp)


estado 28

   31 tipo: tupla_decl .

    $default  reduce usando la regla 31 (tipo)


estado 29

   20 exp: func_call .

    $default  reduce usando la regla 20 (exp)


estado 30

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   50 inst: exp .

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 50 (inst)


estado 31

   43 init: tipo . IDENTIFICADOR '=' exp
   45 decl: tipo . IDENTIFICADOR
   64 func: tipo . IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   65     | tipo . IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 76


estado 32

   51 inst: init .

    $default  reduce usando la regla 51 (inst)


estado 33

   52 inst: asign .

    $default  reduce usando la regla 52 (inst)


estado 34

   53 inst: decl .

    $default  reduce usando la regla 53 (inst)


estado 35

   19 exp: is .

    $default  reduce usando la regla 19 (exp)


estado 36

   60 inst_l: inst . FIN_DE_LINEA
   61       | inst . FIN_DE_LINEA inst_l

    FIN_DE_LINEA  desplazar e ir al estado 77


estado 37

    6 lista: inst_l . FIN_DE_LINEA lista

    FIN_DE_LINEA  desplazar e ir al estado 78


estado 38

   58 inst: bloque .

    $default  reduce usando la regla 58 (inst)


estado 39

    5 lista: func . FIN_DE_LINEA lista

    FIN_DE_LINEA  desplazar e ir al estado 79


estado 40

   54 inst: when .

    $default  reduce usando la regla 54 (inst)


estado 41

   55 inst: for .

    $default  reduce usando la regla 55 (inst)


estado 42

   57 inst: if .

    $default  reduce usando la regla 57 (inst)


estado 43

   56 inst: while .

    $default  reduce usando la regla 56 (inst)


estado 44

    2 lista: error FIN_DE_LINEA . $@1 lista

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 80


estado 45

   30 exp: IDENTIFICADOR ACCESO .

    $default  reduce usando la regla 30 (exp)


estado 46

   44 asign: IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 81
    is         ir al estado 35


estado 47

    9 tupla: '(' . exp_l ')'
   12 func_call: IDENTIFICADOR '(' . ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52
    ')'            desplazar e ir al estado 82

    exp_l      ir al estado 63
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 64
    is         ir al estado 35


estado 48

   11 func_call: IDENTIFICADOR tupla .

    $default  reduce usando la regla 11 (func_call)


estado 49

    3 lista: FIN_DE_LINEA lista .

    $default  reduce usando la regla 3 (lista)


estado 50

   66 func: VOID IDENTIFICADOR . '(' ')' ':' FIN_DE_LINEA bloque
   67     | VOID IDENTIFICADOR . '(' args ')' ':' FIN_DE_LINEA bloque

    '('  desplazar e ir al estado 83


estado 51

   11 func_call: IDENTIFICADOR . tupla
   12          | IDENTIFICADOR . '(' ')'
   28 exp: IDENTIFICADOR .
   30    | IDENTIFICADOR . ACCESO

    ACCESO  desplazar e ir al estado 45
    '('     desplazar e ir al estado 47

    $default  reduce usando la regla 28 (exp)

    tupla  ir al estado 48


estado 52

    9 tupla: '(' . exp_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    exp_l      ir al estado 63
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 64
    is         ir al estado 35


estado 53

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   70 when: WHEN exp . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   81 rango: exp . RANGE exp
   82      | exp . RANGE exp ',' exp

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    RANGE  desplazar e ir al estado 84
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75
    ':'    desplazar e ir al estado 85


estado 54

   71 when: WHEN rango . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    ':'  desplazar e ir al estado 86


estado 55

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   73 if: IF exp . ':' FIN_DE_LINEA bloque
   74   | IF exp . ':' FIN_DE_LINEA bloque else
   75   | IF exp . ':' FIN_DE_LINEA bloque elif_l
   76   | IF exp . ':' FIN_DE_LINEA bloque elif_l else

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75
    ':'    desplazar e ir al estado 87


estado 56

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   80 while: WHILE exp . ':' FIN_DE_LINEA bloque

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75
    ':'    desplazar e ir al estado 88


estado 57

   46 in: IDENTIFICADOR . IN rango
   47   | IDENTIFICADOR . NOTIN rango

    IN     desplazar e ir al estado 89
    NOTIN  desplazar e ir al estado 90


estado 58

   72 for: FOR in . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 91


estado 59

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   59 inst: RETURN exp .

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 59 (inst)


estado 60

   62 bloque: ABREBLOQUE CIERRABLOQUE .

    $default  reduce usando la regla 62 (bloque)


estado 61

   43 init: tipo . IDENTIFICADOR '=' exp
   45 decl: tipo . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 92


estado 62

   63 bloque: ABREBLOQUE inst_l . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 93


estado 63

    9 tupla: '(' exp_l . ')'

    ')'  desplazar e ir al estado 94


estado 64

    7 exp_l: exp .
    8      | exp . ',' exp_l
   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    ','    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 7 (exp_l)


estado 65

   39 tipo_l: tipo .
   40       | tipo . ',' tipo_l

    ','  desplazar e ir al estado 96

    $default  reduce usando la regla 39 (tipo_l)


estado 66

   10 tupla_decl: '(' tipo_l . ')'

    ')'  desplazar e ir al estado 97


estado 67

    0 $accept: lista $end .

    $default  aceptar


estado 68

   49 is: exp NOTIS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 98
    is         ir al estado 35


estado 69

   48 is: exp IS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 99
    is         ir al estado 35


estado 70

   18 exp: exp OR . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 100
    is         ir al estado 35


estado 71

   17 exp: exp AND . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 101
    is         ir al estado 35


estado 72

   13 exp: exp '-' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 102
    is         ir al estado 35


estado 73

   14 exp: exp '+' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 103
    is         ir al estado 35


estado 74

   16 exp: exp '*' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 104
    is         ir al estado 35


estado 75

   15 exp: exp '/' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 105
    is         ir al estado 35


estado 76

   43 init: tipo IDENTIFICADOR . '=' exp
   45 decl: tipo IDENTIFICADOR .
   64 func: tipo IDENTIFICADOR . '(' ')' ':' FIN_DE_LINEA bloque
   65     | tipo IDENTIFICADOR . '(' args ')' ':' FIN_DE_LINEA bloque

    '='  desplazar e ir al estado 106
    '('  desplazar e ir al estado 107

    $default  reduce usando la regla 45 (decl)


estado 77

   60 inst_l: inst FIN_DE_LINEA .
   61       | inst FIN_DE_LINEA . inst_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $default  reduce usando la regla 60 (inst_l)

    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 61
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 108
    bloque      ir al estado 38
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 78

    6 lista: inst_l FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 109
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 79

    5 lista: func FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 110
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 80

    2 lista: error FIN_DE_LINEA $@1 . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 111
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 81

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   44 asign: IDENTIFICADOR '=' exp .
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 44 (asign)


estado 82

   12 func_call: IDENTIFICADOR '(' ')' .

    $default  reduce usando la regla 12 (func_call)


estado 83

   66 func: VOID IDENTIFICADOR '(' . ')' ':' FIN_DE_LINEA bloque
   67     | VOID IDENTIFICADOR '(' . args ')' ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 112
    ')'     desplazar e ir al estado 113

    tupla_decl  ir al estado 28
    tipo        ir al estado 114
    args        ir al estado 115


estado 84

   81 rango: exp RANGE . exp
   82      | exp RANGE . exp ',' exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 116
    is         ir al estado 35


estado 85

   70 when: WHEN exp ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 117


estado 86

   71 when: WHEN rango ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 118


estado 87

   73 if: IF exp ':' . FIN_DE_LINEA bloque
   74   | IF exp ':' . FIN_DE_LINEA bloque else
   75   | IF exp ':' . FIN_DE_LINEA bloque elif_l
   76   | IF exp ':' . FIN_DE_LINEA bloque elif_l else

    FIN_DE_LINEA  desplazar e ir al estado 119


estado 88

   80 while: WHILE exp ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 120


estado 89

   46 in: IDENTIFICADOR IN . rango

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 121
    is         ir al estado 35
    rango      ir al estado 122


estado 90

   47 in: IDENTIFICADOR NOTIN . rango

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 121
    is         ir al estado 35
    rango      ir al estado 123


estado 91

   72 for: FOR in ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 124


estado 92

   43 init: tipo IDENTIFICADOR . '=' exp
   45 decl: tipo IDENTIFICADOR .

    '='  desplazar e ir al estado 106

    $default  reduce usando la regla 45 (decl)


estado 93

   63 bloque: ABREBLOQUE inst_l CIERRABLOQUE .

    $default  reduce usando la regla 63 (bloque)


estado 94

    9 tupla: '(' exp_l ')' .

    $default  reduce usando la regla 9 (tupla)


estado 95

    8 exp_l: exp ',' . exp_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    exp_l      ir al estado 125
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 64
    is         ir al estado 35


estado 96

   40 tipo_l: tipo ',' . tipo_l

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 112

    tupla_decl  ir al estado 28
    tipo        ir al estado 65
    tipo_l      ir al estado 126


estado 97

   10 tupla_decl: '(' tipo_l ')' .

    $default  reduce usando la regla 10 (tupla_decl)


estado 98

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   49   | exp NOTIS exp .

    '-'  desplazar e ir al estado 72
    '+'  desplazar e ir al estado 73
    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 49 (is)


estado 99

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   48   | exp IS exp .
   49   | exp . NOTIS exp

    '-'  desplazar e ir al estado 72
    '+'  desplazar e ir al estado 73
    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 48 (is)


estado 100

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   18    | exp OR exp .
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 18 (exp)


estado 101

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   17    | exp AND exp .
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 17 (exp)


estado 102

   13 exp: exp . '-' exp
   13    | exp '-' exp .
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 13 (exp)


estado 103

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   14    | exp '+' exp .
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    '*'  desplazar e ir al estado 74
    '/'  desplazar e ir al estado 75

    $default  reduce usando la regla 14 (exp)


estado 104

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   16    | exp '*' exp .
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    $default  reduce usando la regla 16 (exp)


estado 105

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   15    | exp '/' exp .
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    $default  reduce usando la regla 15 (exp)


estado 106

   43 init: tipo IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 127
    is         ir al estado 35


estado 107

   64 func: tipo IDENTIFICADOR '(' . ')' ':' FIN_DE_LINEA bloque
   65     | tipo IDENTIFICADOR '(' . args ')' ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 112
    ')'     desplazar e ir al estado 128

    tupla_decl  ir al estado 28
    tipo        ir al estado 114
    args        ir al estado 129


estado 108

   61 inst_l: inst FIN_DE_LINEA inst_l .

    $default  reduce usando la regla 61 (inst_l)


estado 109

    6 lista: inst_l FIN_DE_LINEA lista .

    $default  reduce usando la regla 6 (lista)


estado 110

    5 lista: func FIN_DE_LINEA lista .

    $default  reduce usando la regla 5 (lista)


estado 111

    2 lista: error FIN_DE_LINEA $@1 lista .

    $default  reduce usando la regla 2 (lista)


estado 112

   10 tupla_decl: '(' . tipo_l ')'

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 112

    tupla_decl  ir al estado 28
    tipo        ir al estado 65
    tipo_l      ir al estado 66


estado 113

   66 func: VOID IDENTIFICADOR '(' ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 130


estado 114

   41 args: tipo . IDENTIFICADOR
   42     | tipo . IDENTIFICADOR ',' tipo_l

    IDENTIFICADOR  desplazar e ir al estado 131


estado 115

   67 func: VOID IDENTIFICADOR '(' args . ')' ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 132


estado 116

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   81 rango: exp RANGE exp .
   82      | exp RANGE exp . ',' exp

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    ','    desplazar e ir al estado 133
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 81 (rango)


estado 117

   70 when: WHEN exp ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 134


estado 118

   71 when: WHEN rango ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 135


estado 119

   73 if: IF exp ':' FIN_DE_LINEA . bloque
   74   | IF exp ':' FIN_DE_LINEA . bloque else
   75   | IF exp ':' FIN_DE_LINEA . bloque elif_l
   76   | IF exp ':' FIN_DE_LINEA . bloque elif_l else

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 136


estado 120

   80 while: WHILE exp ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 137


estado 121

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   81 rango: exp . RANGE exp
   82      | exp . RANGE exp ',' exp

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    RANGE  desplazar e ir al estado 84
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75


estado 122

   46 in: IDENTIFICADOR IN rango .

    $default  reduce usando la regla 46 (in)


estado 123

   47 in: IDENTIFICADOR NOTIN rango .

    $default  reduce usando la regla 47 (in)


estado 124

   72 for: FOR in ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 138


estado 125

    8 exp_l: exp ',' exp_l .

    $default  reduce usando la regla 8 (exp_l)


estado 126

   40 tipo_l: tipo ',' tipo_l .

    $default  reduce usando la regla 40 (tipo_l)


estado 127

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   43 init: tipo IDENTIFICADOR '=' exp .
   48 is: exp . IS exp
   49   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 43 (init)


estado 128

   64 func: tipo IDENTIFICADOR '(' ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 139


estado 129

   65 func: tipo IDENTIFICADOR '(' args . ')' ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 140


estado 130

   66 func: VOID IDENTIFICADOR '(' ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 141


estado 131

   41 args: tipo IDENTIFICADOR .
   42     | tipo IDENTIFICADOR . ',' tipo_l

    ','  desplazar e ir al estado 142

    $default  reduce usando la regla 41 (args)


estado 132

   67 func: VOID IDENTIFICADOR '(' args ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 143


estado 133

   82 rango: exp RANGE exp ',' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 144
    is         ir al estado 35


estado 134

   70 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 145
    is         ir al estado 35
    cases      ir al estado 146


estado 135

   71 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 145
    is         ir al estado 35
    cases      ir al estado 147


estado 136

   73 if: IF exp ':' FIN_DE_LINEA bloque .
   74   | IF exp ':' FIN_DE_LINEA bloque . else
   75   | IF exp ':' FIN_DE_LINEA bloque . elif_l
   76   | IF exp ':' FIN_DE_LINEA bloque . elif_l else

    ELIF  desplazar e ir al estado 148
    ELSE  desplazar e ir al estado 149

    $default  reduce usando la regla 73 (if)

    elif_l  ir al estado 150
    else    ir al estado 151


estado 137

   80 while: WHILE exp ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 80 (while)


estado 138

   72 for: FOR in ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 72 (for)


estado 139

   64 func: tipo IDENTIFICADOR '(' ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 152


estado 140

   65 func: tipo IDENTIFICADOR '(' args ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 153


estado 141

   66 func: VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 154


estado 142

   42 args: tipo IDENTIFICADOR ',' . tipo_l

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 112

    tupla_decl  ir al estado 28
    tipo        ir al estado 65
    tipo_l      ir al estado 155


estado 143

   67 func: VOID IDENTIFICADOR '(' args ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 156


estado 144

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   82 rango: exp RANGE exp ',' exp .

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75

    $default  reduce usando la regla 82 (rango)


estado 145

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   68 cases: exp . WHEN_CASE exp
   69      | exp . WHEN_CASE exp FIN_DE_LINEA cases

    WHEN_CASE  desplazar e ir al estado 157
    NOTIS      desplazar e ir al estado 68
    IS         desplazar e ir al estado 69
    OR         desplazar e ir al estado 70
    AND        desplazar e ir al estado 71
    '-'        desplazar e ir al estado 72
    '+'        desplazar e ir al estado 73
    '*'        desplazar e ir al estado 74
    '/'        desplazar e ir al estado 75


estado 146

   70 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 158


estado 147

   71 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 159


estado 148

   77 elif_l: ELIF . exp ':' FIN_DE_LINEA bloque
   78       | ELIF . exp ':' FIN_DE_LINEA bloque elif_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 160
    is         ir al estado 35


estado 149

   79 else: ELSE . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 161


estado 150

   75 if: IF exp ':' FIN_DE_LINEA bloque elif_l .
   76   | IF exp ':' FIN_DE_LINEA bloque elif_l . else

    ELSE  desplazar e ir al estado 149

    $default  reduce usando la regla 75 (if)

    else  ir al estado 162


estado 151

   74 if: IF exp ':' FIN_DE_LINEA bloque else .

    $default  reduce usando la regla 74 (if)


estado 152

   64 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 163


estado 153

   65 func: tipo IDENTIFICADOR '(' args ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 164


estado 154

   66 func: VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 66 (func)


estado 155

   42 args: tipo IDENTIFICADOR ',' tipo_l .

    $default  reduce usando la regla 42 (args)


estado 156

   67 func: VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 165


estado 157

   68 cases: exp WHEN_CASE . exp
   69      | exp WHEN_CASE . exp FIN_DE_LINEA cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 166
    is         ir al estado 35


estado 158

   70 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 70 (when)


estado 159

   71 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 71 (when)


estado 160

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   77 elif_l: ELIF exp . ':' FIN_DE_LINEA bloque
   78       | ELIF exp . ':' FIN_DE_LINEA bloque elif_l

    NOTIS  desplazar e ir al estado 68
    IS     desplazar e ir al estado 69
    OR     desplazar e ir al estado 70
    AND    desplazar e ir al estado 71
    '-'    desplazar e ir al estado 72
    '+'    desplazar e ir al estado 73
    '*'    desplazar e ir al estado 74
    '/'    desplazar e ir al estado 75
    ':'    desplazar e ir al estado 167


estado 161

   79 else: ELSE ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 168


estado 162

   76 if: IF exp ':' FIN_DE_LINEA bloque elif_l else .

    $default  reduce usando la regla 76 (if)


estado 163

   64 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 64 (func)


estado 164

   65 func: tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 169


estado 165

   67 func: VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 67 (func)


estado 166

   13 exp: exp . '-' exp
   14    | exp . '+' exp
   15    | exp . '/' exp
   16    | exp . '*' exp
   17    | exp . AND exp
   18    | exp . OR exp
   48 is: exp . IS exp
   49   | exp . NOTIS exp
   68 cases: exp WHEN_CASE exp .
   69      | exp WHEN_CASE exp . FIN_DE_LINEA cases

    FIN_DE_LINEA  desplazar e ir al estado 170
    NOTIS         desplazar e ir al estado 68
    IS            desplazar e ir al estado 69
    OR            desplazar e ir al estado 70
    AND           desplazar e ir al estado 71
    '-'           desplazar e ir al estado 72
    '+'           desplazar e ir al estado 73
    '*'           desplazar e ir al estado 74
    '/'           desplazar e ir al estado 75

    $default  reduce usando la regla 68 (cases)


estado 167

   77 elif_l: ELIF exp ':' . FIN_DE_LINEA bloque
   78       | ELIF exp ':' . FIN_DE_LINEA bloque elif_l

    FIN_DE_LINEA  desplazar e ir al estado 171


estado 168

   79 else: ELSE ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 172


estado 169

   65 func: tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 65 (func)


estado 170

   69 cases: exp WHEN_CASE exp FIN_DE_LINEA . cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 145
    is         ir al estado 35
    cases      ir al estado 173


estado 171

   77 elif_l: ELIF exp ':' FIN_DE_LINEA . bloque
   78       | ELIF exp ':' FIN_DE_LINEA . bloque elif_l

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 174


estado 172

   79 else: ELSE ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 79 (else)


estado 173

   69 cases: exp WHEN_CASE exp FIN_DE_LINEA cases .

    $default  reduce usando la regla 69 (cases)


estado 174

   77 elif_l: ELIF exp ':' FIN_DE_LINEA bloque .
   78       | ELIF exp ':' FIN_DE_LINEA bloque . elif_l

    ELIF  desplazar e ir al estado 148

    $default  reduce usando la regla 77 (elif_l)

    elif_l  ir al estado 175


estado 175

   78 elif_l: ELIF exp ':' FIN_DE_LINEA bloque elif_l .

    $default  reduce usando la regla 78 (elif_l)
