Terminales no usados en la gramática

   NOTIN
   TUPLE


Gramática

    0 $accept: lista $end

    1 $@1: %empty

    2 lista: error FIN_DE_LINEA $@1 lista
    3      | FIN_DE_LINEA lista
    4      | func lista
    5      | inst_l FIN_DE_LINEA lista
    6      | inst_l
    7      | %empty

    8 exp_l: exp
    9      | exp ',' exp_l

   10 tupla: '(' exp_l ')'

   11 tupla_decl: '(' tipo_l ')'

   12 func_call: IDENTIFICADOR saveReg tupla
   13          | IDENTIFICADOR saveReg '(' ')'

   14 saveReg: %empty

   15 exp: exp '-' exp
   16    | exp '+' exp
   17    | exp '/' exp
   18    | exp '*' exp
   19    | exp AND exp
   20    | exp OR exp
   21    | comp
   22    | func_call
   23    | VALOR_INT
   24    | VALOR_FLOAT
   25    | VALOR_DOUBLE
   26    | VALOR_LONG
   27    | VALOR_BOOL
   28    | VALOR_CHAR
   29    | VALOR_STRING
   30    | IDENTIFICADOR
   31    | tupla
   32    | IDENTIFICADOR ACCESO

   33 tipo: tupla_decl
   34     | INT
   35     | FLOAT
   36     | LONG
   37     | DOUBLE
   38     | BOOL
   39     | STRING
   40     | CHAR

   41 tipo_l: tipo
   42       | tipo ',' tipo_l

   43 args: tipo IDENTIFICADOR
   44     | tipo IDENTIFICADOR ',' args

   45 init: tipo IDENTIFICADOR '=' exp

   46 asign: IDENTIFICADOR '=' exp

   47 decl: tipo IDENTIFICADOR FIN_DE_LINEA

   48 comp: exp MENORQUE exp
   49     | exp MAYORQUE exp
   50     | exp MENORIGUAL exp
   51     | exp MAYORIGUAL exp
   52     | exp IS exp
   53     | exp NOTIS exp

   54 inst: exp FIN_DE_LINEA
   55     | init FIN_DE_LINEA
   56     | asign FIN_DE_LINEA
   57     | decl
   58     | when
   59     | for
   60     | while
   61     | if
   62     | bloque
   63     | RETURN exp FIN_DE_LINEA

   64 inst_l: inst
   65       | inst inst_l

   66 $@2: %empty

   67 bloque: ABREBLOQUE $@2 dentroBloque CIERRABLOQUE

   68 dentroBloque: inst_l

   69 @3: %empty

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA bloque funcFinal

   71 @4: %empty

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA bloque funcFinal

   73 @5: %empty

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA bloque funcFinal

   75 @6: %empty

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA bloque funcFinal

   77 funcFinal: %empty

   78 cases: exp WHEN_CASE exp
   79      | exp WHEN_CASE exp FIN_DE_LINEA cases

   80 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   81     | WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

   82 $@7: %empty

   83 for: FOR IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA $@7 bloque

   84 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque

   85 @8: %empty

   86 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @8 elif_l

   87 elif_l: ELIF exp ':' FIN_DE_LINEA ne elif_control bloque
   88       | ELIF exp ':' FIN_DE_LINEA ne elif_control bloque elif_copia_salida elif_copia_siguiente elif_l

   89 $@9: %empty

   90 elif_l: ELSE ':' FIN_DE_LINEA $@9 bloque

   91 ne: %empty

   92 elif_control: %empty

   93 if_evalua_expresion: %empty

   94 elif_copia_salida: %empty

   95 elif_copia_siguiente: %empty

   96 $@10: %empty

   97 $@11: %empty

   98 while: WHILE ne ne $@10 exp ':' $@11 FIN_DE_LINEA bloque

   99 rango: exp RANGE exp
  100      | exp RANGE exp ',' exp


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 10 11 13 70 72 74 76
')' (41) 10 11 13 70 72 74 76
'*' (42) 18
'+' (43) 16
',' (44) 9 42 44 100
'-' (45) 15
'/' (47) 17
':' (58) 70 72 74 76 80 81 83 84 86 87 88 90 98
'=' (61) 45 46
error (256) 2
VALOR_FLOAT (258) 24
VALOR_DOUBLE (259) 25
VALOR_INT (260) 23
VALOR_BOOL (261) 27
ACCESO (262) 32
VALOR_LONG (263) 26
VALOR_CHAR (264) 28
VALOR_STRING (265) 29
IDENTIFICADOR (266) 12 13 30 32 43 44 45 46 47 70 72 74 76 83
FIN_DE_LINEA (267) 2 3 5 47 54 55 56 63 70 72 74 76 79 80 81 83 84
    86 87 88 90 98
INT (268) 34
LONG (269) 36
FLOAT (270) 35
DOUBLE (271) 37
BOOL (272) 38
STRING (273) 39
VOID (274) 74 76
CHAR (275) 40
WHEN (276) 80 81
WHEN_CASE (277) 78 79
IF (278) 84 86
ELIF (279) 87 88
ELSE (280) 90
WHILE (281) 98
FOR (282) 83
NOTIS (283) 53
IS (284) 52
OR (285) 20
AND (286) 19
RANGE (287) 99 100
RETURN (288) 63
ABREBLOQUE (289) 67 80 81
CIERRABLOQUE (290) 67 80 81
IN (291) 83
NOTIN (292)
MAYORIGUAL (293) 51
MENORIGUAL (294) 50
MAYORQUE (295) 49
MENORQUE (296) 48
TUPLE (297)


No terminales con las reglas donde aparecen

$accept (52)
    en la izquierda: 0
lista (53)
    en la izquierda: 2 3 4 5 6 7, en la derecha: 0 2 3 4 5
$@1 (54)
    en la izquierda: 1, en la derecha: 2
exp_l (55)
    en la izquierda: 8 9, en la derecha: 9 10
tupla (56)
    en la izquierda: 10, en la derecha: 12 31
tupla_decl (57)
    en la izquierda: 11, en la derecha: 33
func_call (58)
    en la izquierda: 12 13, en la derecha: 22
saveReg (59)
    en la izquierda: 14, en la derecha: 12 13
exp (60)
    en la izquierda: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32, en la derecha: 8 9 15 16 17 18 19 20 45 46 48 49 50 51 52
    53 54 63 78 79 80 84 86 87 88 98 99 100
tipo (61)
    en la izquierda: 33 34 35 36 37 38 39 40, en la derecha: 41 42
    43 44 45 47 70 72
tipo_l (62)
    en la izquierda: 41 42, en la derecha: 11 42
args (63)
    en la izquierda: 43 44, en la derecha: 44 72 76
init (64)
    en la izquierda: 45, en la derecha: 55
asign (65)
    en la izquierda: 46, en la derecha: 56
decl (66)
    en la izquierda: 47, en la derecha: 57
comp (67)
    en la izquierda: 48 49 50 51 52 53, en la derecha: 21
inst (68)
    en la izquierda: 54 55 56 57 58 59 60 61 62 63, en la derecha:
    64 65
inst_l (69)
    en la izquierda: 64 65, en la derecha: 5 6 65 68
bloque (70)
    en la izquierda: 67, en la derecha: 62 70 72 74 76 83 84 86 87
    88 90 98
$@2 (71)
    en la izquierda: 66, en la derecha: 67
dentroBloque (72)
    en la izquierda: 68, en la derecha: 67
func (73)
    en la izquierda: 70 72 74 76, en la derecha: 4
@3 (74)
    en la izquierda: 69, en la derecha: 70
@4 (75)
    en la izquierda: 71, en la derecha: 72
@5 (76)
    en la izquierda: 73, en la derecha: 74
@6 (77)
    en la izquierda: 75, en la derecha: 76
funcFinal (78)
    en la izquierda: 77, en la derecha: 70 72 74 76
cases (79)
    en la izquierda: 78 79, en la derecha: 79 80 81
when (80)
    en la izquierda: 80 81, en la derecha: 58
for (81)
    en la izquierda: 83, en la derecha: 59
$@7 (82)
    en la izquierda: 82, en la derecha: 83
if (83)
    en la izquierda: 84 86, en la derecha: 61
@8 (84)
    en la izquierda: 85, en la derecha: 86
elif_l (85)
    en la izquierda: 87 88 90, en la derecha: 86 88
$@9 (86)
    en la izquierda: 89, en la derecha: 90
ne (87)
    en la izquierda: 91, en la derecha: 83 84 86 87 88 98
elif_control (88)
    en la izquierda: 92, en la derecha: 87 88
if_evalua_expresion (89)
    en la izquierda: 93, en la derecha: 84 86
elif_copia_salida (90)
    en la izquierda: 94, en la derecha: 88
elif_copia_siguiente (91)
    en la izquierda: 95, en la derecha: 88
while (92)
    en la izquierda: 98, en la derecha: 60
$@10 (93)
    en la izquierda: 96, en la derecha: 98
$@11 (94)
    en la izquierda: 97, en la derecha: 98
rango (95)
    en la izquierda: 99 100, en la derecha: 81 83


Estado 0

    0 $accept: . lista $end

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 26
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 1

    2 lista: error . FIN_DE_LINEA $@1 lista

    FIN_DE_LINEA  desplazar e ir al estado 44


Estado 2

   24 exp: VALOR_FLOAT .

    $default  reduce usando la regla 24 (exp)


Estado 3

   25 exp: VALOR_DOUBLE .

    $default  reduce usando la regla 25 (exp)


Estado 4

   23 exp: VALOR_INT .

    $default  reduce usando la regla 23 (exp)


Estado 5

   27 exp: VALOR_BOOL .

    $default  reduce usando la regla 27 (exp)


Estado 6

   26 exp: VALOR_LONG .

    $default  reduce usando la regla 26 (exp)


Estado 7

   28 exp: VALOR_CHAR .

    $default  reduce usando la regla 28 (exp)


Estado 8

   29 exp: VALOR_STRING .

    $default  reduce usando la regla 29 (exp)


Estado 9

   12 func_call: IDENTIFICADOR . saveReg tupla
   13          | IDENTIFICADOR . saveReg '(' ')'
   30 exp: IDENTIFICADOR .
   32    | IDENTIFICADOR . ACCESO
   46 asign: IDENTIFICADOR . '=' exp

    ACCESO  desplazar e ir al estado 45
    '='     desplazar e ir al estado 46

    '('       reduce usando la regla 14 (saveReg)
    $default  reduce usando la regla 30 (exp)

    saveReg  ir al estado 47


Estado 10

    3 lista: FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 48
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 11

   34 tipo: INT .

    $default  reduce usando la regla 34 (tipo)


Estado 12

   36 tipo: LONG .

    $default  reduce usando la regla 36 (tipo)


Estado 13

   35 tipo: FLOAT .

    $default  reduce usando la regla 35 (tipo)


Estado 14

   37 tipo: DOUBLE .

    $default  reduce usando la regla 37 (tipo)


Estado 15

   38 tipo: BOOL .

    $default  reduce usando la regla 38 (tipo)


Estado 16

   39 tipo: STRING .

    $default  reduce usando la regla 39 (tipo)


Estado 17

   74 func: VOID . IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA bloque funcFinal
   76     | VOID . IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA bloque funcFinal

    IDENTIFICADOR  desplazar e ir al estado 49


Estado 18

   40 tipo: CHAR .

    $default  reduce usando la regla 40 (tipo)


Estado 19

   80 when: WHEN . exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   81     | WHEN . rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 52
    comp       ir al estado 35
    rango      ir al estado 53


Estado 20

   84 if: IF . exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque
   86   | IF . exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @8 elif_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 54
    comp       ir al estado 35


Estado 21

   98 while: WHILE . ne ne $@10 exp ':' $@11 FIN_DE_LINEA bloque

    $default  reduce usando la regla 91 (ne)

    ne  ir al estado 55


Estado 22

   83 for: FOR . IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA $@7 bloque

    IDENTIFICADOR  desplazar e ir al estado 56


Estado 23

   63 inst: RETURN . exp FIN_DE_LINEA

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 57
    comp       ir al estado 35


Estado 24

   67 bloque: ABREBLOQUE . $@2 dentroBloque CIERRABLOQUE

    $default  reduce usando la regla 66 ($@2)

    $@2  ir al estado 58


Estado 25

   10 tupla: '(' . exp_l ')'
   11 tupla_decl: '(' . tipo_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    '('            desplazar e ir al estado 25

    exp_l       ir al estado 59
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 60
    tipo        ir al estado 61
    tipo_l      ir al estado 62
    comp        ir al estado 35


Estado 26

    0 $accept: lista . $end

    $end  desplazar e ir al estado 63


Estado 27

   31 exp: tupla .

    $default  reduce usando la regla 31 (exp)


Estado 28

   33 tipo: tupla_decl .

    $default  reduce usando la regla 33 (tipo)


Estado 29

   22 exp: func_call .

    $default  reduce usando la regla 22 (exp)


Estado 30

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   54 inst: exp . FIN_DE_LINEA

    FIN_DE_LINEA  desplazar e ir al estado 64
    NOTIS         desplazar e ir al estado 65
    IS            desplazar e ir al estado 66
    OR            desplazar e ir al estado 67
    AND           desplazar e ir al estado 68
    MAYORIGUAL    desplazar e ir al estado 69
    MENORIGUAL    desplazar e ir al estado 70
    MAYORQUE      desplazar e ir al estado 71
    MENORQUE      desplazar e ir al estado 72
    '-'           desplazar e ir al estado 73
    '+'           desplazar e ir al estado 74
    '*'           desplazar e ir al estado 75
    '/'           desplazar e ir al estado 76


Estado 31

   45 init: tipo . IDENTIFICADOR '=' exp
   47 decl: tipo . IDENTIFICADOR FIN_DE_LINEA
   70 func: tipo . IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA bloque funcFinal
   72     | tipo . IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA bloque funcFinal

    IDENTIFICADOR  desplazar e ir al estado 77


Estado 32

   55 inst: init . FIN_DE_LINEA

    FIN_DE_LINEA  desplazar e ir al estado 78


Estado 33

   56 inst: asign . FIN_DE_LINEA

    FIN_DE_LINEA  desplazar e ir al estado 79


Estado 34

   57 inst: decl .

    $default  reduce usando la regla 57 (inst)


Estado 35

   21 exp: comp .

    $default  reduce usando la regla 21 (exp)


Estado 36

   64 inst_l: inst .
   65       | inst . inst_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $default  reduce usando la regla 64 (inst_l)

    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 80
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 81
    bloque      ir al estado 38
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 37

    5 lista: inst_l . FIN_DE_LINEA lista
    6      | inst_l .

    FIN_DE_LINEA  desplazar e ir al estado 82

    $default  reduce usando la regla 6 (lista)


Estado 38

   62 inst: bloque .

    $default  reduce usando la regla 62 (inst)


Estado 39

    4 lista: func . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 83
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 40

   58 inst: when .

    $default  reduce usando la regla 58 (inst)


Estado 41

   59 inst: for .

    $default  reduce usando la regla 59 (inst)


Estado 42

   61 inst: if .

    $default  reduce usando la regla 61 (inst)


Estado 43

   60 inst: while .

    $default  reduce usando la regla 60 (inst)


Estado 44

    2 lista: error FIN_DE_LINEA . $@1 lista

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 84


Estado 45

   32 exp: IDENTIFICADOR ACCESO .

    $default  reduce usando la regla 32 (exp)


Estado 46

   46 asign: IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 85
    comp       ir al estado 35


Estado 47

   12 func_call: IDENTIFICADOR saveReg . tupla
   13          | IDENTIFICADOR saveReg . '(' ')'

    '('  desplazar e ir al estado 86

    tupla  ir al estado 87


Estado 48

    3 lista: FIN_DE_LINEA lista .

    $default  reduce usando la regla 3 (lista)


Estado 49

   74 func: VOID IDENTIFICADOR . '(' ')' @5 ':' FIN_DE_LINEA bloque funcFinal
   76     | VOID IDENTIFICADOR . '(' args ')' @6 ':' FIN_DE_LINEA bloque funcFinal

    '('  desplazar e ir al estado 88


Estado 50

   12 func_call: IDENTIFICADOR . saveReg tupla
   13          | IDENTIFICADOR . saveReg '(' ')'
   30 exp: IDENTIFICADOR .
   32    | IDENTIFICADOR . ACCESO

    ACCESO  desplazar e ir al estado 45

    '('       reduce usando la regla 14 (saveReg)
    $default  reduce usando la regla 30 (exp)

    saveReg  ir al estado 47


Estado 51

   10 tupla: '(' . exp_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    exp_l      ir al estado 59
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 60
    comp       ir al estado 35


Estado 52

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   80 when: WHEN exp . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   99 rango: exp . RANGE exp
  100      | exp . RANGE exp ',' exp

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    RANGE       desplazar e ir al estado 89
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76
    ':'         desplazar e ir al estado 90


Estado 53

   81 when: WHEN rango . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    ':'  desplazar e ir al estado 91


Estado 54

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   84 if: IF exp . ':' FIN_DE_LINEA ne if_evalua_expresion bloque
   86   | IF exp . ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @8 elif_l

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76
    ':'         desplazar e ir al estado 92


Estado 55

   98 while: WHILE ne . ne $@10 exp ':' $@11 FIN_DE_LINEA bloque

    $default  reduce usando la regla 91 (ne)

    ne  ir al estado 93


Estado 56

   83 for: FOR IDENTIFICADOR . IN rango ne ne ':' FIN_DE_LINEA $@7 bloque

    IN  desplazar e ir al estado 94


Estado 57

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   63 inst: RETURN exp . FIN_DE_LINEA

    FIN_DE_LINEA  desplazar e ir al estado 95
    NOTIS         desplazar e ir al estado 65
    IS            desplazar e ir al estado 66
    OR            desplazar e ir al estado 67
    AND           desplazar e ir al estado 68
    MAYORIGUAL    desplazar e ir al estado 69
    MENORIGUAL    desplazar e ir al estado 70
    MAYORQUE      desplazar e ir al estado 71
    MENORQUE      desplazar e ir al estado 72
    '-'           desplazar e ir al estado 73
    '+'           desplazar e ir al estado 74
    '*'           desplazar e ir al estado 75
    '/'           desplazar e ir al estado 76


Estado 58

   67 bloque: ABREBLOQUE $@2 . dentroBloque CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    tupla         ir al estado 27
    tupla_decl    ir al estado 28
    func_call     ir al estado 29
    exp           ir al estado 30
    tipo          ir al estado 80
    init          ir al estado 32
    asign         ir al estado 33
    decl          ir al estado 34
    comp          ir al estado 35
    inst          ir al estado 36
    inst_l        ir al estado 96
    bloque        ir al estado 38
    dentroBloque  ir al estado 97
    when          ir al estado 40
    for           ir al estado 41
    if            ir al estado 42
    while         ir al estado 43


Estado 59

   10 tupla: '(' exp_l . ')'

    ')'  desplazar e ir al estado 98


Estado 60

    8 exp_l: exp .
    9      | exp . ',' exp_l
   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    ','         desplazar e ir al estado 99
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 8 (exp_l)


Estado 61

   41 tipo_l: tipo .
   42       | tipo . ',' tipo_l

    ','  desplazar e ir al estado 100

    $default  reduce usando la regla 41 (tipo_l)


Estado 62

   11 tupla_decl: '(' tipo_l . ')'

    ')'  desplazar e ir al estado 101


Estado 63

    0 $accept: lista $end .

    $default  aceptar


Estado 64

   54 inst: exp FIN_DE_LINEA .

    $default  reduce usando la regla 54 (inst)


Estado 65

   53 comp: exp NOTIS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 102
    comp       ir al estado 35


Estado 66

   52 comp: exp IS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 103
    comp       ir al estado 35


Estado 67

   20 exp: exp OR . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 104
    comp       ir al estado 35


Estado 68

   19 exp: exp AND . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 105
    comp       ir al estado 35


Estado 69

   51 comp: exp MAYORIGUAL . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 106
    comp       ir al estado 35


Estado 70

   50 comp: exp MENORIGUAL . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 107
    comp       ir al estado 35


Estado 71

   49 comp: exp MAYORQUE . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 108
    comp       ir al estado 35


Estado 72

   48 comp: exp MENORQUE . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 109
    comp       ir al estado 35


Estado 73

   15 exp: exp '-' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 110
    comp       ir al estado 35


Estado 74

   16 exp: exp '+' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 111
    comp       ir al estado 35


Estado 75

   18 exp: exp '*' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 112
    comp       ir al estado 35


Estado 76

   17 exp: exp '/' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 113
    comp       ir al estado 35


Estado 77

   45 init: tipo IDENTIFICADOR . '=' exp
   47 decl: tipo IDENTIFICADOR . FIN_DE_LINEA
   70 func: tipo IDENTIFICADOR . '(' ')' @3 ':' FIN_DE_LINEA bloque funcFinal
   72     | tipo IDENTIFICADOR . '(' args ')' @4 ':' FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 114
    '='           desplazar e ir al estado 115
    '('           desplazar e ir al estado 116


Estado 78

   55 inst: init FIN_DE_LINEA .

    $default  reduce usando la regla 55 (inst)


Estado 79

   56 inst: asign FIN_DE_LINEA .

    $default  reduce usando la regla 56 (inst)


Estado 80

   45 init: tipo . IDENTIFICADOR '=' exp
   47 decl: tipo . IDENTIFICADOR FIN_DE_LINEA

    IDENTIFICADOR  desplazar e ir al estado 117


Estado 81

   65 inst_l: inst inst_l .

    $default  reduce usando la regla 65 (inst_l)


Estado 82

    5 lista: inst_l FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 118
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 83

    4 lista: func lista .

    $default  reduce usando la regla 4 (lista)


Estado 84

    2 lista: error FIN_DE_LINEA $@1 . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 7 (lista)

    lista       ir al estado 119
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 85

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   46 asign: IDENTIFICADOR '=' exp .
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 46 (asign)


Estado 86

   10 tupla: '(' . exp_l ')'
   13 func_call: IDENTIFICADOR saveReg '(' . ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51
    ')'            desplazar e ir al estado 120

    exp_l      ir al estado 59
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 60
    comp       ir al estado 35


Estado 87

   12 func_call: IDENTIFICADOR saveReg tupla .

    $default  reduce usando la regla 12 (func_call)


Estado 88

   74 func: VOID IDENTIFICADOR '(' . ')' @5 ':' FIN_DE_LINEA bloque funcFinal
   76     | VOID IDENTIFICADOR '(' . args ')' @6 ':' FIN_DE_LINEA bloque funcFinal

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 121
    ')'     desplazar e ir al estado 122

    tupla_decl  ir al estado 28
    tipo        ir al estado 123
    args        ir al estado 124


Estado 89

   99 rango: exp RANGE . exp
  100      | exp RANGE . exp ',' exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 125
    comp       ir al estado 35


Estado 90

   80 when: WHEN exp ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 126


Estado 91

   81 when: WHEN rango ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 127


Estado 92

   84 if: IF exp ':' . FIN_DE_LINEA ne if_evalua_expresion bloque
   86   | IF exp ':' . FIN_DE_LINEA ne if_evalua_expresion bloque ne @8 elif_l

    FIN_DE_LINEA  desplazar e ir al estado 128


Estado 93

   98 while: WHILE ne ne . $@10 exp ':' $@11 FIN_DE_LINEA bloque

    $default  reduce usando la regla 96 ($@10)

    $@10  ir al estado 129


Estado 94

   83 for: FOR IDENTIFICADOR IN . rango ne ne ':' FIN_DE_LINEA $@7 bloque

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 130
    comp       ir al estado 35
    rango      ir al estado 131


Estado 95

   63 inst: RETURN exp FIN_DE_LINEA .

    $default  reduce usando la regla 63 (inst)


Estado 96

   68 dentroBloque: inst_l .

    $default  reduce usando la regla 68 (dentroBloque)


Estado 97

   67 bloque: ABREBLOQUE $@2 dentroBloque . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 132


Estado 98

   10 tupla: '(' exp_l ')' .

    $default  reduce usando la regla 10 (tupla)


Estado 99

    9 exp_l: exp ',' . exp_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    exp_l      ir al estado 133
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 60
    comp       ir al estado 35


Estado 100

   42 tipo_l: tipo ',' . tipo_l

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 121

    tupla_decl  ir al estado 28
    tipo        ir al estado 61
    tipo_l      ir al estado 134


Estado 101

   11 tupla_decl: '(' tipo_l ')' .

    $default  reduce usando la regla 11 (tupla_decl)


Estado 102

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   53     | exp NOTIS exp .

    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 53 (comp)


Estado 103

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   52     | exp IS exp .
   53     | exp . NOTIS exp

    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 52 (comp)


Estado 104

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   20    | exp OR exp .
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 20 (exp)


Estado 105

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   19    | exp AND exp .
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 19 (exp)


Estado 106

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   51     | exp MAYORIGUAL exp .
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '-'  desplazar e ir al estado 73
    '+'  desplazar e ir al estado 74
    '*'  desplazar e ir al estado 75
    '/'  desplazar e ir al estado 76

    $default  reduce usando la regla 51 (comp)


Estado 107

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   50     | exp MENORIGUAL exp .
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '-'  desplazar e ir al estado 73
    '+'  desplazar e ir al estado 74
    '*'  desplazar e ir al estado 75
    '/'  desplazar e ir al estado 76

    $default  reduce usando la regla 50 (comp)


Estado 108

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   49     | exp MAYORQUE exp .
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '-'  desplazar e ir al estado 73
    '+'  desplazar e ir al estado 74
    '*'  desplazar e ir al estado 75
    '/'  desplazar e ir al estado 76

    $default  reduce usando la regla 49 (comp)


Estado 109

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   48     | exp MENORQUE exp .
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '-'  desplazar e ir al estado 73
    '+'  desplazar e ir al estado 74
    '*'  desplazar e ir al estado 75
    '/'  desplazar e ir al estado 76

    $default  reduce usando la regla 48 (comp)


Estado 110

   15 exp: exp . '-' exp
   15    | exp '-' exp .
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '*'  desplazar e ir al estado 75
    '/'  desplazar e ir al estado 76

    $default  reduce usando la regla 15 (exp)


Estado 111

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   16    | exp '+' exp .
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    '*'  desplazar e ir al estado 75
    '/'  desplazar e ir al estado 76

    $default  reduce usando la regla 16 (exp)


Estado 112

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   18    | exp '*' exp .
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    $default  reduce usando la regla 18 (exp)


Estado 113

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   17    | exp '/' exp .
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    $default  reduce usando la regla 17 (exp)


Estado 114

   47 decl: tipo IDENTIFICADOR FIN_DE_LINEA .

    $default  reduce usando la regla 47 (decl)


Estado 115

   45 init: tipo IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 135
    comp       ir al estado 35


Estado 116

   70 func: tipo IDENTIFICADOR '(' . ')' @3 ':' FIN_DE_LINEA bloque funcFinal
   72     | tipo IDENTIFICADOR '(' . args ')' @4 ':' FIN_DE_LINEA bloque funcFinal

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 121
    ')'     desplazar e ir al estado 136

    tupla_decl  ir al estado 28
    tipo        ir al estado 123
    args        ir al estado 137


Estado 117

   45 init: tipo IDENTIFICADOR . '=' exp
   47 decl: tipo IDENTIFICADOR . FIN_DE_LINEA

    FIN_DE_LINEA  desplazar e ir al estado 114
    '='           desplazar e ir al estado 115


Estado 118

    5 lista: inst_l FIN_DE_LINEA lista .

    $default  reduce usando la regla 5 (lista)


Estado 119

    2 lista: error FIN_DE_LINEA $@1 lista .

    $default  reduce usando la regla 2 (lista)


Estado 120

   13 func_call: IDENTIFICADOR saveReg '(' ')' .

    $default  reduce usando la regla 13 (func_call)


Estado 121

   11 tupla_decl: '(' . tipo_l ')'

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 121

    tupla_decl  ir al estado 28
    tipo        ir al estado 61
    tipo_l      ir al estado 62


Estado 122

   74 func: VOID IDENTIFICADOR '(' ')' . @5 ':' FIN_DE_LINEA bloque funcFinal

    $default  reduce usando la regla 73 (@5)

    @5  ir al estado 138


Estado 123

   43 args: tipo . IDENTIFICADOR
   44     | tipo . IDENTIFICADOR ',' args

    IDENTIFICADOR  desplazar e ir al estado 139


Estado 124

   76 func: VOID IDENTIFICADOR '(' args . ')' @6 ':' FIN_DE_LINEA bloque funcFinal

    ')'  desplazar e ir al estado 140


Estado 125

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   99 rango: exp RANGE exp .
  100      | exp RANGE exp . ',' exp

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    ','         desplazar e ir al estado 141
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 99 (rango)


Estado 126

   80 when: WHEN exp ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 142


Estado 127

   81 when: WHEN rango ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 143


Estado 128

   84 if: IF exp ':' FIN_DE_LINEA . ne if_evalua_expresion bloque
   86   | IF exp ':' FIN_DE_LINEA . ne if_evalua_expresion bloque ne @8 elif_l

    $default  reduce usando la regla 91 (ne)

    ne  ir al estado 144


Estado 129

   98 while: WHILE ne ne $@10 . exp ':' $@11 FIN_DE_LINEA bloque

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 145
    comp       ir al estado 35


Estado 130

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   99 rango: exp . RANGE exp
  100      | exp . RANGE exp ',' exp

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    RANGE       desplazar e ir al estado 89
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76


Estado 131

   83 for: FOR IDENTIFICADOR IN rango . ne ne ':' FIN_DE_LINEA $@7 bloque

    $default  reduce usando la regla 91 (ne)

    ne  ir al estado 146


Estado 132

   67 bloque: ABREBLOQUE $@2 dentroBloque CIERRABLOQUE .

    $default  reduce usando la regla 67 (bloque)


Estado 133

    9 exp_l: exp ',' exp_l .

    $default  reduce usando la regla 9 (exp_l)


Estado 134

   42 tipo_l: tipo ',' tipo_l .

    $default  reduce usando la regla 42 (tipo_l)


Estado 135

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   45 init: tipo IDENTIFICADOR '=' exp .
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 45 (init)


Estado 136

   70 func: tipo IDENTIFICADOR '(' ')' . @3 ':' FIN_DE_LINEA bloque funcFinal

    $default  reduce usando la regla 69 (@3)

    @3  ir al estado 147


Estado 137

   72 func: tipo IDENTIFICADOR '(' args . ')' @4 ':' FIN_DE_LINEA bloque funcFinal

    ')'  desplazar e ir al estado 148


Estado 138

   74 func: VOID IDENTIFICADOR '(' ')' @5 . ':' FIN_DE_LINEA bloque funcFinal

    ':'  desplazar e ir al estado 149


Estado 139

   43 args: tipo IDENTIFICADOR .
   44     | tipo IDENTIFICADOR . ',' args

    ','  desplazar e ir al estado 150

    $default  reduce usando la regla 43 (args)


Estado 140

   76 func: VOID IDENTIFICADOR '(' args ')' . @6 ':' FIN_DE_LINEA bloque funcFinal

    $default  reduce usando la regla 75 (@6)

    @6  ir al estado 151


Estado 141

  100 rango: exp RANGE exp ',' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 152
    comp       ir al estado 35


Estado 142

   80 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 153
    comp       ir al estado 35
    cases      ir al estado 154


Estado 143

   81 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 153
    comp       ir al estado 35
    cases      ir al estado 155


Estado 144

   84 if: IF exp ':' FIN_DE_LINEA ne . if_evalua_expresion bloque
   86   | IF exp ':' FIN_DE_LINEA ne . if_evalua_expresion bloque ne @8 elif_l

    $default  reduce usando la regla 93 (if_evalua_expresion)

    if_evalua_expresion  ir al estado 156


Estado 145

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   98 while: WHILE ne ne $@10 exp . ':' $@11 FIN_DE_LINEA bloque

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76
    ':'         desplazar e ir al estado 157


Estado 146

   83 for: FOR IDENTIFICADOR IN rango ne . ne ':' FIN_DE_LINEA $@7 bloque

    $default  reduce usando la regla 91 (ne)

    ne  ir al estado 158


Estado 147

   70 func: tipo IDENTIFICADOR '(' ')' @3 . ':' FIN_DE_LINEA bloque funcFinal

    ':'  desplazar e ir al estado 159


Estado 148

   72 func: tipo IDENTIFICADOR '(' args ')' . @4 ':' FIN_DE_LINEA bloque funcFinal

    $default  reduce usando la regla 71 (@4)

    @4  ir al estado 160


Estado 149

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' . FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 161


Estado 150

   44 args: tipo IDENTIFICADOR ',' . args

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 121

    tupla_decl  ir al estado 28
    tipo        ir al estado 123
    args        ir al estado 162


Estado 151

   76 func: VOID IDENTIFICADOR '(' args ')' @6 . ':' FIN_DE_LINEA bloque funcFinal

    ':'  desplazar e ir al estado 163


Estado 152

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
  100 rango: exp RANGE exp ',' exp .

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76

    $default  reduce usando la regla 100 (rango)


Estado 153

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   78 cases: exp . WHEN_CASE exp
   79      | exp . WHEN_CASE exp FIN_DE_LINEA cases

    WHEN_CASE   desplazar e ir al estado 164
    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76


Estado 154

   80 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 165


Estado 155

   81 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 166


Estado 156

   84 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion . bloque
   86   | IF exp ':' FIN_DE_LINEA ne if_evalua_expresion . bloque ne @8 elif_l

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 167


Estado 157

   98 while: WHILE ne ne $@10 exp ':' . $@11 FIN_DE_LINEA bloque

    $default  reduce usando la regla 97 ($@11)

    $@11  ir al estado 168


Estado 158

   83 for: FOR IDENTIFICADOR IN rango ne ne . ':' FIN_DE_LINEA $@7 bloque

    ':'  desplazar e ir al estado 169


Estado 159

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' . FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 170


Estado 160

   72 func: tipo IDENTIFICADOR '(' args ')' @4 . ':' FIN_DE_LINEA bloque funcFinal

    ':'  desplazar e ir al estado 171


Estado 161

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA . bloque funcFinal

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 172


Estado 162

   44 args: tipo IDENTIFICADOR ',' args .

    $default  reduce usando la regla 44 (args)


Estado 163

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' . FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 173


Estado 164

   78 cases: exp WHEN_CASE . exp
   79      | exp WHEN_CASE . exp FIN_DE_LINEA cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 174
    comp       ir al estado 35


Estado 165

   80 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 80 (when)


Estado 166

   81 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 81 (when)


Estado 167

   84 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque .
   86   | IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque . ne @8 elif_l

    ELIF      reduce usando la regla 91 (ne)
    ELSE      reduce usando la regla 91 (ne)
    $default  reduce usando la regla 84 (if)

    ne  ir al estado 175


Estado 168

   98 while: WHILE ne ne $@10 exp ':' $@11 . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 176


Estado 169

   83 for: FOR IDENTIFICADOR IN rango ne ne ':' . FIN_DE_LINEA $@7 bloque

    FIN_DE_LINEA  desplazar e ir al estado 177


Estado 170

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA . bloque funcFinal

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 178


Estado 171

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' . FIN_DE_LINEA bloque funcFinal

    FIN_DE_LINEA  desplazar e ir al estado 179


Estado 172

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA bloque . funcFinal

    $default  reduce usando la regla 77 (funcFinal)

    funcFinal  ir al estado 180


Estado 173

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA . bloque funcFinal

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 181


Estado 174

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   78 cases: exp WHEN_CASE exp .
   79      | exp WHEN_CASE exp . FIN_DE_LINEA cases

    FIN_DE_LINEA  desplazar e ir al estado 182
    NOTIS         desplazar e ir al estado 65
    IS            desplazar e ir al estado 66
    OR            desplazar e ir al estado 67
    AND           desplazar e ir al estado 68
    MAYORIGUAL    desplazar e ir al estado 69
    MENORIGUAL    desplazar e ir al estado 70
    MAYORQUE      desplazar e ir al estado 71
    MENORQUE      desplazar e ir al estado 72
    '-'           desplazar e ir al estado 73
    '+'           desplazar e ir al estado 74
    '*'           desplazar e ir al estado 75
    '/'           desplazar e ir al estado 76

    $default  reduce usando la regla 78 (cases)


Estado 175

   86 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne . @8 elif_l

    $default  reduce usando la regla 85 (@8)

    @8  ir al estado 183


Estado 176

   98 while: WHILE ne ne $@10 exp ':' $@11 FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 184


Estado 177

   83 for: FOR IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA . $@7 bloque

    $default  reduce usando la regla 82 ($@7)

    $@7  ir al estado 185


Estado 178

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA bloque . funcFinal

    $default  reduce usando la regla 77 (funcFinal)

    funcFinal  ir al estado 186


Estado 179

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA . bloque funcFinal

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 187


Estado 180

   74 func: VOID IDENTIFICADOR '(' ')' @5 ':' FIN_DE_LINEA bloque funcFinal .

    $default  reduce usando la regla 74 (func)


Estado 181

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA bloque . funcFinal

    $default  reduce usando la regla 77 (funcFinal)

    funcFinal  ir al estado 188


Estado 182

   79 cases: exp WHEN_CASE exp FIN_DE_LINEA . cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 153
    comp       ir al estado 35
    cases      ir al estado 189


Estado 183

   86 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @8 . elif_l

    ELIF  desplazar e ir al estado 190
    ELSE  desplazar e ir al estado 191

    elif_l  ir al estado 192


Estado 184

   98 while: WHILE ne ne $@10 exp ':' $@11 FIN_DE_LINEA bloque .

    $default  reduce usando la regla 98 (while)


Estado 185

   83 for: FOR IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA $@7 . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 193


Estado 186

   70 func: tipo IDENTIFICADOR '(' ')' @3 ':' FIN_DE_LINEA bloque funcFinal .

    $default  reduce usando la regla 70 (func)


Estado 187

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA bloque . funcFinal

    $default  reduce usando la regla 77 (funcFinal)

    funcFinal  ir al estado 194


Estado 188

   76 func: VOID IDENTIFICADOR '(' args ')' @6 ':' FIN_DE_LINEA bloque funcFinal .

    $default  reduce usando la regla 76 (func)


Estado 189

   79 cases: exp WHEN_CASE exp FIN_DE_LINEA cases .

    $default  reduce usando la regla 79 (cases)


Estado 190

   87 elif_l: ELIF . exp ':' FIN_DE_LINEA ne elif_control bloque
   88       | ELIF . exp ':' FIN_DE_LINEA ne elif_control bloque elif_copia_salida elif_copia_siguiente elif_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 50
    '('            desplazar e ir al estado 51

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 195
    comp       ir al estado 35


Estado 191

   90 elif_l: ELSE . ':' FIN_DE_LINEA $@9 bloque

    ':'  desplazar e ir al estado 196


Estado 192

   86 if: IF exp ':' FIN_DE_LINEA ne if_evalua_expresion bloque ne @8 elif_l .

    $default  reduce usando la regla 86 (if)


Estado 193

   83 for: FOR IDENTIFICADOR IN rango ne ne ':' FIN_DE_LINEA $@7 bloque .

    $default  reduce usando la regla 83 (for)


Estado 194

   72 func: tipo IDENTIFICADOR '(' args ')' @4 ':' FIN_DE_LINEA bloque funcFinal .

    $default  reduce usando la regla 72 (func)


Estado 195

   15 exp: exp . '-' exp
   16    | exp . '+' exp
   17    | exp . '/' exp
   18    | exp . '*' exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 comp: exp . MENORQUE exp
   49     | exp . MAYORQUE exp
   50     | exp . MENORIGUAL exp
   51     | exp . MAYORIGUAL exp
   52     | exp . IS exp
   53     | exp . NOTIS exp
   87 elif_l: ELIF exp . ':' FIN_DE_LINEA ne elif_control bloque
   88       | ELIF exp . ':' FIN_DE_LINEA ne elif_control bloque elif_copia_salida elif_copia_siguiente elif_l

    NOTIS       desplazar e ir al estado 65
    IS          desplazar e ir al estado 66
    OR          desplazar e ir al estado 67
    AND         desplazar e ir al estado 68
    MAYORIGUAL  desplazar e ir al estado 69
    MENORIGUAL  desplazar e ir al estado 70
    MAYORQUE    desplazar e ir al estado 71
    MENORQUE    desplazar e ir al estado 72
    '-'         desplazar e ir al estado 73
    '+'         desplazar e ir al estado 74
    '*'         desplazar e ir al estado 75
    '/'         desplazar e ir al estado 76
    ':'         desplazar e ir al estado 197


Estado 196

   90 elif_l: ELSE ':' . FIN_DE_LINEA $@9 bloque

    FIN_DE_LINEA  desplazar e ir al estado 198


Estado 197

   87 elif_l: ELIF exp ':' . FIN_DE_LINEA ne elif_control bloque
   88       | ELIF exp ':' . FIN_DE_LINEA ne elif_control bloque elif_copia_salida elif_copia_siguiente elif_l

    FIN_DE_LINEA  desplazar e ir al estado 199


Estado 198

   90 elif_l: ELSE ':' FIN_DE_LINEA . $@9 bloque

    $default  reduce usando la regla 89 ($@9)

    $@9  ir al estado 200


Estado 199

   87 elif_l: ELIF exp ':' FIN_DE_LINEA . ne elif_control bloque
   88       | ELIF exp ':' FIN_DE_LINEA . ne elif_control bloque elif_copia_salida elif_copia_siguiente elif_l

    $default  reduce usando la regla 91 (ne)

    ne  ir al estado 201


Estado 200

   90 elif_l: ELSE ':' FIN_DE_LINEA $@9 . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 202


Estado 201

   87 elif_l: ELIF exp ':' FIN_DE_LINEA ne . elif_control bloque
   88       | ELIF exp ':' FIN_DE_LINEA ne . elif_control bloque elif_copia_salida elif_copia_siguiente elif_l

    $default  reduce usando la regla 92 (elif_control)

    elif_control  ir al estado 203


Estado 202

   90 elif_l: ELSE ':' FIN_DE_LINEA $@9 bloque .

    $default  reduce usando la regla 90 (elif_l)


Estado 203

   87 elif_l: ELIF exp ':' FIN_DE_LINEA ne elif_control . bloque
   88       | ELIF exp ':' FIN_DE_LINEA ne elif_control . bloque elif_copia_salida elif_copia_siguiente elif_l

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 204


Estado 204

   87 elif_l: ELIF exp ':' FIN_DE_LINEA ne elif_control bloque .
   88       | ELIF exp ':' FIN_DE_LINEA ne elif_control bloque . elif_copia_salida elif_copia_siguiente elif_l

    ELIF      reduce usando la regla 94 (elif_copia_salida)
    ELSE      reduce usando la regla 94 (elif_copia_salida)
    $default  reduce usando la regla 87 (elif_l)

    elif_copia_salida  ir al estado 205


Estado 205

   88 elif_l: ELIF exp ':' FIN_DE_LINEA ne elif_control bloque elif_copia_salida . elif_copia_siguiente elif_l

    $default  reduce usando la regla 95 (elif_copia_siguiente)

    elif_copia_siguiente  ir al estado 206


Estado 206

   88 elif_l: ELIF exp ':' FIN_DE_LINEA ne elif_control bloque elif_copia_salida elif_copia_siguiente . elif_l

    ELIF  desplazar e ir al estado 190
    ELSE  desplazar e ir al estado 191

    elif_l  ir al estado 207


Estado 207

   88 elif_l: ELIF exp ':' FIN_DE_LINEA ne elif_control bloque elif_copia_salida elif_copia_siguiente elif_l .

    $default  reduce usando la regla 88 (elif_l)
