Gramática

    0 $accept: lista $end

    1 $@1: /* vacío */

    2 lista: error FIN_DE_LINEA $@1 lista
    3      | FIN_DE_LINEA lista
    4      | /* vacío */
    5      | func lista
    6      | inst_l FIN_DE_LINEA lista
    7      | inst_l

    8 exp_l: exp
    9      | exp ',' exp_l

   10 tupla: '(' exp_l ')'

   11 tupla_decl: '(' tipo_l ')'

   12 func_call: IDENTIFICADOR tupla
   13          | IDENTIFICADOR '(' ')'

   14 exp: exp '-' exp
   15    | exp '+' exp
   16    | exp '/' exp
   17    | exp '*' exp
   18    | exp AND exp
   19    | exp OR exp
   20    | comp
   21    | func_call
   22    | VALOR_INT
   23    | VALOR_FLOAT
   24    | VALOR_DOUBLE
   25    | VALOR_LONG
   26    | VALOR_BOOL
   27    | VALOR_CHAR
   28    | VALOR_STRING
   29    | IDENTIFICADOR
   30    | tupla
   31    | IDENTIFICADOR ACCESO

   32 tipo: tupla_decl
   33     | INT
   34     | FLOAT
   35     | LONG
   36     | DOUBLE
   37     | BOOL
   38     | STRING
   39     | CHAR

   40 tipo_l: tipo
   41       | tipo ',' tipo_l

   42 args: tipo IDENTIFICADOR
   43     | tipo IDENTIFICADOR ',' args

   44 init: tipo IDENTIFICADOR '=' exp

   45 asign: IDENTIFICADOR '=' exp

   46 decl: tipo IDENTIFICADOR

   47 in: IDENTIFICADOR IN rango
   48   | IDENTIFICADOR NOTIN rango

   49 comp: exp MENORQUE exp
   50     | exp MAYORQUE exp
   51     | exp MENORIGUAL exp
   52     | exp MAYORIGUAL exp
   53     | exp IS exp
   54     | exp NOTIS exp

   55 inst: exp
   56     | init
   57     | asign
   58     | decl
   59     | when
   60     | for
   61     | while
   62     | if
   63     | bloque
   64     | RETURN exp

   65 inst_l: inst FIN_DE_LINEA
   66       | inst FIN_DE_LINEA inst_l

   67 $@2: /* vacío */

   68 bloque: ABREBLOQUE $@2 dentroBloque CIERRABLOQUE

   69 dentroBloque: inst_l
   70             | inst

   71 $@3: /* vacío */

   72 func: tipo IDENTIFICADOR '(' ')' $@3 ':' FIN_DE_LINEA bloque

   73 $@4: /* vacío */

   74 func: tipo IDENTIFICADOR '(' args ')' $@4 ':' FIN_DE_LINEA bloque

   75 $@5: /* vacío */

   76 func: VOID IDENTIFICADOR '(' ')' $@5 ':' FIN_DE_LINEA bloque

   77 $@6: /* vacío */

   78 func: VOID IDENTIFICADOR '(' args ')' $@6 ':' FIN_DE_LINEA bloque

   79 cases: exp WHEN_CASE exp
   80      | exp WHEN_CASE exp FIN_DE_LINEA cases

   81 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   82     | WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

   83 for: FOR in ':' FIN_DE_LINEA bloque

   84 if: IF exp ':' FIN_DE_LINEA bloque
   85   | IF exp ':' FIN_DE_LINEA bloque else
   86   | IF exp ':' FIN_DE_LINEA bloque elif_l
   87   | IF exp ':' FIN_DE_LINEA bloque elif_l else

   88 elif_l: ELIF exp ':' FIN_DE_LINEA bloque
   89       | ELIF exp ':' FIN_DE_LINEA bloque elif_l

   90 else: ELSE ':' FIN_DE_LINEA bloque

   91 while: WHILE exp ':' FIN_DE_LINEA bloque

   92 rango: exp RANGE exp
   93      | exp RANGE exp ',' exp


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 10 11 13 72 74 76 78
')' (41) 10 11 13 72 74 76 78
'*' (42) 17
'+' (43) 15
',' (44) 9 41 43 93
'-' (45) 14
'/' (47) 16
':' (58) 72 74 76 78 81 82 83 84 85 86 87 88 89 90 91
'=' (61) 44 45
error (256) 2
VALOR_FLOAT (258) 23
VALOR_DOUBLE (259) 24
VALOR_INT (260) 22
VALOR_BOOL (261) 26
ACCESO (262) 31
VALOR_LONG (263) 25
VALOR_CHAR (264) 27
VALOR_STRING (265) 28
IDENTIFICADOR (266) 12 13 29 31 42 43 44 45 46 47 48 72 74 76 78
FIN_DE_LINEA (267) 2 3 6 65 66 72 74 76 78 80 81 82 83 84 85 86 87
    88 89 90 91
INT (268) 33
LONG (269) 35
FLOAT (270) 34
DOUBLE (271) 36
BOOL (272) 37
STRING (273) 38
VOID (274) 76 78
CHAR (275) 39
WHEN (276) 81 82
WHEN_CASE (277) 79 80
IF (278) 84 85 86 87
ELIF (279) 88 89
ELSE (280) 90
WHILE (281) 91
FOR (282) 83
NOTIS (283) 54
IS (284) 53
OR (285) 19
AND (286) 18
RANGE (287) 92 93
RETURN (288) 64
ABREBLOQUE (289) 68 81 82
CIERRABLOQUE (290) 68 81 82
IN (291) 47
NOTIN (292) 48
MAYORIGUAL (293) 52
MENORIGUAL (294) 51
MAYORQUE (295) 50
MENORQUE (296) 49


No terminales con las reglas donde aparecen

$accept (51)
    en la izquierda: 0
lista (52)
    en la izquierda: 2 3 4 5 6 7, en la derecha: 0 2 3 5 6
$@1 (53)
    en la izquierda: 1, en la derecha: 2
exp_l (54)
    en la izquierda: 8 9, en la derecha: 9 10
tupla (55)
    en la izquierda: 10, en la derecha: 12 30
tupla_decl (56)
    en la izquierda: 11, en la derecha: 32
func_call (57)
    en la izquierda: 12 13, en la derecha: 21
exp (58)
    en la izquierda: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31, en la derecha: 8 9 14 15 16 17 18 19 44 45 49 50 51 52 53
    54 55 64 79 80 81 84 85 86 87 88 89 91 92 93
tipo (59)
    en la izquierda: 32 33 34 35 36 37 38 39, en la derecha: 40 41
    42 43 44 46 72 74
tipo_l (60)
    en la izquierda: 40 41, en la derecha: 11 41
args (61)
    en la izquierda: 42 43, en la derecha: 43 74 78
init (62)
    en la izquierda: 44, en la derecha: 56
asign (63)
    en la izquierda: 45, en la derecha: 57
decl (64)
    en la izquierda: 46, en la derecha: 58
in (65)
    en la izquierda: 47 48, en la derecha: 83
comp (66)
    en la izquierda: 49 50 51 52 53 54, en la derecha: 20
inst (67)
    en la izquierda: 55 56 57 58 59 60 61 62 63 64, en la derecha:
    65 66 70
inst_l (68)
    en la izquierda: 65 66, en la derecha: 6 7 66 69
bloque (69)
    en la izquierda: 68, en la derecha: 63 72 74 76 78 83 84 85 86
    87 88 89 90 91
$@2 (70)
    en la izquierda: 67, en la derecha: 68
dentroBloque (71)
    en la izquierda: 69 70, en la derecha: 68
func (72)
    en la izquierda: 72 74 76 78, en la derecha: 5
$@3 (73)
    en la izquierda: 71, en la derecha: 72
$@4 (74)
    en la izquierda: 73, en la derecha: 74
$@5 (75)
    en la izquierda: 75, en la derecha: 76
$@6 (76)
    en la izquierda: 77, en la derecha: 78
cases (77)
    en la izquierda: 79 80, en la derecha: 80 81 82
when (78)
    en la izquierda: 81 82, en la derecha: 59
for (79)
    en la izquierda: 83, en la derecha: 60
if (80)
    en la izquierda: 84 85 86 87, en la derecha: 62
elif_l (81)
    en la izquierda: 88 89, en la derecha: 86 87 89
else (82)
    en la izquierda: 90, en la derecha: 85 87
while (83)
    en la izquierda: 91, en la derecha: 61
rango (84)
    en la izquierda: 92 93, en la derecha: 47 48 82


estado 0

    0 $accept: . lista $end

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 26
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 1

    2 lista: error . FIN_DE_LINEA $@1 lista

    FIN_DE_LINEA  desplazar e ir al estado 44


estado 2

   23 exp: VALOR_FLOAT .

    $default  reduce usando la regla 23 (exp)


estado 3

   24 exp: VALOR_DOUBLE .

    $default  reduce usando la regla 24 (exp)


estado 4

   22 exp: VALOR_INT .

    $default  reduce usando la regla 22 (exp)


estado 5

   26 exp: VALOR_BOOL .

    $default  reduce usando la regla 26 (exp)


estado 6

   25 exp: VALOR_LONG .

    $default  reduce usando la regla 25 (exp)


estado 7

   27 exp: VALOR_CHAR .

    $default  reduce usando la regla 27 (exp)


estado 8

   28 exp: VALOR_STRING .

    $default  reduce usando la regla 28 (exp)


estado 9

   12 func_call: IDENTIFICADOR . tupla
   13          | IDENTIFICADOR . '(' ')'
   29 exp: IDENTIFICADOR .
   31    | IDENTIFICADOR . ACCESO
   45 asign: IDENTIFICADOR . '=' exp

    ACCESO  desplazar e ir al estado 45
    '='     desplazar e ir al estado 46
    '('     desplazar e ir al estado 47

    $default  reduce usando la regla 29 (exp)

    tupla  ir al estado 48


estado 10

    3 lista: FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 49
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 11

   33 tipo: INT .

    $default  reduce usando la regla 33 (tipo)


estado 12

   35 tipo: LONG .

    $default  reduce usando la regla 35 (tipo)


estado 13

   34 tipo: FLOAT .

    $default  reduce usando la regla 34 (tipo)


estado 14

   36 tipo: DOUBLE .

    $default  reduce usando la regla 36 (tipo)


estado 15

   37 tipo: BOOL .

    $default  reduce usando la regla 37 (tipo)


estado 16

   38 tipo: STRING .

    $default  reduce usando la regla 38 (tipo)


estado 17

   76 func: VOID . IDENTIFICADOR '(' ')' $@5 ':' FIN_DE_LINEA bloque
   78     | VOID . IDENTIFICADOR '(' args ')' $@6 ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 50


estado 18

   39 tipo: CHAR .

    $default  reduce usando la regla 39 (tipo)


estado 19

   81 when: WHEN . exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   82     | WHEN . rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 53
    comp       ir al estado 35
    rango      ir al estado 54


estado 20

   84 if: IF . exp ':' FIN_DE_LINEA bloque
   85   | IF . exp ':' FIN_DE_LINEA bloque else
   86   | IF . exp ':' FIN_DE_LINEA bloque elif_l
   87   | IF . exp ':' FIN_DE_LINEA bloque elif_l else

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 55
    comp       ir al estado 35


estado 21

   91 while: WHILE . exp ':' FIN_DE_LINEA bloque

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 56
    comp       ir al estado 35


estado 22

   83 for: FOR . in ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 57

    in  ir al estado 58


estado 23

   64 inst: RETURN . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 59
    comp       ir al estado 35


estado 24

   68 bloque: ABREBLOQUE . $@2 dentroBloque CIERRABLOQUE

    $default  reduce usando la regla 67 ($@2)

    $@2  ir al estado 60


estado 25

   10 tupla: '(' . exp_l ')'
   11 tupla_decl: '(' . tipo_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    '('            desplazar e ir al estado 25

    exp_l       ir al estado 61
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 62
    tipo        ir al estado 63
    tipo_l      ir al estado 64
    comp        ir al estado 35


estado 26

    0 $accept: lista . $end

    $end  desplazar e ir al estado 65


estado 27

   30 exp: tupla .

    $default  reduce usando la regla 30 (exp)


estado 28

   32 tipo: tupla_decl .

    $default  reduce usando la regla 32 (tipo)


estado 29

   21 exp: func_call .

    $default  reduce usando la regla 21 (exp)


estado 30

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   55 inst: exp .

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 55 (inst)


estado 31

   44 init: tipo . IDENTIFICADOR '=' exp
   46 decl: tipo . IDENTIFICADOR
   72 func: tipo . IDENTIFICADOR '(' ')' $@3 ':' FIN_DE_LINEA bloque
   74     | tipo . IDENTIFICADOR '(' args ')' $@4 ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 78


estado 32

   56 inst: init .

    $default  reduce usando la regla 56 (inst)


estado 33

   57 inst: asign .

    $default  reduce usando la regla 57 (inst)


estado 34

   58 inst: decl .

    $default  reduce usando la regla 58 (inst)


estado 35

   20 exp: comp .

    $default  reduce usando la regla 20 (exp)


estado 36

   65 inst_l: inst . FIN_DE_LINEA
   66       | inst . FIN_DE_LINEA inst_l

    FIN_DE_LINEA  desplazar e ir al estado 79


estado 37

    6 lista: inst_l . FIN_DE_LINEA lista
    7      | inst_l .

    FIN_DE_LINEA  desplazar e ir al estado 80

    $default  reduce usando la regla 7 (lista)


estado 38

   63 inst: bloque .

    $default  reduce usando la regla 63 (inst)


estado 39

    5 lista: func . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 81
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 40

   59 inst: when .

    $default  reduce usando la regla 59 (inst)


estado 41

   60 inst: for .

    $default  reduce usando la regla 60 (inst)


estado 42

   62 inst: if .

    $default  reduce usando la regla 62 (inst)


estado 43

   61 inst: while .

    $default  reduce usando la regla 61 (inst)


estado 44

    2 lista: error FIN_DE_LINEA . $@1 lista

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 82


estado 45

   31 exp: IDENTIFICADOR ACCESO .

    $default  reduce usando la regla 31 (exp)


estado 46

   45 asign: IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 83
    comp       ir al estado 35


estado 47

   10 tupla: '(' . exp_l ')'
   13 func_call: IDENTIFICADOR '(' . ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52
    ')'            desplazar e ir al estado 84

    exp_l      ir al estado 61
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 62
    comp       ir al estado 35


estado 48

   12 func_call: IDENTIFICADOR tupla .

    $default  reduce usando la regla 12 (func_call)


estado 49

    3 lista: FIN_DE_LINEA lista .

    $default  reduce usando la regla 3 (lista)


estado 50

   76 func: VOID IDENTIFICADOR . '(' ')' $@5 ':' FIN_DE_LINEA bloque
   78     | VOID IDENTIFICADOR . '(' args ')' $@6 ':' FIN_DE_LINEA bloque

    '('  desplazar e ir al estado 85


estado 51

   12 func_call: IDENTIFICADOR . tupla
   13          | IDENTIFICADOR . '(' ')'
   29 exp: IDENTIFICADOR .
   31    | IDENTIFICADOR . ACCESO

    ACCESO  desplazar e ir al estado 45
    '('     desplazar e ir al estado 47

    $default  reduce usando la regla 29 (exp)

    tupla  ir al estado 48


estado 52

   10 tupla: '(' . exp_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    exp_l      ir al estado 61
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 62
    comp       ir al estado 35


estado 53

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   81 when: WHEN exp . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   92 rango: exp . RANGE exp
   93      | exp . RANGE exp ',' exp

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    RANGE       desplazar e ir al estado 86
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77
    ':'         desplazar e ir al estado 87


estado 54

   82 when: WHEN rango . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    ':'  desplazar e ir al estado 88


estado 55

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   84 if: IF exp . ':' FIN_DE_LINEA bloque
   85   | IF exp . ':' FIN_DE_LINEA bloque else
   86   | IF exp . ':' FIN_DE_LINEA bloque elif_l
   87   | IF exp . ':' FIN_DE_LINEA bloque elif_l else

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77
    ':'         desplazar e ir al estado 89


estado 56

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   91 while: WHILE exp . ':' FIN_DE_LINEA bloque

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77
    ':'         desplazar e ir al estado 90


estado 57

   47 in: IDENTIFICADOR . IN rango
   48   | IDENTIFICADOR . NOTIN rango

    IN     desplazar e ir al estado 91
    NOTIN  desplazar e ir al estado 92


estado 58

   83 for: FOR in . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 93


estado 59

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   64 inst: RETURN exp .

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 64 (inst)


estado 60

   68 bloque: ABREBLOQUE $@2 . dentroBloque CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    tupla         ir al estado 27
    tupla_decl    ir al estado 28
    func_call     ir al estado 29
    exp           ir al estado 30
    tipo          ir al estado 94
    init          ir al estado 32
    asign         ir al estado 33
    decl          ir al estado 34
    comp          ir al estado 35
    inst          ir al estado 95
    inst_l        ir al estado 96
    bloque        ir al estado 38
    dentroBloque  ir al estado 97
    when          ir al estado 40
    for           ir al estado 41
    if            ir al estado 42
    while         ir al estado 43


estado 61

   10 tupla: '(' exp_l . ')'

    ')'  desplazar e ir al estado 98


estado 62

    8 exp_l: exp .
    9      | exp . ',' exp_l
   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    ','         desplazar e ir al estado 99
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 8 (exp_l)


estado 63

   40 tipo_l: tipo .
   41       | tipo . ',' tipo_l

    ','  desplazar e ir al estado 100

    $default  reduce usando la regla 40 (tipo_l)


estado 64

   11 tupla_decl: '(' tipo_l . ')'

    ')'  desplazar e ir al estado 101


estado 65

    0 $accept: lista $end .

    $default  aceptar


estado 66

   54 comp: exp NOTIS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 102
    comp       ir al estado 35


estado 67

   53 comp: exp IS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 103
    comp       ir al estado 35


estado 68

   19 exp: exp OR . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 104
    comp       ir al estado 35


estado 69

   18 exp: exp AND . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 105
    comp       ir al estado 35


estado 70

   52 comp: exp MAYORIGUAL . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 106
    comp       ir al estado 35


estado 71

   51 comp: exp MENORIGUAL . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 107
    comp       ir al estado 35


estado 72

   50 comp: exp MAYORQUE . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 108
    comp       ir al estado 35


estado 73

   49 comp: exp MENORQUE . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 109
    comp       ir al estado 35


estado 74

   14 exp: exp '-' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 110
    comp       ir al estado 35


estado 75

   15 exp: exp '+' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 111
    comp       ir al estado 35


estado 76

   17 exp: exp '*' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 112
    comp       ir al estado 35


estado 77

   16 exp: exp '/' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 113
    comp       ir al estado 35


estado 78

   44 init: tipo IDENTIFICADOR . '=' exp
   46 decl: tipo IDENTIFICADOR .
   72 func: tipo IDENTIFICADOR . '(' ')' $@3 ':' FIN_DE_LINEA bloque
   74     | tipo IDENTIFICADOR . '(' args ')' $@4 ':' FIN_DE_LINEA bloque

    '='  desplazar e ir al estado 114
    '('  desplazar e ir al estado 115

    $default  reduce usando la regla 46 (decl)


estado 79

   65 inst_l: inst FIN_DE_LINEA .
   66       | inst FIN_DE_LINEA . inst_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $default  reduce usando la regla 65 (inst_l)

    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 94
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 116
    bloque      ir al estado 38
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 80

    6 lista: inst_l FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 117
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 81

    5 lista: func lista .

    $default  reduce usando la regla 5 (lista)


estado 82

    2 lista: error FIN_DE_LINEA $@1 . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 118
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    comp        ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


estado 83

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   45 asign: IDENTIFICADOR '=' exp .
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 45 (asign)


estado 84

   13 func_call: IDENTIFICADOR '(' ')' .

    $default  reduce usando la regla 13 (func_call)


estado 85

   76 func: VOID IDENTIFICADOR '(' . ')' $@5 ':' FIN_DE_LINEA bloque
   78     | VOID IDENTIFICADOR '(' . args ')' $@6 ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 119
    ')'     desplazar e ir al estado 120

    tupla_decl  ir al estado 28
    tipo        ir al estado 121
    args        ir al estado 122


estado 86

   92 rango: exp RANGE . exp
   93      | exp RANGE . exp ',' exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 123
    comp       ir al estado 35


estado 87

   81 when: WHEN exp ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 124


estado 88

   82 when: WHEN rango ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 125


estado 89

   84 if: IF exp ':' . FIN_DE_LINEA bloque
   85   | IF exp ':' . FIN_DE_LINEA bloque else
   86   | IF exp ':' . FIN_DE_LINEA bloque elif_l
   87   | IF exp ':' . FIN_DE_LINEA bloque elif_l else

    FIN_DE_LINEA  desplazar e ir al estado 126


estado 90

   91 while: WHILE exp ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 127


estado 91

   47 in: IDENTIFICADOR IN . rango

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 128
    comp       ir al estado 35
    rango      ir al estado 129


estado 92

   48 in: IDENTIFICADOR NOTIN . rango

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 128
    comp       ir al estado 35
    rango      ir al estado 130


estado 93

   83 for: FOR in ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 131


estado 94

   44 init: tipo . IDENTIFICADOR '=' exp
   46 decl: tipo . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 132


estado 95

   65 inst_l: inst . FIN_DE_LINEA
   66       | inst . FIN_DE_LINEA inst_l
   70 dentroBloque: inst .

    FIN_DE_LINEA  desplazar e ir al estado 79

    $default  reduce usando la regla 70 (dentroBloque)


estado 96

   69 dentroBloque: inst_l .

    $default  reduce usando la regla 69 (dentroBloque)


estado 97

   68 bloque: ABREBLOQUE $@2 dentroBloque . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 133


estado 98

   10 tupla: '(' exp_l ')' .

    $default  reduce usando la regla 10 (tupla)


estado 99

    9 exp_l: exp ',' . exp_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    exp_l      ir al estado 134
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 62
    comp       ir al estado 35


estado 100

   41 tipo_l: tipo ',' . tipo_l

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 119

    tupla_decl  ir al estado 28
    tipo        ir al estado 63
    tipo_l      ir al estado 135


estado 101

   11 tupla_decl: '(' tipo_l ')' .

    $default  reduce usando la regla 11 (tupla_decl)


estado 102

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   54     | exp NOTIS exp .

    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 54 (comp)


estado 103

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   53     | exp IS exp .
   54     | exp . NOTIS exp

    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 53 (comp)


estado 104

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   19    | exp OR exp .
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 19 (exp)


estado 105

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   18    | exp AND exp .
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 18 (exp)


estado 106

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   52     | exp MAYORIGUAL exp .
   53     | exp . IS exp
   54     | exp . NOTIS exp

    '-'  desplazar e ir al estado 74
    '+'  desplazar e ir al estado 75
    '*'  desplazar e ir al estado 76
    '/'  desplazar e ir al estado 77

    $default  reduce usando la regla 52 (comp)


estado 107

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   51     | exp MENORIGUAL exp .
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    '-'  desplazar e ir al estado 74
    '+'  desplazar e ir al estado 75
    '*'  desplazar e ir al estado 76
    '/'  desplazar e ir al estado 77

    $default  reduce usando la regla 51 (comp)


estado 108

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   50     | exp MAYORQUE exp .
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    '-'  desplazar e ir al estado 74
    '+'  desplazar e ir al estado 75
    '*'  desplazar e ir al estado 76
    '/'  desplazar e ir al estado 77

    $default  reduce usando la regla 50 (comp)


estado 109

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   49     | exp MENORQUE exp .
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    '-'  desplazar e ir al estado 74
    '+'  desplazar e ir al estado 75
    '*'  desplazar e ir al estado 76
    '/'  desplazar e ir al estado 77

    $default  reduce usando la regla 49 (comp)


estado 110

   14 exp: exp . '-' exp
   14    | exp '-' exp .
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    '*'  desplazar e ir al estado 76
    '/'  desplazar e ir al estado 77

    $default  reduce usando la regla 14 (exp)


estado 111

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   15    | exp '+' exp .
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    '*'  desplazar e ir al estado 76
    '/'  desplazar e ir al estado 77

    $default  reduce usando la regla 15 (exp)


estado 112

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   17    | exp '*' exp .
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    $default  reduce usando la regla 17 (exp)


estado 113

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   16    | exp '/' exp .
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    $default  reduce usando la regla 16 (exp)


estado 114

   44 init: tipo IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 136
    comp       ir al estado 35


estado 115

   72 func: tipo IDENTIFICADOR '(' . ')' $@3 ':' FIN_DE_LINEA bloque
   74     | tipo IDENTIFICADOR '(' . args ')' $@4 ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 119
    ')'     desplazar e ir al estado 137

    tupla_decl  ir al estado 28
    tipo        ir al estado 121
    args        ir al estado 138


estado 116

   66 inst_l: inst FIN_DE_LINEA inst_l .

    $default  reduce usando la regla 66 (inst_l)


estado 117

    6 lista: inst_l FIN_DE_LINEA lista .

    $default  reduce usando la regla 6 (lista)


estado 118

    2 lista: error FIN_DE_LINEA $@1 lista .

    $default  reduce usando la regla 2 (lista)


estado 119

   11 tupla_decl: '(' . tipo_l ')'

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 119

    tupla_decl  ir al estado 28
    tipo        ir al estado 63
    tipo_l      ir al estado 64


estado 120

   76 func: VOID IDENTIFICADOR '(' ')' . $@5 ':' FIN_DE_LINEA bloque

    $default  reduce usando la regla 75 ($@5)

    $@5  ir al estado 139


estado 121

   42 args: tipo . IDENTIFICADOR
   43     | tipo . IDENTIFICADOR ',' args

    IDENTIFICADOR  desplazar e ir al estado 140


estado 122

   78 func: VOID IDENTIFICADOR '(' args . ')' $@6 ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 141


estado 123

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   92 rango: exp RANGE exp .
   93      | exp RANGE exp . ',' exp

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    ','         desplazar e ir al estado 142
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 92 (rango)


estado 124

   81 when: WHEN exp ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 143


estado 125

   82 when: WHEN rango ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 144


estado 126

   84 if: IF exp ':' FIN_DE_LINEA . bloque
   85   | IF exp ':' FIN_DE_LINEA . bloque else
   86   | IF exp ':' FIN_DE_LINEA . bloque elif_l
   87   | IF exp ':' FIN_DE_LINEA . bloque elif_l else

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 145


estado 127

   91 while: WHILE exp ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 146


estado 128

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   92 rango: exp . RANGE exp
   93      | exp . RANGE exp ',' exp

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    RANGE       desplazar e ir al estado 86
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77


estado 129

   47 in: IDENTIFICADOR IN rango .

    $default  reduce usando la regla 47 (in)


estado 130

   48 in: IDENTIFICADOR NOTIN rango .

    $default  reduce usando la regla 48 (in)


estado 131

   83 for: FOR in ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 147


estado 132

   44 init: tipo IDENTIFICADOR . '=' exp
   46 decl: tipo IDENTIFICADOR .

    '='  desplazar e ir al estado 114

    $default  reduce usando la regla 46 (decl)


estado 133

   68 bloque: ABREBLOQUE $@2 dentroBloque CIERRABLOQUE .

    $default  reduce usando la regla 68 (bloque)


estado 134

    9 exp_l: exp ',' exp_l .

    $default  reduce usando la regla 9 (exp_l)


estado 135

   41 tipo_l: tipo ',' tipo_l .

    $default  reduce usando la regla 41 (tipo_l)


estado 136

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   44 init: tipo IDENTIFICADOR '=' exp .
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 44 (init)


estado 137

   72 func: tipo IDENTIFICADOR '(' ')' . $@3 ':' FIN_DE_LINEA bloque

    $default  reduce usando la regla 71 ($@3)

    $@3  ir al estado 148


estado 138

   74 func: tipo IDENTIFICADOR '(' args . ')' $@4 ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 149


estado 139

   76 func: VOID IDENTIFICADOR '(' ')' $@5 . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 150


estado 140

   42 args: tipo IDENTIFICADOR .
   43     | tipo IDENTIFICADOR . ',' args

    ','  desplazar e ir al estado 151

    $default  reduce usando la regla 42 (args)


estado 141

   78 func: VOID IDENTIFICADOR '(' args ')' . $@6 ':' FIN_DE_LINEA bloque

    $default  reduce usando la regla 77 ($@6)

    $@6  ir al estado 152


estado 142

   93 rango: exp RANGE exp ',' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 153
    comp       ir al estado 35


estado 143

   81 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 154
    comp       ir al estado 35
    cases      ir al estado 155


estado 144

   82 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 154
    comp       ir al estado 35
    cases      ir al estado 156


estado 145

   84 if: IF exp ':' FIN_DE_LINEA bloque .
   85   | IF exp ':' FIN_DE_LINEA bloque . else
   86   | IF exp ':' FIN_DE_LINEA bloque . elif_l
   87   | IF exp ':' FIN_DE_LINEA bloque . elif_l else

    ELIF  desplazar e ir al estado 157
    ELSE  desplazar e ir al estado 158

    $default  reduce usando la regla 84 (if)

    elif_l  ir al estado 159
    else    ir al estado 160


estado 146

   91 while: WHILE exp ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 91 (while)


estado 147

   83 for: FOR in ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 83 (for)


estado 148

   72 func: tipo IDENTIFICADOR '(' ')' $@3 . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 161


estado 149

   74 func: tipo IDENTIFICADOR '(' args ')' . $@4 ':' FIN_DE_LINEA bloque

    $default  reduce usando la regla 73 ($@4)

    $@4  ir al estado 162


estado 150

   76 func: VOID IDENTIFICADOR '(' ')' $@5 ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 163


estado 151

   43 args: tipo IDENTIFICADOR ',' . args

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 119

    tupla_decl  ir al estado 28
    tipo        ir al estado 121
    args        ir al estado 164


estado 152

   78 func: VOID IDENTIFICADOR '(' args ')' $@6 . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 165


estado 153

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   93 rango: exp RANGE exp ',' exp .

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77

    $default  reduce usando la regla 93 (rango)


estado 154

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   79 cases: exp . WHEN_CASE exp
   80      | exp . WHEN_CASE exp FIN_DE_LINEA cases

    WHEN_CASE   desplazar e ir al estado 166
    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77


estado 155

   81 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 167


estado 156

   82 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 168


estado 157

   88 elif_l: ELIF . exp ':' FIN_DE_LINEA bloque
   89       | ELIF . exp ':' FIN_DE_LINEA bloque elif_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 169
    comp       ir al estado 35


estado 158

   90 else: ELSE . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 170


estado 159

   86 if: IF exp ':' FIN_DE_LINEA bloque elif_l .
   87   | IF exp ':' FIN_DE_LINEA bloque elif_l . else

    ELSE  desplazar e ir al estado 158

    $default  reduce usando la regla 86 (if)

    else  ir al estado 171


estado 160

   85 if: IF exp ':' FIN_DE_LINEA bloque else .

    $default  reduce usando la regla 85 (if)


estado 161

   72 func: tipo IDENTIFICADOR '(' ')' $@3 ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 172


estado 162

   74 func: tipo IDENTIFICADOR '(' args ')' $@4 . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 173


estado 163

   76 func: VOID IDENTIFICADOR '(' ')' $@5 ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 174


estado 164

   43 args: tipo IDENTIFICADOR ',' args .

    $default  reduce usando la regla 43 (args)


estado 165

   78 func: VOID IDENTIFICADOR '(' args ')' $@6 ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 175


estado 166

   79 cases: exp WHEN_CASE . exp
   80      | exp WHEN_CASE . exp FIN_DE_LINEA cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 176
    comp       ir al estado 35


estado 167

   81 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 81 (when)


estado 168

   82 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 82 (when)


estado 169

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   88 elif_l: ELIF exp . ':' FIN_DE_LINEA bloque
   89       | ELIF exp . ':' FIN_DE_LINEA bloque elif_l

    NOTIS       desplazar e ir al estado 66
    IS          desplazar e ir al estado 67
    OR          desplazar e ir al estado 68
    AND         desplazar e ir al estado 69
    MAYORIGUAL  desplazar e ir al estado 70
    MENORIGUAL  desplazar e ir al estado 71
    MAYORQUE    desplazar e ir al estado 72
    MENORQUE    desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74
    '+'         desplazar e ir al estado 75
    '*'         desplazar e ir al estado 76
    '/'         desplazar e ir al estado 77
    ':'         desplazar e ir al estado 177


estado 170

   90 else: ELSE ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 178


estado 171

   87 if: IF exp ':' FIN_DE_LINEA bloque elif_l else .

    $default  reduce usando la regla 87 (if)


estado 172

   72 func: tipo IDENTIFICADOR '(' ')' $@3 ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 179


estado 173

   74 func: tipo IDENTIFICADOR '(' args ')' $@4 ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 180


estado 174

   76 func: VOID IDENTIFICADOR '(' ')' $@5 ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 76 (func)


estado 175

   78 func: VOID IDENTIFICADOR '(' args ')' $@6 ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 181


estado 176

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 comp: exp . MENORQUE exp
   50     | exp . MAYORQUE exp
   51     | exp . MENORIGUAL exp
   52     | exp . MAYORIGUAL exp
   53     | exp . IS exp
   54     | exp . NOTIS exp
   79 cases: exp WHEN_CASE exp .
   80      | exp WHEN_CASE exp . FIN_DE_LINEA cases

    FIN_DE_LINEA  desplazar e ir al estado 182
    NOTIS         desplazar e ir al estado 66
    IS            desplazar e ir al estado 67
    OR            desplazar e ir al estado 68
    AND           desplazar e ir al estado 69
    MAYORIGUAL    desplazar e ir al estado 70
    MENORIGUAL    desplazar e ir al estado 71
    MAYORQUE      desplazar e ir al estado 72
    MENORQUE      desplazar e ir al estado 73
    '-'           desplazar e ir al estado 74
    '+'           desplazar e ir al estado 75
    '*'           desplazar e ir al estado 76
    '/'           desplazar e ir al estado 77

    $default  reduce usando la regla 79 (cases)


estado 177

   88 elif_l: ELIF exp ':' . FIN_DE_LINEA bloque
   89       | ELIF exp ':' . FIN_DE_LINEA bloque elif_l

    FIN_DE_LINEA  desplazar e ir al estado 183


estado 178

   90 else: ELSE ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 184


estado 179

   72 func: tipo IDENTIFICADOR '(' ')' $@3 ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 72 (func)


estado 180

   74 func: tipo IDENTIFICADOR '(' args ')' $@4 ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 185


estado 181

   78 func: VOID IDENTIFICADOR '(' args ')' $@6 ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 78 (func)


estado 182

   80 cases: exp WHEN_CASE exp FIN_DE_LINEA . cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 154
    comp       ir al estado 35
    cases      ir al estado 186


estado 183

   88 elif_l: ELIF exp ':' FIN_DE_LINEA . bloque
   89       | ELIF exp ':' FIN_DE_LINEA . bloque elif_l

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 187


estado 184

   90 else: ELSE ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 90 (else)


estado 185

   74 func: tipo IDENTIFICADOR '(' args ')' $@4 ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 74 (func)


estado 186

   80 cases: exp WHEN_CASE exp FIN_DE_LINEA cases .

    $default  reduce usando la regla 80 (cases)


estado 187

   88 elif_l: ELIF exp ':' FIN_DE_LINEA bloque .
   89       | ELIF exp ':' FIN_DE_LINEA bloque . elif_l

    ELIF  desplazar e ir al estado 157

    $default  reduce usando la regla 88 (elif_l)

    elif_l  ir al estado 188


estado 188

   89 elif_l: ELIF exp ':' FIN_DE_LINEA bloque elif_l .

    $default  reduce usando la regla 89 (elif_l)
