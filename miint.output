Gram√°tica

    0 $accept: lista $end

    1 $@1: %empty

    2 lista: error FIN_DE_LINEA $@1 lista
    3      | %empty
    4      | func FIN_DE_LINEA lista
    5      | inst_l FIN_DE_LINEA lista

    6 exp_l: exp
    7      | exp ',' exp_l

    8 tupla: '(' exp_l ')'

    9 tupla_decl: '(' tipo_l ')'

   10 func_call: IDENTIFICADOR tupla
   11          | IDENTIFICADOR '(' ')'

   12 exp: exp '-' exp
   13    | exp '+' exp
   14    | exp '/' exp
   15    | exp '*' exp
   16    | exp AND exp
   17    | exp OR exp
   18    | is
   19    | func_call
   20    | VALOR_INT
   21    | VALOR_FLOAT
   22    | VALOR_DOUBLE
   23    | VALOR_LONG
   24    | VALOR_BOOL
   25    | VALOR_CHAR
   26    | VALOR_STRING
   27    | IDENTIFICADOR
   28    | tupla

   29 tipo: tupla_decl
   30     | INT
   31     | FLOAT
   32     | LONG
   33     | DOUBLE
   34     | BOOL
   35     | STRING
   36     | CHAR

   37 tipo_l: tipo
   38       | tipo ',' tipo_l

   39 args: tipo IDENTIFICADOR
   40     | tipo IDENTIFICADOR ',' tipo_l

   41 init: tipo IDENTIFICADOR '=' exp

   42 asign: IDENTIFICADOR '=' exp

   43 decl: tipo IDENTIFICADOR

   44 in: IDENTIFICADOR IN rango
   45   | IDENTIFICADOR NOTIN rango

   46 is: exp IS exp
   47   | exp NOTIS exp

   48 inst: exp
   49     | init
   50     | asign
   51     | decl
   52     | when
   53     | for
   54     | while
   55     | if
   56     | bloque
   57     | RETURN exp

   58 inst_l: inst FIN_DE_LINEA
   59       | inst FIN_DE_LINEA inst_l

   60 bloque: ABREBLOQUE CIERRABLOQUE
   61       | ABREBLOQUE inst_l CIERRABLOQUE

   62 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   63     | tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque
   64     | VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   65     | VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

   66 cases: exp WHEN_CASE exp
   67      | exp WHEN_CASE exp FIN_DE_LINEA cases

   68 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   69     | WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

   70 for: FOR in ':' FIN_DE_LINEA bloque

   71 if: IF exp ':' FIN_DE_LINEA bloque
   72   | IF exp ':' FIN_DE_LINEA bloque else
   73   | IF exp ':' FIN_DE_LINEA bloque elif_l
   74   | IF exp ':' FIN_DE_LINEA bloque elif_l else

   75 elif_l: ELIF exp ':' FIN_DE_LINEA bloque
   76       | ELIF exp ':' FIN_DE_LINEA bloque elif_l

   77 else: ELSE ':' FIN_DE_LINEA bloque

   78 while: WHILE exp ':' FIN_DE_LINEA bloque

   79 rango: exp RANGE exp
   80      | exp RANGE exp ',' exp


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 8 9 11 62 63 64 65
')' (41) 8 9 11 62 63 64 65
'*' (42) 15
'+' (43) 13
',' (44) 7 38 40 80
'-' (45) 12
'/' (47) 14
':' (58) 62 63 64 65 68 69 70 71 72 73 74 75 76 77 78
'=' (61) 41 42
error (256) 2
VALOR_FLOAT (258) 21
VALOR_DOUBLE (259) 22
VALOR_INT (260) 20
VALOR_BOOL (261) 24
VALOR_LONG (262) 23
VALOR_CHAR (263) 25
VALOR_STRING (264) 26
IDENTIFICADOR (265) 10 11 27 39 40 41 42 43 44 45 62 63 64 65
FIN_DE_LINEA (266) 2 4 5 58 59 62 63 64 65 67 68 69 70 71 72 73 74
    75 76 77 78
INT (267) 30
LONG (268) 32
FLOAT (269) 31
DOUBLE (270) 33
BOOL (271) 34
STRING (272) 35
VOID (273) 64 65
CHAR (274) 36
WHEN (275) 68 69
WHEN_CASE (276) 66 67
IF (277) 71 72 73 74
ELIF (278) 75 76
ELSE (279) 77
WHILE (280) 78
FOR (281) 70
NOTIS (282) 47
IS (283) 46
OR (284) 17
AND (285) 16
RANGE (286) 79 80
RETURN (287) 57
ABREBLOQUE (288) 60 61 68 69
CIERRABLOQUE (289) 60 61 68 69
IN (290) 44
NOTIN (291) 45


No terminales con las reglas donde aparecen

$accept (46)
    en la izquierda: 0
lista (47)
    en la izquierda: 2 3 4 5, en la derecha: 0 2 4 5
$@1 (48)
    en la izquierda: 1, en la derecha: 2
exp_l (49)
    en la izquierda: 6 7, en la derecha: 7 8
tupla (50)
    en la izquierda: 8, en la derecha: 10 28
tupla_decl (51)
    en la izquierda: 9, en la derecha: 29
func_call (52)
    en la izquierda: 10 11, en la derecha: 19
exp (53)
    en la izquierda: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28, en la derecha: 6 7 12 13 14 15 16 17 41 42 46 47 48 57 66 67
    68 71 72 73 74 75 76 78 79 80
tipo (54)
    en la izquierda: 29 30 31 32 33 34 35 36, en la derecha: 37 38
    39 40 41 43 62 63
tipo_l (55)
    en la izquierda: 37 38, en la derecha: 9 38 40
args (56)
    en la izquierda: 39 40, en la derecha: 63 65
init (57)
    en la izquierda: 41, en la derecha: 49
asign (58)
    en la izquierda: 42, en la derecha: 50
decl (59)
    en la izquierda: 43, en la derecha: 51
in (60)
    en la izquierda: 44 45, en la derecha: 70
is (61)
    en la izquierda: 46 47, en la derecha: 18
inst (62)
    en la izquierda: 48 49 50 51 52 53 54 55 56 57, en la derecha:
    58 59
inst_l (63)
    en la izquierda: 58 59, en la derecha: 5 59 61
bloque (64)
    en la izquierda: 60 61, en la derecha: 56 62 63 64 65 70 71 72
    73 74 75 76 77 78
func (65)
    en la izquierda: 62 63 64 65, en la derecha: 4
cases (66)
    en la izquierda: 66 67, en la derecha: 67 68 69
when (67)
    en la izquierda: 68 69, en la derecha: 52
for (68)
    en la izquierda: 70, en la derecha: 53
if (69)
    en la izquierda: 71 72 73 74, en la derecha: 55
elif_l (70)
    en la izquierda: 75 76, en la derecha: 73 74 76
else (71)
    en la izquierda: 77, en la derecha: 72 74
while (72)
    en la izquierda: 78, en la derecha: 54
rango (73)
    en la izquierda: 79 80, en la derecha: 44 45 69


Estado 0

    0 $accept: . lista $end

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 10
    LONG           desplazar e ir al estado 11
    FLOAT          desplazar e ir al estado 12
    DOUBLE         desplazar e ir al estado 13
    BOOL           desplazar e ir al estado 14
    STRING         desplazar e ir al estado 15
    VOID           desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 17
    WHEN           desplazar e ir al estado 18
    IF             desplazar e ir al estado 19
    WHILE          desplazar e ir al estado 20
    FOR            desplazar e ir al estado 21
    RETURN         desplazar e ir al estado 22
    ABREBLOQUE     desplazar e ir al estado 23
    '('            desplazar e ir al estado 24

    $end  reduce usando la regla 3 (lista)

    lista       ir al estado 25
    tupla       ir al estado 26
    tupla_decl  ir al estado 27
    func_call   ir al estado 28
    exp         ir al estado 29
    tipo        ir al estado 30
    init        ir al estado 31
    asign       ir al estado 32
    decl        ir al estado 33
    is          ir al estado 34
    inst        ir al estado 35
    inst_l      ir al estado 36
    bloque      ir al estado 37
    func        ir al estado 38
    when        ir al estado 39
    for         ir al estado 40
    if          ir al estado 41
    while       ir al estado 42


Estado 1

    2 lista: error . FIN_DE_LINEA $@1 lista

    FIN_DE_LINEA  desplazar e ir al estado 43


Estado 2

   21 exp: VALOR_FLOAT .

    $default  reduce usando la regla 21 (exp)


Estado 3

   22 exp: VALOR_DOUBLE .

    $default  reduce usando la regla 22 (exp)


Estado 4

   20 exp: VALOR_INT .

    $default  reduce usando la regla 20 (exp)


Estado 5

   24 exp: VALOR_BOOL .

    $default  reduce usando la regla 24 (exp)


Estado 6

   23 exp: VALOR_LONG .

    $default  reduce usando la regla 23 (exp)


Estado 7

   25 exp: VALOR_CHAR .

    $default  reduce usando la regla 25 (exp)


Estado 8

   26 exp: VALOR_STRING .

    $default  reduce usando la regla 26 (exp)


Estado 9

   10 func_call: IDENTIFICADOR . tupla
   11          | IDENTIFICADOR . '(' ')'
   27 exp: IDENTIFICADOR .
   42 asign: IDENTIFICADOR . '=' exp

    '='  desplazar e ir al estado 44
    '('  desplazar e ir al estado 45

    $default  reduce usando la regla 27 (exp)

    tupla  ir al estado 46


Estado 10

   30 tipo: INT .

    $default  reduce usando la regla 30 (tipo)


Estado 11

   32 tipo: LONG .

    $default  reduce usando la regla 32 (tipo)


Estado 12

   31 tipo: FLOAT .

    $default  reduce usando la regla 31 (tipo)


Estado 13

   33 tipo: DOUBLE .

    $default  reduce usando la regla 33 (tipo)


Estado 14

   34 tipo: BOOL .

    $default  reduce usando la regla 34 (tipo)


Estado 15

   35 tipo: STRING .

    $default  reduce usando la regla 35 (tipo)


Estado 16

   64 func: VOID . IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   65     | VOID . IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 47


Estado 17

   36 tipo: CHAR .

    $default  reduce usando la regla 36 (tipo)


Estado 18

   68 when: WHEN . exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   69     | WHEN . rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 50
    is         ir al estado 34
    rango      ir al estado 51


Estado 19

   71 if: IF . exp ':' FIN_DE_LINEA bloque
   72   | IF . exp ':' FIN_DE_LINEA bloque else
   73   | IF . exp ':' FIN_DE_LINEA bloque elif_l
   74   | IF . exp ':' FIN_DE_LINEA bloque elif_l else

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 52
    is         ir al estado 34


Estado 20

   78 while: WHILE . exp ':' FIN_DE_LINEA bloque

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 53
    is         ir al estado 34


Estado 21

   70 for: FOR . in ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 54

    in  ir al estado 55


Estado 22

   57 inst: RETURN . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 56
    is         ir al estado 34


Estado 23

   60 bloque: ABREBLOQUE . CIERRABLOQUE
   61       | ABREBLOQUE . inst_l CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 10
    LONG           desplazar e ir al estado 11
    FLOAT          desplazar e ir al estado 12
    DOUBLE         desplazar e ir al estado 13
    BOOL           desplazar e ir al estado 14
    STRING         desplazar e ir al estado 15
    CHAR           desplazar e ir al estado 17
    WHEN           desplazar e ir al estado 18
    IF             desplazar e ir al estado 19
    WHILE          desplazar e ir al estado 20
    FOR            desplazar e ir al estado 21
    RETURN         desplazar e ir al estado 22
    ABREBLOQUE     desplazar e ir al estado 23
    CIERRABLOQUE   desplazar e ir al estado 57
    '('            desplazar e ir al estado 24

    tupla       ir al estado 26
    tupla_decl  ir al estado 27
    func_call   ir al estado 28
    exp         ir al estado 29
    tipo        ir al estado 58
    init        ir al estado 31
    asign       ir al estado 32
    decl        ir al estado 33
    is          ir al estado 34
    inst        ir al estado 35
    inst_l      ir al estado 59
    bloque      ir al estado 37
    when        ir al estado 39
    for         ir al estado 40
    if          ir al estado 41
    while       ir al estado 42


Estado 24

    8 tupla: '(' . exp_l ')'
    9 tupla_decl: '(' . tipo_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    INT            desplazar e ir al estado 10
    LONG           desplazar e ir al estado 11
    FLOAT          desplazar e ir al estado 12
    DOUBLE         desplazar e ir al estado 13
    BOOL           desplazar e ir al estado 14
    STRING         desplazar e ir al estado 15
    CHAR           desplazar e ir al estado 17
    '('            desplazar e ir al estado 24

    exp_l       ir al estado 60
    tupla       ir al estado 26
    tupla_decl  ir al estado 27
    func_call   ir al estado 28
    exp         ir al estado 61
    tipo        ir al estado 62
    tipo_l      ir al estado 63
    is          ir al estado 34


Estado 25

    0 $accept: lista . $end

    $end  desplazar e ir al estado 64


Estado 26

   28 exp: tupla .

    $default  reduce usando la regla 28 (exp)


Estado 27

   29 tipo: tupla_decl .

    $default  reduce usando la regla 29 (tipo)


Estado 28

   19 exp: func_call .

    $default  reduce usando la regla 19 (exp)


Estado 29

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   48 inst: exp .

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 48 (inst)


Estado 30

   41 init: tipo . IDENTIFICADOR '=' exp
   43 decl: tipo . IDENTIFICADOR
   62 func: tipo . IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque
   63     | tipo . IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 73


Estado 31

   49 inst: init .

    $default  reduce usando la regla 49 (inst)


Estado 32

   50 inst: asign .

    $default  reduce usando la regla 50 (inst)


Estado 33

   51 inst: decl .

    $default  reduce usando la regla 51 (inst)


Estado 34

   18 exp: is .

    $default  reduce usando la regla 18 (exp)


Estado 35

   58 inst_l: inst . FIN_DE_LINEA
   59       | inst . FIN_DE_LINEA inst_l

    FIN_DE_LINEA  desplazar e ir al estado 74


Estado 36

    5 lista: inst_l . FIN_DE_LINEA lista

    FIN_DE_LINEA  desplazar e ir al estado 75


Estado 37

   56 inst: bloque .

    $default  reduce usando la regla 56 (inst)


Estado 38

    4 lista: func . FIN_DE_LINEA lista

    FIN_DE_LINEA  desplazar e ir al estado 76


Estado 39

   52 inst: when .

    $default  reduce usando la regla 52 (inst)


Estado 40

   53 inst: for .

    $default  reduce usando la regla 53 (inst)


Estado 41

   55 inst: if .

    $default  reduce usando la regla 55 (inst)


Estado 42

   54 inst: while .

    $default  reduce usando la regla 54 (inst)


Estado 43

    2 lista: error FIN_DE_LINEA . $@1 lista

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 77


Estado 44

   42 asign: IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 78
    is         ir al estado 34


Estado 45

    8 tupla: '(' . exp_l ')'
   11 func_call: IDENTIFICADOR '(' . ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49
    ')'            desplazar e ir al estado 79

    exp_l      ir al estado 60
    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 61
    is         ir al estado 34


Estado 46

   10 func_call: IDENTIFICADOR tupla .

    $default  reduce usando la regla 10 (func_call)


Estado 47

   64 func: VOID IDENTIFICADOR . '(' ')' ':' FIN_DE_LINEA bloque
   65     | VOID IDENTIFICADOR . '(' args ')' ':' FIN_DE_LINEA bloque

    '('  desplazar e ir al estado 80


Estado 48

   10 func_call: IDENTIFICADOR . tupla
   11          | IDENTIFICADOR . '(' ')'
   27 exp: IDENTIFICADOR .

    '('  desplazar e ir al estado 45

    $default  reduce usando la regla 27 (exp)

    tupla  ir al estado 46


Estado 49

    8 tupla: '(' . exp_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    exp_l      ir al estado 60
    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 61
    is         ir al estado 34


Estado 50

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   68 when: WHEN exp . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   79 rango: exp . RANGE exp
   80      | exp . RANGE exp ',' exp

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    RANGE  desplazar e ir al estado 81
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72
    ':'    desplazar e ir al estado 82


Estado 51

   69 when: WHEN rango . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    ':'  desplazar e ir al estado 83


Estado 52

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   71 if: IF exp . ':' FIN_DE_LINEA bloque
   72   | IF exp . ':' FIN_DE_LINEA bloque else
   73   | IF exp . ':' FIN_DE_LINEA bloque elif_l
   74   | IF exp . ':' FIN_DE_LINEA bloque elif_l else

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72
    ':'    desplazar e ir al estado 84


Estado 53

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   78 while: WHILE exp . ':' FIN_DE_LINEA bloque

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72
    ':'    desplazar e ir al estado 85


Estado 54

   44 in: IDENTIFICADOR . IN rango
   45   | IDENTIFICADOR . NOTIN rango

    IN     desplazar e ir al estado 86
    NOTIN  desplazar e ir al estado 87


Estado 55

   70 for: FOR in . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 88


Estado 56

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   57 inst: RETURN exp .

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 57 (inst)


Estado 57

   60 bloque: ABREBLOQUE CIERRABLOQUE .

    $default  reduce usando la regla 60 (bloque)


Estado 58

   41 init: tipo . IDENTIFICADOR '=' exp
   43 decl: tipo . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 89


Estado 59

   61 bloque: ABREBLOQUE inst_l . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 90


Estado 60

    8 tupla: '(' exp_l . ')'

    ')'  desplazar e ir al estado 91


Estado 61

    6 exp_l: exp .
    7      | exp . ',' exp_l
   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    ','    desplazar e ir al estado 92
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 6 (exp_l)


Estado 62

   37 tipo_l: tipo .
   38       | tipo . ',' tipo_l

    ','  desplazar e ir al estado 93

    $default  reduce usando la regla 37 (tipo_l)


Estado 63

    9 tupla_decl: '(' tipo_l . ')'

    ')'  desplazar e ir al estado 94


Estado 64

    0 $accept: lista $end .

    $default  aceptar


Estado 65

   47 is: exp NOTIS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 95
    is         ir al estado 34


Estado 66

   46 is: exp IS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 96
    is         ir al estado 34


Estado 67

   17 exp: exp OR . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 97
    is         ir al estado 34


Estado 68

   16 exp: exp AND . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 98
    is         ir al estado 34


Estado 69

   12 exp: exp '-' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 99
    is         ir al estado 34


Estado 70

   13 exp: exp '+' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 100
    is         ir al estado 34


Estado 71

   15 exp: exp '*' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 101
    is         ir al estado 34


Estado 72

   14 exp: exp '/' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 102
    is         ir al estado 34


Estado 73

   41 init: tipo IDENTIFICADOR . '=' exp
   43 decl: tipo IDENTIFICADOR .
   62 func: tipo IDENTIFICADOR . '(' ')' ':' FIN_DE_LINEA bloque
   63     | tipo IDENTIFICADOR . '(' args ')' ':' FIN_DE_LINEA bloque

    '='  desplazar e ir al estado 103
    '('  desplazar e ir al estado 104

    $default  reduce usando la regla 43 (decl)


Estado 74

   58 inst_l: inst FIN_DE_LINEA .
   59       | inst FIN_DE_LINEA . inst_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 10
    LONG           desplazar e ir al estado 11
    FLOAT          desplazar e ir al estado 12
    DOUBLE         desplazar e ir al estado 13
    BOOL           desplazar e ir al estado 14
    STRING         desplazar e ir al estado 15
    CHAR           desplazar e ir al estado 17
    WHEN           desplazar e ir al estado 18
    IF             desplazar e ir al estado 19
    WHILE          desplazar e ir al estado 20
    FOR            desplazar e ir al estado 21
    RETURN         desplazar e ir al estado 22
    ABREBLOQUE     desplazar e ir al estado 23
    '('            desplazar e ir al estado 24

    $default  reduce usando la regla 58 (inst_l)

    tupla       ir al estado 26
    tupla_decl  ir al estado 27
    func_call   ir al estado 28
    exp         ir al estado 29
    tipo        ir al estado 58
    init        ir al estado 31
    asign       ir al estado 32
    decl        ir al estado 33
    is          ir al estado 34
    inst        ir al estado 35
    inst_l      ir al estado 105
    bloque      ir al estado 37
    when        ir al estado 39
    for         ir al estado 40
    if          ir al estado 41
    while       ir al estado 42


Estado 75

    5 lista: inst_l FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 10
    LONG           desplazar e ir al estado 11
    FLOAT          desplazar e ir al estado 12
    DOUBLE         desplazar e ir al estado 13
    BOOL           desplazar e ir al estado 14
    STRING         desplazar e ir al estado 15
    VOID           desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 17
    WHEN           desplazar e ir al estado 18
    IF             desplazar e ir al estado 19
    WHILE          desplazar e ir al estado 20
    FOR            desplazar e ir al estado 21
    RETURN         desplazar e ir al estado 22
    ABREBLOQUE     desplazar e ir al estado 23
    '('            desplazar e ir al estado 24

    $end  reduce usando la regla 3 (lista)

    lista       ir al estado 106
    tupla       ir al estado 26
    tupla_decl  ir al estado 27
    func_call   ir al estado 28
    exp         ir al estado 29
    tipo        ir al estado 30
    init        ir al estado 31
    asign       ir al estado 32
    decl        ir al estado 33
    is          ir al estado 34
    inst        ir al estado 35
    inst_l      ir al estado 36
    bloque      ir al estado 37
    func        ir al estado 38
    when        ir al estado 39
    for         ir al estado 40
    if          ir al estado 41
    while       ir al estado 42


Estado 76

    4 lista: func FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 10
    LONG           desplazar e ir al estado 11
    FLOAT          desplazar e ir al estado 12
    DOUBLE         desplazar e ir al estado 13
    BOOL           desplazar e ir al estado 14
    STRING         desplazar e ir al estado 15
    VOID           desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 17
    WHEN           desplazar e ir al estado 18
    IF             desplazar e ir al estado 19
    WHILE          desplazar e ir al estado 20
    FOR            desplazar e ir al estado 21
    RETURN         desplazar e ir al estado 22
    ABREBLOQUE     desplazar e ir al estado 23
    '('            desplazar e ir al estado 24

    $end  reduce usando la regla 3 (lista)

    lista       ir al estado 107
    tupla       ir al estado 26
    tupla_decl  ir al estado 27
    func_call   ir al estado 28
    exp         ir al estado 29
    tipo        ir al estado 30
    init        ir al estado 31
    asign       ir al estado 32
    decl        ir al estado 33
    is          ir al estado 34
    inst        ir al estado 35
    inst_l      ir al estado 36
    bloque      ir al estado 37
    func        ir al estado 38
    when        ir al estado 39
    for         ir al estado 40
    if          ir al estado 41
    while       ir al estado 42


Estado 77

    2 lista: error FIN_DE_LINEA $@1 . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 10
    LONG           desplazar e ir al estado 11
    FLOAT          desplazar e ir al estado 12
    DOUBLE         desplazar e ir al estado 13
    BOOL           desplazar e ir al estado 14
    STRING         desplazar e ir al estado 15
    VOID           desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 17
    WHEN           desplazar e ir al estado 18
    IF             desplazar e ir al estado 19
    WHILE          desplazar e ir al estado 20
    FOR            desplazar e ir al estado 21
    RETURN         desplazar e ir al estado 22
    ABREBLOQUE     desplazar e ir al estado 23
    '('            desplazar e ir al estado 24

    $end  reduce usando la regla 3 (lista)

    lista       ir al estado 108
    tupla       ir al estado 26
    tupla_decl  ir al estado 27
    func_call   ir al estado 28
    exp         ir al estado 29
    tipo        ir al estado 30
    init        ir al estado 31
    asign       ir al estado 32
    decl        ir al estado 33
    is          ir al estado 34
    inst        ir al estado 35
    inst_l      ir al estado 36
    bloque      ir al estado 37
    func        ir al estado 38
    when        ir al estado 39
    for         ir al estado 40
    if          ir al estado 41
    while       ir al estado 42


Estado 78

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   42 asign: IDENTIFICADOR '=' exp .
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 42 (asign)


Estado 79

   11 func_call: IDENTIFICADOR '(' ')' .

    $default  reduce usando la regla 11 (func_call)


Estado 80

   64 func: VOID IDENTIFICADOR '(' . ')' ':' FIN_DE_LINEA bloque
   65     | VOID IDENTIFICADOR '(' . args ')' ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 10
    LONG    desplazar e ir al estado 11
    FLOAT   desplazar e ir al estado 12
    DOUBLE  desplazar e ir al estado 13
    BOOL    desplazar e ir al estado 14
    STRING  desplazar e ir al estado 15
    CHAR    desplazar e ir al estado 17
    '('     desplazar e ir al estado 109
    ')'     desplazar e ir al estado 110

    tupla_decl  ir al estado 27
    tipo        ir al estado 111
    args        ir al estado 112


Estado 81

   79 rango: exp RANGE . exp
   80      | exp RANGE . exp ',' exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 113
    is         ir al estado 34


Estado 82

   68 when: WHEN exp ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 114


Estado 83

   69 when: WHEN rango ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 115


Estado 84

   71 if: IF exp ':' . FIN_DE_LINEA bloque
   72   | IF exp ':' . FIN_DE_LINEA bloque else
   73   | IF exp ':' . FIN_DE_LINEA bloque elif_l
   74   | IF exp ':' . FIN_DE_LINEA bloque elif_l else

    FIN_DE_LINEA  desplazar e ir al estado 116


Estado 85

   78 while: WHILE exp ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 117


Estado 86

   44 in: IDENTIFICADOR IN . rango

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 118
    is         ir al estado 34
    rango      ir al estado 119


Estado 87

   45 in: IDENTIFICADOR NOTIN . rango

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 118
    is         ir al estado 34
    rango      ir al estado 120


Estado 88

   70 for: FOR in ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 121


Estado 89

   41 init: tipo IDENTIFICADOR . '=' exp
   43 decl: tipo IDENTIFICADOR .

    '='  desplazar e ir al estado 103

    $default  reduce usando la regla 43 (decl)


Estado 90

   61 bloque: ABREBLOQUE inst_l CIERRABLOQUE .

    $default  reduce usando la regla 61 (bloque)


Estado 91

    8 tupla: '(' exp_l ')' .

    $default  reduce usando la regla 8 (tupla)


Estado 92

    7 exp_l: exp ',' . exp_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    exp_l      ir al estado 122
    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 61
    is         ir al estado 34


Estado 93

   38 tipo_l: tipo ',' . tipo_l

    INT     desplazar e ir al estado 10
    LONG    desplazar e ir al estado 11
    FLOAT   desplazar e ir al estado 12
    DOUBLE  desplazar e ir al estado 13
    BOOL    desplazar e ir al estado 14
    STRING  desplazar e ir al estado 15
    CHAR    desplazar e ir al estado 17
    '('     desplazar e ir al estado 109

    tupla_decl  ir al estado 27
    tipo        ir al estado 62
    tipo_l      ir al estado 123


Estado 94

    9 tupla_decl: '(' tipo_l ')' .

    $default  reduce usando la regla 9 (tupla_decl)


Estado 95

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   47   | exp NOTIS exp .

    '-'  desplazar e ir al estado 69
    '+'  desplazar e ir al estado 70
    '*'  desplazar e ir al estado 71
    '/'  desplazar e ir al estado 72

    $default  reduce usando la regla 47 (is)


Estado 96

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   46   | exp IS exp .
   47   | exp . NOTIS exp

    '-'  desplazar e ir al estado 69
    '+'  desplazar e ir al estado 70
    '*'  desplazar e ir al estado 71
    '/'  desplazar e ir al estado 72

    $default  reduce usando la regla 46 (is)


Estado 97

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   17    | exp OR exp .
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 17 (exp)


Estado 98

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   16    | exp AND exp .
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 16 (exp)


Estado 99

   12 exp: exp . '-' exp
   12    | exp '-' exp .
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    '*'  desplazar e ir al estado 71
    '/'  desplazar e ir al estado 72

    $default  reduce usando la regla 12 (exp)


Estado 100

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   13    | exp '+' exp .
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    '*'  desplazar e ir al estado 71
    '/'  desplazar e ir al estado 72

    $default  reduce usando la regla 13 (exp)


Estado 101

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   15    | exp '*' exp .
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    $default  reduce usando la regla 15 (exp)


Estado 102

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   14    | exp '/' exp .
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    $default  reduce usando la regla 14 (exp)


Estado 103

   41 init: tipo IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 124
    is         ir al estado 34


Estado 104

   62 func: tipo IDENTIFICADOR '(' . ')' ':' FIN_DE_LINEA bloque
   63     | tipo IDENTIFICADOR '(' . args ')' ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 10
    LONG    desplazar e ir al estado 11
    FLOAT   desplazar e ir al estado 12
    DOUBLE  desplazar e ir al estado 13
    BOOL    desplazar e ir al estado 14
    STRING  desplazar e ir al estado 15
    CHAR    desplazar e ir al estado 17
    '('     desplazar e ir al estado 109
    ')'     desplazar e ir al estado 125

    tupla_decl  ir al estado 27
    tipo        ir al estado 111
    args        ir al estado 126


Estado 105

   59 inst_l: inst FIN_DE_LINEA inst_l .

    $default  reduce usando la regla 59 (inst_l)


Estado 106

    5 lista: inst_l FIN_DE_LINEA lista .

    $default  reduce usando la regla 5 (lista)


Estado 107

    4 lista: func FIN_DE_LINEA lista .

    $default  reduce usando la regla 4 (lista)


Estado 108

    2 lista: error FIN_DE_LINEA $@1 lista .

    $default  reduce usando la regla 2 (lista)


Estado 109

    9 tupla_decl: '(' . tipo_l ')'

    INT     desplazar e ir al estado 10
    LONG    desplazar e ir al estado 11
    FLOAT   desplazar e ir al estado 12
    DOUBLE  desplazar e ir al estado 13
    BOOL    desplazar e ir al estado 14
    STRING  desplazar e ir al estado 15
    CHAR    desplazar e ir al estado 17
    '('     desplazar e ir al estado 109

    tupla_decl  ir al estado 27
    tipo        ir al estado 62
    tipo_l      ir al estado 63


Estado 110

   64 func: VOID IDENTIFICADOR '(' ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 127


Estado 111

   39 args: tipo . IDENTIFICADOR
   40     | tipo . IDENTIFICADOR ',' tipo_l

    IDENTIFICADOR  desplazar e ir al estado 128


Estado 112

   65 func: VOID IDENTIFICADOR '(' args . ')' ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 129


Estado 113

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   79 rango: exp RANGE exp .
   80      | exp RANGE exp . ',' exp

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    ','    desplazar e ir al estado 130
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 79 (rango)


Estado 114

   68 when: WHEN exp ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 131


Estado 115

   69 when: WHEN rango ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 132


Estado 116

   71 if: IF exp ':' FIN_DE_LINEA . bloque
   72   | IF exp ':' FIN_DE_LINEA . bloque else
   73   | IF exp ':' FIN_DE_LINEA . bloque elif_l
   74   | IF exp ':' FIN_DE_LINEA . bloque elif_l else

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 133


Estado 117

   78 while: WHILE exp ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 134


Estado 118

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   79 rango: exp . RANGE exp
   80      | exp . RANGE exp ',' exp

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    RANGE  desplazar e ir al estado 81
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72


Estado 119

   44 in: IDENTIFICADOR IN rango .

    $default  reduce usando la regla 44 (in)


Estado 120

   45 in: IDENTIFICADOR NOTIN rango .

    $default  reduce usando la regla 45 (in)


Estado 121

   70 for: FOR in ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 135


Estado 122

    7 exp_l: exp ',' exp_l .

    $default  reduce usando la regla 7 (exp_l)


Estado 123

   38 tipo_l: tipo ',' tipo_l .

    $default  reduce usando la regla 38 (tipo_l)


Estado 124

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   41 init: tipo IDENTIFICADOR '=' exp .
   46 is: exp . IS exp
   47   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 41 (init)


Estado 125

   62 func: tipo IDENTIFICADOR '(' ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 136


Estado 126

   63 func: tipo IDENTIFICADOR '(' args . ')' ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 137


Estado 127

   64 func: VOID IDENTIFICADOR '(' ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 138


Estado 128

   39 args: tipo IDENTIFICADOR .
   40     | tipo IDENTIFICADOR . ',' tipo_l

    ','  desplazar e ir al estado 139

    $default  reduce usando la regla 39 (args)


Estado 129

   65 func: VOID IDENTIFICADOR '(' args ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 140


Estado 130

   80 rango: exp RANGE exp ',' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 141
    is         ir al estado 34


Estado 131

   68 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 142
    is         ir al estado 34
    cases      ir al estado 143


Estado 132

   69 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 142
    is         ir al estado 34
    cases      ir al estado 144


Estado 133

   71 if: IF exp ':' FIN_DE_LINEA bloque .
   72   | IF exp ':' FIN_DE_LINEA bloque . else
   73   | IF exp ':' FIN_DE_LINEA bloque . elif_l
   74   | IF exp ':' FIN_DE_LINEA bloque . elif_l else

    ELIF  desplazar e ir al estado 145
    ELSE  desplazar e ir al estado 146

    $default  reduce usando la regla 71 (if)

    elif_l  ir al estado 147
    else    ir al estado 148


Estado 134

   78 while: WHILE exp ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 78 (while)


Estado 135

   70 for: FOR in ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 70 (for)


Estado 136

   62 func: tipo IDENTIFICADOR '(' ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 149


Estado 137

   63 func: tipo IDENTIFICADOR '(' args ')' . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 150


Estado 138

   64 func: VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 151


Estado 139

   40 args: tipo IDENTIFICADOR ',' . tipo_l

    INT     desplazar e ir al estado 10
    LONG    desplazar e ir al estado 11
    FLOAT   desplazar e ir al estado 12
    DOUBLE  desplazar e ir al estado 13
    BOOL    desplazar e ir al estado 14
    STRING  desplazar e ir al estado 15
    CHAR    desplazar e ir al estado 17
    '('     desplazar e ir al estado 109

    tupla_decl  ir al estado 27
    tipo        ir al estado 62
    tipo_l      ir al estado 152


Estado 140

   65 func: VOID IDENTIFICADOR '(' args ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 153


Estado 141

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   80 rango: exp RANGE exp ',' exp .

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72

    $default  reduce usando la regla 80 (rango)


Estado 142

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   66 cases: exp . WHEN_CASE exp
   67      | exp . WHEN_CASE exp FIN_DE_LINEA cases

    WHEN_CASE  desplazar e ir al estado 154
    NOTIS      desplazar e ir al estado 65
    IS         desplazar e ir al estado 66
    OR         desplazar e ir al estado 67
    AND        desplazar e ir al estado 68
    '-'        desplazar e ir al estado 69
    '+'        desplazar e ir al estado 70
    '*'        desplazar e ir al estado 71
    '/'        desplazar e ir al estado 72


Estado 143

   68 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 155


Estado 144

   69 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 156


Estado 145

   75 elif_l: ELIF . exp ':' FIN_DE_LINEA bloque
   76       | ELIF . exp ':' FIN_DE_LINEA bloque elif_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 157
    is         ir al estado 34


Estado 146

   77 else: ELSE . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 158


Estado 147

   73 if: IF exp ':' FIN_DE_LINEA bloque elif_l .
   74   | IF exp ':' FIN_DE_LINEA bloque elif_l . else

    ELSE  desplazar e ir al estado 146

    $default  reduce usando la regla 73 (if)

    else  ir al estado 159


Estado 148

   72 if: IF exp ':' FIN_DE_LINEA bloque else .

    $default  reduce usando la regla 72 (if)


Estado 149

   62 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 160


Estado 150

   63 func: tipo IDENTIFICADOR '(' args ')' ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 161


Estado 151

   64 func: VOID IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 64 (func)


Estado 152

   40 args: tipo IDENTIFICADOR ',' tipo_l .

    $default  reduce usando la regla 40 (args)


Estado 153

   65 func: VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 162


Estado 154

   66 cases: exp WHEN_CASE . exp
   67      | exp WHEN_CASE . exp FIN_DE_LINEA cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 163
    is         ir al estado 34


Estado 155

   68 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 68 (when)


Estado 156

   69 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 69 (when)


Estado 157

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   75 elif_l: ELIF exp . ':' FIN_DE_LINEA bloque
   76       | ELIF exp . ':' FIN_DE_LINEA bloque elif_l

    NOTIS  desplazar e ir al estado 65
    IS     desplazar e ir al estado 66
    OR     desplazar e ir al estado 67
    AND    desplazar e ir al estado 68
    '-'    desplazar e ir al estado 69
    '+'    desplazar e ir al estado 70
    '*'    desplazar e ir al estado 71
    '/'    desplazar e ir al estado 72
    ':'    desplazar e ir al estado 164


Estado 158

   77 else: ELSE ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 165


Estado 159

   74 if: IF exp ':' FIN_DE_LINEA bloque elif_l else .

    $default  reduce usando la regla 74 (if)


Estado 160

   62 func: tipo IDENTIFICADOR '(' ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 62 (func)


Estado 161

   63 func: tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 166


Estado 162

   65 func: VOID IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 65 (func)


Estado 163

   12 exp: exp . '-' exp
   13    | exp . '+' exp
   14    | exp . '/' exp
   15    | exp . '*' exp
   16    | exp . AND exp
   17    | exp . OR exp
   46 is: exp . IS exp
   47   | exp . NOTIS exp
   66 cases: exp WHEN_CASE exp .
   67      | exp WHEN_CASE exp . FIN_DE_LINEA cases

    FIN_DE_LINEA  desplazar e ir al estado 167
    NOTIS         desplazar e ir al estado 65
    IS            desplazar e ir al estado 66
    OR            desplazar e ir al estado 67
    AND           desplazar e ir al estado 68
    '-'           desplazar e ir al estado 69
    '+'           desplazar e ir al estado 70
    '*'           desplazar e ir al estado 71
    '/'           desplazar e ir al estado 72

    $default  reduce usando la regla 66 (cases)


Estado 164

   75 elif_l: ELIF exp ':' . FIN_DE_LINEA bloque
   76       | ELIF exp ':' . FIN_DE_LINEA bloque elif_l

    FIN_DE_LINEA  desplazar e ir al estado 168


Estado 165

   77 else: ELSE ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 169


Estado 166

   63 func: tipo IDENTIFICADOR '(' args ')' ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 63 (func)


Estado 167

   67 cases: exp WHEN_CASE exp FIN_DE_LINEA . cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 48
    '('            desplazar e ir al estado 49

    tupla      ir al estado 26
    func_call  ir al estado 28
    exp        ir al estado 142
    is         ir al estado 34
    cases      ir al estado 170


Estado 168

   75 elif_l: ELIF exp ':' FIN_DE_LINEA . bloque
   76       | ELIF exp ':' FIN_DE_LINEA . bloque elif_l

    ABREBLOQUE  desplazar e ir al estado 23

    bloque  ir al estado 171


Estado 169

   77 else: ELSE ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 77 (else)


Estado 170

   67 cases: exp WHEN_CASE exp FIN_DE_LINEA cases .

    $default  reduce usando la regla 67 (cases)


Estado 171

   75 elif_l: ELIF exp ':' FIN_DE_LINEA bloque .
   76       | ELIF exp ':' FIN_DE_LINEA bloque . elif_l

    ELIF  desplazar e ir al estado 145

    $default  reduce usando la regla 75 (elif_l)

    elif_l  ir al estado 172


Estado 172

   76 elif_l: ELIF exp ':' FIN_DE_LINEA bloque elif_l .

    $default  reduce usando la regla 76 (elif_l)
