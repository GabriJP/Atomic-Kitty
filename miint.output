Gram√°tica

    0 $accept: lista $end

    1 $@1: %empty

    2 lista: error FIN_DE_LINEA $@1 lista
    3      | FIN_DE_LINEA lista
    4      | %empty
    5      | func lista
    6      | inst_l FIN_DE_LINEA lista
    7      | inst_l

    8 exp_l: exp
    9      | exp ',' exp_l

   10 tupla: '(' exp_l ')'

   11 tupla_decl: '(' tipo_l ')'

   12 func_call: IDENTIFICADOR tupla
   13          | IDENTIFICADOR '(' ')'

   14 exp: exp '-' exp
   15    | exp '+' exp
   16    | exp '/' exp
   17    | exp '*' exp
   18    | exp AND exp
   19    | exp OR exp
   20    | is
   21    | func_call
   22    | VALOR_INT
   23    | VALOR_FLOAT
   24    | VALOR_DOUBLE
   25    | VALOR_LONG
   26    | VALOR_BOOL
   27    | VALOR_CHAR
   28    | VALOR_STRING
   29    | IDENTIFICADOR
   30    | tupla
   31    | IDENTIFICADOR ACCESO

   32 tipo: tupla_decl
   33     | INT
   34     | FLOAT
   35     | LONG
   36     | DOUBLE
   37     | BOOL
   38     | STRING
   39     | CHAR

   40 tipo_l: tipo
   41       | tipo ',' tipo_l

   42 args: tipo IDENTIFICADOR
   43     | tipo IDENTIFICADOR ',' args

   44 init: tipo IDENTIFICADOR '=' exp

   45 asign: IDENTIFICADOR '=' exp

   46 decl: tipo IDENTIFICADOR

   47 in: IDENTIFICADOR IN rango
   48   | IDENTIFICADOR NOTIN rango

   49 is: exp IS exp
   50   | exp NOTIS exp

   51 inst: exp
   52     | init
   53     | asign
   54     | decl
   55     | when
   56     | for
   57     | while
   58     | if
   59     | bloque
   60     | RETURN exp

   61 inst_l: inst FIN_DE_LINEA
   62       | inst FIN_DE_LINEA inst_l

   63 $@2: %empty

   64 bloque: ABREBLOQUE $@2 dentroBloque CIERRABLOQUE

   65 dentroBloque: inst_l
   66             | inst

   67 $@3: %empty

   68 func: tipo IDENTIFICADOR '(' ')' $@3 ':' FIN_DE_LINEA bloque

   69 $@4: %empty

   70 func: tipo IDENTIFICADOR '(' args ')' $@4 ':' FIN_DE_LINEA bloque

   71 $@5: %empty

   72 func: VOID IDENTIFICADOR '(' ')' $@5 ':' FIN_DE_LINEA bloque

   73 $@6: %empty

   74 func: VOID IDENTIFICADOR '(' args ')' $@6 ':' FIN_DE_LINEA bloque

   75 cases: exp WHEN_CASE exp
   76      | exp WHEN_CASE exp FIN_DE_LINEA cases

   77 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   78     | WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

   79 for: FOR in ':' FIN_DE_LINEA bloque

   80 if: IF exp ':' FIN_DE_LINEA bloque
   81   | IF exp ':' FIN_DE_LINEA bloque else
   82   | IF exp ':' FIN_DE_LINEA bloque elif_l
   83   | IF exp ':' FIN_DE_LINEA bloque elif_l else

   84 elif_l: ELIF exp ':' FIN_DE_LINEA bloque
   85       | ELIF exp ':' FIN_DE_LINEA bloque elif_l

   86 else: ELSE ':' FIN_DE_LINEA bloque

   87 while: WHILE exp ':' FIN_DE_LINEA bloque

   88 rango: exp RANGE exp
   89      | exp RANGE exp ',' exp


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 10 11 13 68 70 72 74
')' (41) 10 11 13 68 70 72 74
'*' (42) 17
'+' (43) 15
',' (44) 9 41 43 89
'-' (45) 14
'/' (47) 16
':' (58) 68 70 72 74 77 78 79 80 81 82 83 84 85 86 87
'=' (61) 44 45
error (256) 2
VALOR_FLOAT (258) 23
VALOR_DOUBLE (259) 24
VALOR_INT (260) 22
VALOR_BOOL (261) 26
VALOR_LONG (262) 25
VALOR_CHAR (263) 27
VALOR_STRING (264) 28
IDENTIFICADOR (265) 12 13 29 31 42 43 44 45 46 47 48 68 70 72 74
FIN_DE_LINEA (266) 2 3 6 61 62 68 70 72 74 76 77 78 79 80 81 82 83
    84 85 86 87
INT (267) 33
LONG (268) 35
FLOAT (269) 34
DOUBLE (270) 36
BOOL (271) 37
STRING (272) 38
VOID (273) 72 74
CHAR (274) 39
WHEN (275) 77 78
WHEN_CASE (276) 75 76
IF (277) 80 81 82 83
ELIF (278) 84 85
ELSE (279) 86
WHILE (280) 87
FOR (281) 79
NOTIS (282) 50
IS (283) 49
OR (284) 19
AND (285) 18
RANGE (286) 88 89
RETURN (287) 60
ABREBLOQUE (288) 64 77 78
CIERRABLOQUE (289) 64 77 78
IN (290) 47
NOTIN (291) 48
ACCESO (292) 31


No terminales con las reglas donde aparecen

$accept (47)
    en la izquierda: 0
lista (48)
    en la izquierda: 2 3 4 5 6 7, en la derecha: 0 2 3 5 6
$@1 (49)
    en la izquierda: 1, en la derecha: 2
exp_l (50)
    en la izquierda: 8 9, en la derecha: 9 10
tupla (51)
    en la izquierda: 10, en la derecha: 12 30
tupla_decl (52)
    en la izquierda: 11, en la derecha: 32
func_call (53)
    en la izquierda: 12 13, en la derecha: 21
exp (54)
    en la izquierda: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31, en la derecha: 8 9 14 15 16 17 18 19 44 45 49 50 51 60 75
    76 77 80 81 82 83 84 85 87 88 89
tipo (55)
    en la izquierda: 32 33 34 35 36 37 38 39, en la derecha: 40 41
    42 43 44 46 68 70
tipo_l (56)
    en la izquierda: 40 41, en la derecha: 11 41
args (57)
    en la izquierda: 42 43, en la derecha: 43 70 74
init (58)
    en la izquierda: 44, en la derecha: 52
asign (59)
    en la izquierda: 45, en la derecha: 53
decl (60)
    en la izquierda: 46, en la derecha: 54
in (61)
    en la izquierda: 47 48, en la derecha: 79
is (62)
    en la izquierda: 49 50, en la derecha: 20
inst (63)
    en la izquierda: 51 52 53 54 55 56 57 58 59 60, en la derecha:
    61 62 66
inst_l (64)
    en la izquierda: 61 62, en la derecha: 6 7 62 65
bloque (65)
    en la izquierda: 64, en la derecha: 59 68 70 72 74 79 80 81 82
    83 84 85 86 87
$@2 (66)
    en la izquierda: 63, en la derecha: 64
dentroBloque (67)
    en la izquierda: 65 66, en la derecha: 64
func (68)
    en la izquierda: 68 70 72 74, en la derecha: 5
$@3 (69)
    en la izquierda: 67, en la derecha: 68
$@4 (70)
    en la izquierda: 69, en la derecha: 70
$@5 (71)
    en la izquierda: 71, en la derecha: 72
$@6 (72)
    en la izquierda: 73, en la derecha: 74
cases (73)
    en la izquierda: 75 76, en la derecha: 76 77 78
when (74)
    en la izquierda: 77 78, en la derecha: 55
for (75)
    en la izquierda: 79, en la derecha: 56
if (76)
    en la izquierda: 80 81 82 83, en la derecha: 58
elif_l (77)
    en la izquierda: 84 85, en la derecha: 82 83 85
else (78)
    en la izquierda: 86, en la derecha: 81 83
while (79)
    en la izquierda: 87, en la derecha: 57
rango (80)
    en la izquierda: 88 89, en la derecha: 47 48 78


Estado 0

    0 $accept: . lista $end

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 26
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 1

    2 lista: error . FIN_DE_LINEA $@1 lista

    FIN_DE_LINEA  desplazar e ir al estado 44


Estado 2

   23 exp: VALOR_FLOAT .

    $default  reduce usando la regla 23 (exp)


Estado 3

   24 exp: VALOR_DOUBLE .

    $default  reduce usando la regla 24 (exp)


Estado 4

   22 exp: VALOR_INT .

    $default  reduce usando la regla 22 (exp)


Estado 5

   26 exp: VALOR_BOOL .

    $default  reduce usando la regla 26 (exp)


Estado 6

   25 exp: VALOR_LONG .

    $default  reduce usando la regla 25 (exp)


Estado 7

   27 exp: VALOR_CHAR .

    $default  reduce usando la regla 27 (exp)


Estado 8

   28 exp: VALOR_STRING .

    $default  reduce usando la regla 28 (exp)


Estado 9

   12 func_call: IDENTIFICADOR . tupla
   13          | IDENTIFICADOR . '(' ')'
   29 exp: IDENTIFICADOR .
   31    | IDENTIFICADOR . ACCESO
   45 asign: IDENTIFICADOR . '=' exp

    ACCESO  desplazar e ir al estado 45
    '='     desplazar e ir al estado 46
    '('     desplazar e ir al estado 47

    $default  reduce usando la regla 29 (exp)

    tupla  ir al estado 48


Estado 10

    3 lista: FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 49
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 11

   33 tipo: INT .

    $default  reduce usando la regla 33 (tipo)


Estado 12

   35 tipo: LONG .

    $default  reduce usando la regla 35 (tipo)


Estado 13

   34 tipo: FLOAT .

    $default  reduce usando la regla 34 (tipo)


Estado 14

   36 tipo: DOUBLE .

    $default  reduce usando la regla 36 (tipo)


Estado 15

   37 tipo: BOOL .

    $default  reduce usando la regla 37 (tipo)


Estado 16

   38 tipo: STRING .

    $default  reduce usando la regla 38 (tipo)


Estado 17

   72 func: VOID . IDENTIFICADOR '(' ')' $@5 ':' FIN_DE_LINEA bloque
   74     | VOID . IDENTIFICADOR '(' args ')' $@6 ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 50


Estado 18

   39 tipo: CHAR .

    $default  reduce usando la regla 39 (tipo)


Estado 19

   77 when: WHEN . exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   78     | WHEN . rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 53
    is         ir al estado 35
    rango      ir al estado 54


Estado 20

   80 if: IF . exp ':' FIN_DE_LINEA bloque
   81   | IF . exp ':' FIN_DE_LINEA bloque else
   82   | IF . exp ':' FIN_DE_LINEA bloque elif_l
   83   | IF . exp ':' FIN_DE_LINEA bloque elif_l else

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 55
    is         ir al estado 35


Estado 21

   87 while: WHILE . exp ':' FIN_DE_LINEA bloque

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 56
    is         ir al estado 35


Estado 22

   79 for: FOR . in ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 57

    in  ir al estado 58


Estado 23

   60 inst: RETURN . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 59
    is         ir al estado 35


Estado 24

   64 bloque: ABREBLOQUE . $@2 dentroBloque CIERRABLOQUE

    $default  reduce usando la regla 63 ($@2)

    $@2  ir al estado 60


Estado 25

   10 tupla: '(' . exp_l ')'
   11 tupla_decl: '(' . tipo_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    '('            desplazar e ir al estado 25

    exp_l       ir al estado 61
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 62
    tipo        ir al estado 63
    tipo_l      ir al estado 64
    is          ir al estado 35


Estado 26

    0 $accept: lista . $end

    $end  desplazar e ir al estado 65


Estado 27

   30 exp: tupla .

    $default  reduce usando la regla 30 (exp)


Estado 28

   32 tipo: tupla_decl .

    $default  reduce usando la regla 32 (tipo)


Estado 29

   21 exp: func_call .

    $default  reduce usando la regla 21 (exp)


Estado 30

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   51 inst: exp .

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 51 (inst)


Estado 31

   44 init: tipo . IDENTIFICADOR '=' exp
   46 decl: tipo . IDENTIFICADOR
   68 func: tipo . IDENTIFICADOR '(' ')' $@3 ':' FIN_DE_LINEA bloque
   70     | tipo . IDENTIFICADOR '(' args ')' $@4 ':' FIN_DE_LINEA bloque

    IDENTIFICADOR  desplazar e ir al estado 74


Estado 32

   52 inst: init .

    $default  reduce usando la regla 52 (inst)


Estado 33

   53 inst: asign .

    $default  reduce usando la regla 53 (inst)


Estado 34

   54 inst: decl .

    $default  reduce usando la regla 54 (inst)


Estado 35

   20 exp: is .

    $default  reduce usando la regla 20 (exp)


Estado 36

   61 inst_l: inst . FIN_DE_LINEA
   62       | inst . FIN_DE_LINEA inst_l

    FIN_DE_LINEA  desplazar e ir al estado 75


Estado 37

    6 lista: inst_l . FIN_DE_LINEA lista
    7      | inst_l .

    FIN_DE_LINEA  desplazar e ir al estado 76

    $default  reduce usando la regla 7 (lista)


Estado 38

   59 inst: bloque .

    $default  reduce usando la regla 59 (inst)


Estado 39

    5 lista: func . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 77
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 40

   55 inst: when .

    $default  reduce usando la regla 55 (inst)


Estado 41

   56 inst: for .

    $default  reduce usando la regla 56 (inst)


Estado 42

   58 inst: if .

    $default  reduce usando la regla 58 (inst)


Estado 43

   57 inst: while .

    $default  reduce usando la regla 57 (inst)


Estado 44

    2 lista: error FIN_DE_LINEA . $@1 lista

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 78


Estado 45

   31 exp: IDENTIFICADOR ACCESO .

    $default  reduce usando la regla 31 (exp)


Estado 46

   45 asign: IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 79
    is         ir al estado 35


Estado 47

   10 tupla: '(' . exp_l ')'
   13 func_call: IDENTIFICADOR '(' . ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52
    ')'            desplazar e ir al estado 80

    exp_l      ir al estado 61
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 62
    is         ir al estado 35


Estado 48

   12 func_call: IDENTIFICADOR tupla .

    $default  reduce usando la regla 12 (func_call)


Estado 49

    3 lista: FIN_DE_LINEA lista .

    $default  reduce usando la regla 3 (lista)


Estado 50

   72 func: VOID IDENTIFICADOR . '(' ')' $@5 ':' FIN_DE_LINEA bloque
   74     | VOID IDENTIFICADOR . '(' args ')' $@6 ':' FIN_DE_LINEA bloque

    '('  desplazar e ir al estado 81


Estado 51

   12 func_call: IDENTIFICADOR . tupla
   13          | IDENTIFICADOR . '(' ')'
   29 exp: IDENTIFICADOR .
   31    | IDENTIFICADOR . ACCESO

    ACCESO  desplazar e ir al estado 45
    '('     desplazar e ir al estado 47

    $default  reduce usando la regla 29 (exp)

    tupla  ir al estado 48


Estado 52

   10 tupla: '(' . exp_l ')'

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    exp_l      ir al estado 61
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 62
    is         ir al estado 35


Estado 53

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   77 when: WHEN exp . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE
   88 rango: exp . RANGE exp
   89      | exp . RANGE exp ',' exp

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    RANGE  desplazar e ir al estado 82
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73
    ':'    desplazar e ir al estado 83


Estado 54

   78 when: WHEN rango . ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    ':'  desplazar e ir al estado 84


Estado 55

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   80 if: IF exp . ':' FIN_DE_LINEA bloque
   81   | IF exp . ':' FIN_DE_LINEA bloque else
   82   | IF exp . ':' FIN_DE_LINEA bloque elif_l
   83   | IF exp . ':' FIN_DE_LINEA bloque elif_l else

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73
    ':'    desplazar e ir al estado 85


Estado 56

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   87 while: WHILE exp . ':' FIN_DE_LINEA bloque

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73
    ':'    desplazar e ir al estado 86


Estado 57

   47 in: IDENTIFICADOR . IN rango
   48   | IDENTIFICADOR . NOTIN rango

    IN     desplazar e ir al estado 87
    NOTIN  desplazar e ir al estado 88


Estado 58

   79 for: FOR in . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 89


Estado 59

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   60 inst: RETURN exp .

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 60 (inst)


Estado 60

   64 bloque: ABREBLOQUE $@2 . dentroBloque CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    tupla         ir al estado 27
    tupla_decl    ir al estado 28
    func_call     ir al estado 29
    exp           ir al estado 30
    tipo          ir al estado 90
    init          ir al estado 32
    asign         ir al estado 33
    decl          ir al estado 34
    is            ir al estado 35
    inst          ir al estado 91
    inst_l        ir al estado 92
    bloque        ir al estado 38
    dentroBloque  ir al estado 93
    when          ir al estado 40
    for           ir al estado 41
    if            ir al estado 42
    while         ir al estado 43


Estado 61

   10 tupla: '(' exp_l . ')'

    ')'  desplazar e ir al estado 94


Estado 62

    8 exp_l: exp .
    9      | exp . ',' exp_l
   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    ','    desplazar e ir al estado 95
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 8 (exp_l)


Estado 63

   40 tipo_l: tipo .
   41       | tipo . ',' tipo_l

    ','  desplazar e ir al estado 96

    $default  reduce usando la regla 40 (tipo_l)


Estado 64

   11 tupla_decl: '(' tipo_l . ')'

    ')'  desplazar e ir al estado 97


Estado 65

    0 $accept: lista $end .

    $default  aceptar


Estado 66

   50 is: exp NOTIS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 98
    is         ir al estado 35


Estado 67

   49 is: exp IS . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 99
    is         ir al estado 35


Estado 68

   19 exp: exp OR . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 100
    is         ir al estado 35


Estado 69

   18 exp: exp AND . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 101
    is         ir al estado 35


Estado 70

   14 exp: exp '-' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 102
    is         ir al estado 35


Estado 71

   15 exp: exp '+' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 103
    is         ir al estado 35


Estado 72

   17 exp: exp '*' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 104
    is         ir al estado 35


Estado 73

   16 exp: exp '/' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 105
    is         ir al estado 35


Estado 74

   44 init: tipo IDENTIFICADOR . '=' exp
   46 decl: tipo IDENTIFICADOR .
   68 func: tipo IDENTIFICADOR . '(' ')' $@3 ':' FIN_DE_LINEA bloque
   70     | tipo IDENTIFICADOR . '(' args ')' $@4 ':' FIN_DE_LINEA bloque

    '='  desplazar e ir al estado 106
    '('  desplazar e ir al estado 107

    $default  reduce usando la regla 46 (decl)


Estado 75

   61 inst_l: inst FIN_DE_LINEA .
   62       | inst FIN_DE_LINEA . inst_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $default  reduce usando la regla 61 (inst_l)

    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 90
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 108
    bloque      ir al estado 38
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 76

    6 lista: inst_l FIN_DE_LINEA . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 109
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 77

    5 lista: func lista .

    $default  reduce usando la regla 5 (lista)


Estado 78

    2 lista: error FIN_DE_LINEA $@1 . lista

    error          desplazar e ir al estado 1
    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 9
    FIN_DE_LINEA   desplazar e ir al estado 10
    INT            desplazar e ir al estado 11
    LONG           desplazar e ir al estado 12
    FLOAT          desplazar e ir al estado 13
    DOUBLE         desplazar e ir al estado 14
    BOOL           desplazar e ir al estado 15
    STRING         desplazar e ir al estado 16
    VOID           desplazar e ir al estado 17
    CHAR           desplazar e ir al estado 18
    WHEN           desplazar e ir al estado 19
    IF             desplazar e ir al estado 20
    WHILE          desplazar e ir al estado 21
    FOR            desplazar e ir al estado 22
    RETURN         desplazar e ir al estado 23
    ABREBLOQUE     desplazar e ir al estado 24
    '('            desplazar e ir al estado 25

    $end  reduce usando la regla 4 (lista)

    lista       ir al estado 110
    tupla       ir al estado 27
    tupla_decl  ir al estado 28
    func_call   ir al estado 29
    exp         ir al estado 30
    tipo        ir al estado 31
    init        ir al estado 32
    asign       ir al estado 33
    decl        ir al estado 34
    is          ir al estado 35
    inst        ir al estado 36
    inst_l      ir al estado 37
    bloque      ir al estado 38
    func        ir al estado 39
    when        ir al estado 40
    for         ir al estado 41
    if          ir al estado 42
    while       ir al estado 43


Estado 79

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   45 asign: IDENTIFICADOR '=' exp .
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 45 (asign)


Estado 80

   13 func_call: IDENTIFICADOR '(' ')' .

    $default  reduce usando la regla 13 (func_call)


Estado 81

   72 func: VOID IDENTIFICADOR '(' . ')' $@5 ':' FIN_DE_LINEA bloque
   74     | VOID IDENTIFICADOR '(' . args ')' $@6 ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 111
    ')'     desplazar e ir al estado 112

    tupla_decl  ir al estado 28
    tipo        ir al estado 113
    args        ir al estado 114


Estado 82

   88 rango: exp RANGE . exp
   89      | exp RANGE . exp ',' exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 115
    is         ir al estado 35


Estado 83

   77 when: WHEN exp ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 116


Estado 84

   78 when: WHEN rango ':' . FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE

    FIN_DE_LINEA  desplazar e ir al estado 117


Estado 85

   80 if: IF exp ':' . FIN_DE_LINEA bloque
   81   | IF exp ':' . FIN_DE_LINEA bloque else
   82   | IF exp ':' . FIN_DE_LINEA bloque elif_l
   83   | IF exp ':' . FIN_DE_LINEA bloque elif_l else

    FIN_DE_LINEA  desplazar e ir al estado 118


Estado 86

   87 while: WHILE exp ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 119


Estado 87

   47 in: IDENTIFICADOR IN . rango

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 120
    is         ir al estado 35
    rango      ir al estado 121


Estado 88

   48 in: IDENTIFICADOR NOTIN . rango

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 120
    is         ir al estado 35
    rango      ir al estado 122


Estado 89

   79 for: FOR in ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 123


Estado 90

   44 init: tipo . IDENTIFICADOR '=' exp
   46 decl: tipo . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 124


Estado 91

   61 inst_l: inst . FIN_DE_LINEA
   62       | inst . FIN_DE_LINEA inst_l
   66 dentroBloque: inst .

    FIN_DE_LINEA  desplazar e ir al estado 75

    $default  reduce usando la regla 66 (dentroBloque)


Estado 92

   65 dentroBloque: inst_l .

    $default  reduce usando la regla 65 (dentroBloque)


Estado 93

   64 bloque: ABREBLOQUE $@2 dentroBloque . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 125


Estado 94

   10 tupla: '(' exp_l ')' .

    $default  reduce usando la regla 10 (tupla)


Estado 95

    9 exp_l: exp ',' . exp_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    exp_l      ir al estado 126
    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 62
    is         ir al estado 35


Estado 96

   41 tipo_l: tipo ',' . tipo_l

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 111

    tupla_decl  ir al estado 28
    tipo        ir al estado 63
    tipo_l      ir al estado 127


Estado 97

   11 tupla_decl: '(' tipo_l ')' .

    $default  reduce usando la regla 11 (tupla_decl)


Estado 98

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   50   | exp NOTIS exp .

    '-'  desplazar e ir al estado 70
    '+'  desplazar e ir al estado 71
    '*'  desplazar e ir al estado 72
    '/'  desplazar e ir al estado 73

    $default  reduce usando la regla 50 (is)


Estado 99

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   49   | exp IS exp .
   50   | exp . NOTIS exp

    '-'  desplazar e ir al estado 70
    '+'  desplazar e ir al estado 71
    '*'  desplazar e ir al estado 72
    '/'  desplazar e ir al estado 73

    $default  reduce usando la regla 49 (is)


Estado 100

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   19    | exp OR exp .
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 19 (exp)


Estado 101

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   18    | exp AND exp .
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 18 (exp)


Estado 102

   14 exp: exp . '-' exp
   14    | exp '-' exp .
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    '*'  desplazar e ir al estado 72
    '/'  desplazar e ir al estado 73

    $default  reduce usando la regla 14 (exp)


Estado 103

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   15    | exp '+' exp .
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    '*'  desplazar e ir al estado 72
    '/'  desplazar e ir al estado 73

    $default  reduce usando la regla 15 (exp)


Estado 104

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   17    | exp '*' exp .
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    $default  reduce usando la regla 17 (exp)


Estado 105

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   16    | exp '/' exp .
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    $default  reduce usando la regla 16 (exp)


Estado 106

   44 init: tipo IDENTIFICADOR '=' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 128
    is         ir al estado 35


Estado 107

   68 func: tipo IDENTIFICADOR '(' . ')' $@3 ':' FIN_DE_LINEA bloque
   70     | tipo IDENTIFICADOR '(' . args ')' $@4 ':' FIN_DE_LINEA bloque

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 111
    ')'     desplazar e ir al estado 129

    tupla_decl  ir al estado 28
    tipo        ir al estado 113
    args        ir al estado 130


Estado 108

   62 inst_l: inst FIN_DE_LINEA inst_l .

    $default  reduce usando la regla 62 (inst_l)


Estado 109

    6 lista: inst_l FIN_DE_LINEA lista .

    $default  reduce usando la regla 6 (lista)


Estado 110

    2 lista: error FIN_DE_LINEA $@1 lista .

    $default  reduce usando la regla 2 (lista)


Estado 111

   11 tupla_decl: '(' . tipo_l ')'

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 111

    tupla_decl  ir al estado 28
    tipo        ir al estado 63
    tipo_l      ir al estado 64


Estado 112

   72 func: VOID IDENTIFICADOR '(' ')' . $@5 ':' FIN_DE_LINEA bloque

    $default  reduce usando la regla 71 ($@5)

    $@5  ir al estado 131


Estado 113

   42 args: tipo . IDENTIFICADOR
   43     | tipo . IDENTIFICADOR ',' args

    IDENTIFICADOR  desplazar e ir al estado 132


Estado 114

   74 func: VOID IDENTIFICADOR '(' args . ')' $@6 ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 133


Estado 115

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   88 rango: exp RANGE exp .
   89      | exp RANGE exp . ',' exp

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    ','    desplazar e ir al estado 134
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 88 (rango)


Estado 116

   77 when: WHEN exp ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 135


Estado 117

   78 when: WHEN rango ':' FIN_DE_LINEA . ABREBLOQUE cases CIERRABLOQUE

    ABREBLOQUE  desplazar e ir al estado 136


Estado 118

   80 if: IF exp ':' FIN_DE_LINEA . bloque
   81   | IF exp ':' FIN_DE_LINEA . bloque else
   82   | IF exp ':' FIN_DE_LINEA . bloque elif_l
   83   | IF exp ':' FIN_DE_LINEA . bloque elif_l else

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 137


Estado 119

   87 while: WHILE exp ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 138


Estado 120

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   88 rango: exp . RANGE exp
   89      | exp . RANGE exp ',' exp

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    RANGE  desplazar e ir al estado 82
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73


Estado 121

   47 in: IDENTIFICADOR IN rango .

    $default  reduce usando la regla 47 (in)


Estado 122

   48 in: IDENTIFICADOR NOTIN rango .

    $default  reduce usando la regla 48 (in)


Estado 123

   79 for: FOR in ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 139


Estado 124

   44 init: tipo IDENTIFICADOR . '=' exp
   46 decl: tipo IDENTIFICADOR .

    '='  desplazar e ir al estado 106

    $default  reduce usando la regla 46 (decl)


Estado 125

   64 bloque: ABREBLOQUE $@2 dentroBloque CIERRABLOQUE .

    $default  reduce usando la regla 64 (bloque)


Estado 126

    9 exp_l: exp ',' exp_l .

    $default  reduce usando la regla 9 (exp_l)


Estado 127

   41 tipo_l: tipo ',' tipo_l .

    $default  reduce usando la regla 41 (tipo_l)


Estado 128

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   44 init: tipo IDENTIFICADOR '=' exp .
   49 is: exp . IS exp
   50   | exp . NOTIS exp

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 44 (init)


Estado 129

   68 func: tipo IDENTIFICADOR '(' ')' . $@3 ':' FIN_DE_LINEA bloque

    $default  reduce usando la regla 67 ($@3)

    $@3  ir al estado 140


Estado 130

   70 func: tipo IDENTIFICADOR '(' args . ')' $@4 ':' FIN_DE_LINEA bloque

    ')'  desplazar e ir al estado 141


Estado 131

   72 func: VOID IDENTIFICADOR '(' ')' $@5 . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 142


Estado 132

   42 args: tipo IDENTIFICADOR .
   43     | tipo IDENTIFICADOR . ',' args

    ','  desplazar e ir al estado 143

    $default  reduce usando la regla 42 (args)


Estado 133

   74 func: VOID IDENTIFICADOR '(' args ')' . $@6 ':' FIN_DE_LINEA bloque

    $default  reduce usando la regla 73 ($@6)

    $@6  ir al estado 144


Estado 134

   89 rango: exp RANGE exp ',' . exp

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 145
    is         ir al estado 35


Estado 135

   77 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 146
    is         ir al estado 35
    cases      ir al estado 147


Estado 136

   78 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE . cases CIERRABLOQUE

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 146
    is         ir al estado 35
    cases      ir al estado 148


Estado 137

   80 if: IF exp ':' FIN_DE_LINEA bloque .
   81   | IF exp ':' FIN_DE_LINEA bloque . else
   82   | IF exp ':' FIN_DE_LINEA bloque . elif_l
   83   | IF exp ':' FIN_DE_LINEA bloque . elif_l else

    ELIF  desplazar e ir al estado 149
    ELSE  desplazar e ir al estado 150

    $default  reduce usando la regla 80 (if)

    elif_l  ir al estado 151
    else    ir al estado 152


Estado 138

   87 while: WHILE exp ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 87 (while)


Estado 139

   79 for: FOR in ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 79 (for)


Estado 140

   68 func: tipo IDENTIFICADOR '(' ')' $@3 . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 153


Estado 141

   70 func: tipo IDENTIFICADOR '(' args ')' . $@4 ':' FIN_DE_LINEA bloque

    $default  reduce usando la regla 69 ($@4)

    $@4  ir al estado 154


Estado 142

   72 func: VOID IDENTIFICADOR '(' ')' $@5 ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 155


Estado 143

   43 args: tipo IDENTIFICADOR ',' . args

    INT     desplazar e ir al estado 11
    LONG    desplazar e ir al estado 12
    FLOAT   desplazar e ir al estado 13
    DOUBLE  desplazar e ir al estado 14
    BOOL    desplazar e ir al estado 15
    STRING  desplazar e ir al estado 16
    CHAR    desplazar e ir al estado 18
    '('     desplazar e ir al estado 111

    tupla_decl  ir al estado 28
    tipo        ir al estado 113
    args        ir al estado 156


Estado 144

   74 func: VOID IDENTIFICADOR '(' args ')' $@6 . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 157


Estado 145

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   89 rango: exp RANGE exp ',' exp .

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73

    $default  reduce usando la regla 89 (rango)


Estado 146

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   75 cases: exp . WHEN_CASE exp
   76      | exp . WHEN_CASE exp FIN_DE_LINEA cases

    WHEN_CASE  desplazar e ir al estado 158
    NOTIS      desplazar e ir al estado 66
    IS         desplazar e ir al estado 67
    OR         desplazar e ir al estado 68
    AND        desplazar e ir al estado 69
    '-'        desplazar e ir al estado 70
    '+'        desplazar e ir al estado 71
    '*'        desplazar e ir al estado 72
    '/'        desplazar e ir al estado 73


Estado 147

   77 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 159


Estado 148

   78 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases . CIERRABLOQUE

    CIERRABLOQUE  desplazar e ir al estado 160


Estado 149

   84 elif_l: ELIF . exp ':' FIN_DE_LINEA bloque
   85       | ELIF . exp ':' FIN_DE_LINEA bloque elif_l

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 161
    is         ir al estado 35


Estado 150

   86 else: ELSE . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 162


Estado 151

   82 if: IF exp ':' FIN_DE_LINEA bloque elif_l .
   83   | IF exp ':' FIN_DE_LINEA bloque elif_l . else

    ELSE  desplazar e ir al estado 150

    $default  reduce usando la regla 82 (if)

    else  ir al estado 163


Estado 152

   81 if: IF exp ':' FIN_DE_LINEA bloque else .

    $default  reduce usando la regla 81 (if)


Estado 153

   68 func: tipo IDENTIFICADOR '(' ')' $@3 ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 164


Estado 154

   70 func: tipo IDENTIFICADOR '(' args ')' $@4 . ':' FIN_DE_LINEA bloque

    ':'  desplazar e ir al estado 165


Estado 155

   72 func: VOID IDENTIFICADOR '(' ')' $@5 ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 166


Estado 156

   43 args: tipo IDENTIFICADOR ',' args .

    $default  reduce usando la regla 43 (args)


Estado 157

   74 func: VOID IDENTIFICADOR '(' args ')' $@6 ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 167


Estado 158

   75 cases: exp WHEN_CASE . exp
   76      | exp WHEN_CASE . exp FIN_DE_LINEA cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 168
    is         ir al estado 35


Estado 159

   77 when: WHEN exp ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 77 (when)


Estado 160

   78 when: WHEN rango ':' FIN_DE_LINEA ABREBLOQUE cases CIERRABLOQUE .

    $default  reduce usando la regla 78 (when)


Estado 161

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   84 elif_l: ELIF exp . ':' FIN_DE_LINEA bloque
   85       | ELIF exp . ':' FIN_DE_LINEA bloque elif_l

    NOTIS  desplazar e ir al estado 66
    IS     desplazar e ir al estado 67
    OR     desplazar e ir al estado 68
    AND    desplazar e ir al estado 69
    '-'    desplazar e ir al estado 70
    '+'    desplazar e ir al estado 71
    '*'    desplazar e ir al estado 72
    '/'    desplazar e ir al estado 73
    ':'    desplazar e ir al estado 169


Estado 162

   86 else: ELSE ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 170


Estado 163

   83 if: IF exp ':' FIN_DE_LINEA bloque elif_l else .

    $default  reduce usando la regla 83 (if)


Estado 164

   68 func: tipo IDENTIFICADOR '(' ')' $@3 ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 171


Estado 165

   70 func: tipo IDENTIFICADOR '(' args ')' $@4 ':' . FIN_DE_LINEA bloque

    FIN_DE_LINEA  desplazar e ir al estado 172


Estado 166

   72 func: VOID IDENTIFICADOR '(' ')' $@5 ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 72 (func)


Estado 167

   74 func: VOID IDENTIFICADOR '(' args ')' $@6 ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 173


Estado 168

   14 exp: exp . '-' exp
   15    | exp . '+' exp
   16    | exp . '/' exp
   17    | exp . '*' exp
   18    | exp . AND exp
   19    | exp . OR exp
   49 is: exp . IS exp
   50   | exp . NOTIS exp
   75 cases: exp WHEN_CASE exp .
   76      | exp WHEN_CASE exp . FIN_DE_LINEA cases

    FIN_DE_LINEA  desplazar e ir al estado 174
    NOTIS         desplazar e ir al estado 66
    IS            desplazar e ir al estado 67
    OR            desplazar e ir al estado 68
    AND           desplazar e ir al estado 69
    '-'           desplazar e ir al estado 70
    '+'           desplazar e ir al estado 71
    '*'           desplazar e ir al estado 72
    '/'           desplazar e ir al estado 73

    $default  reduce usando la regla 75 (cases)


Estado 169

   84 elif_l: ELIF exp ':' . FIN_DE_LINEA bloque
   85       | ELIF exp ':' . FIN_DE_LINEA bloque elif_l

    FIN_DE_LINEA  desplazar e ir al estado 175


Estado 170

   86 else: ELSE ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 176


Estado 171

   68 func: tipo IDENTIFICADOR '(' ')' $@3 ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 68 (func)


Estado 172

   70 func: tipo IDENTIFICADOR '(' args ')' $@4 ':' FIN_DE_LINEA . bloque

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 177


Estado 173

   74 func: VOID IDENTIFICADOR '(' args ')' $@6 ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 74 (func)


Estado 174

   76 cases: exp WHEN_CASE exp FIN_DE_LINEA . cases

    VALOR_FLOAT    desplazar e ir al estado 2
    VALOR_DOUBLE   desplazar e ir al estado 3
    VALOR_INT      desplazar e ir al estado 4
    VALOR_BOOL     desplazar e ir al estado 5
    VALOR_LONG     desplazar e ir al estado 6
    VALOR_CHAR     desplazar e ir al estado 7
    VALOR_STRING   desplazar e ir al estado 8
    IDENTIFICADOR  desplazar e ir al estado 51
    '('            desplazar e ir al estado 52

    tupla      ir al estado 27
    func_call  ir al estado 29
    exp        ir al estado 146
    is         ir al estado 35
    cases      ir al estado 178


Estado 175

   84 elif_l: ELIF exp ':' FIN_DE_LINEA . bloque
   85       | ELIF exp ':' FIN_DE_LINEA . bloque elif_l

    ABREBLOQUE  desplazar e ir al estado 24

    bloque  ir al estado 179


Estado 176

   86 else: ELSE ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 86 (else)


Estado 177

   70 func: tipo IDENTIFICADOR '(' args ')' $@4 ':' FIN_DE_LINEA bloque .

    $default  reduce usando la regla 70 (func)


Estado 178

   76 cases: exp WHEN_CASE exp FIN_DE_LINEA cases .

    $default  reduce usando la regla 76 (cases)


Estado 179

   84 elif_l: ELIF exp ':' FIN_DE_LINEA bloque .
   85       | ELIF exp ':' FIN_DE_LINEA bloque . elif_l

    ELIF  desplazar e ir al estado 149

    $default  reduce usando la regla 84 (elif_l)

    elif_l  ir al estado 180


Estado 180

   85 elif_l: ELIF exp ':' FIN_DE_LINEA bloque elif_l .

    $default  reduce usando la regla 85 (elif_l)
